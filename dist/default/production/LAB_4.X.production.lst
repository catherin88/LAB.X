

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 06 11:46:42 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.41
    46                           ; Generated 25/01/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	mediumconst
    81  007EBE                     __pmediumconst:
    82                           	opt stack 0
    83  007EBE  00                 	db	0
    84  007EBF                     _V_Time:
    85                           	opt stack 0
    86  007EBF  F3                 	db	243
    87  007EC0  79                 	db	121
    88  007EC1  50                 	db	80
    89  007EC2  3C                 	db	60
    90  007EC3  30                 	db	48
    91  007EC4  28                 	db	40
    92  007EC5  22                 	db	34
    93  007EC6  1E                 	db	30
    94  007EC7  1A                 	db	26
    95  007EC8  17                 	db	23
    96  007EC9  15                 	db	21
    97  007ECA  13                 	db	19
    98  007ECB  EF                 	db	239
    99  007ECC  DE                 	db	222
   100  007ECD  CF                 	db	207
   101  007ECE  C2                 	db	194
   102  007ECF  B7                 	db	183
   103  007ED0  AD                 	db	173
   104  007ED1  A3                 	db	163
   105  007ED2  9B                 	db	155
   106  007ED3  94                 	db	148
   107  007ED4  8D                 	db	141
   108  007ED5  87                 	db	135
   109  007ED6  81                 	db	129
   110  007ED7  F9                 	db	249
   111  007ED8  EF                 	db	239
   112  007ED9  E6                 	db	230
   113  007EDA  DE                 	db	222
   114  007EDB  D7                 	db	215
   115  007EDC  CF                 	db	207
   116  007EDD  C9                 	db	201
   117  007EDE  C2                 	db	194
   118  007EDF  BC                 	db	188
   119  007EE0  B7                 	db	183
   120  007EE1  B2                 	db	178
   121  007EE2  AD                 	db	173
   122  007EE3  A8                 	db	168
   123  007EE4  A3                 	db	163
   124  007EE5  9F                 	db	159
   125  007EE6  9B                 	db	155
   126  007EE7  97                 	db	151
   127  007EE8  94                 	db	148
   128  007EE9  90                 	db	144
   129  007EEA  8D                 	db	141
   130  007EEB  8A                 	db	138
   131  007EEC  87                 	db	135
   132  007EED  84                 	db	132
   133  007EEE  81                 	db	129
   134  007EEF  7F                 	db	127
   135  007EF0  7C                 	db	124
   136  007EF1  7A                 	db	122
   137  007EF2  77                 	db	119
   138  007EF3  75                 	db	117
   139  007EF4  73                 	db	115
   140  007EF5  71                 	db	113
   141  007EF6  6F                 	db	111
   142  007EF7  6D                 	db	109
   143  007EF8  6B                 	db	107
   144  007EF9  69                 	db	105
   145  007EFA  67                 	db	103
   146  007EFB  FF                 	db	255
   147  007EFC  FB                 	db	251
   148  007EFD  F7                 	db	247
   149  007EFE  F3                 	db	243
   150  007EFF  EF                 	db	239
   151  007F00  EC                 	db	236
   152  007F01  E8                 	db	232
   153  007F02  E5                 	db	229
   154  007F03  E1                 	db	225
   155  007F04  DE                 	db	222
   156  007F05  DB                 	db	219
   157  007F06  D8                 	db	216
   158  007F07  D5                 	db	213
   159  007F08  D2                 	db	210
   160  007F09  CF                 	db	207
   161  007F0A  CD                 	db	205
   162  007F0B  CA                 	db	202
   163  007F0C  C7                 	db	199
   164  007F0D  C5                 	db	197
   165  007F0E  C2                 	db	194
   166  007F0F  C0                 	db	192
   167  007F10  BE                 	db	190
   168  007F11  BB                 	db	187
   169  007F12  B9                 	db	185
   170  007F13  B7                 	db	183
   171  007F14  B5                 	db	181
   172  007F15  B3                 	db	179
   173  007F16  B1                 	db	177
   174  007F17  AF                 	db	175
   175  007F18  AD                 	db	173
   176  007F19  AB                 	db	171
   177  007F1A  A9                 	db	169
   178  007F1B  A7                 	db	167
   179  007F1C  A5                 	db	165
   180  007F1D  A3                 	db	163
   181  007F1E  A2                 	db	162
   182  007F1F  A0                 	db	160
   183  007F20  9E                 	db	158
   184  007F21  9D                 	db	157
   185  007F22  9B                 	db	155
   186  007F23  9A                 	db	154
   187  007F24  98                 	db	152
   188  007F25  97                 	db	151
   189  007F26  95                 	db	149
   190  007F27  94                 	db	148
   191  007F28  92                 	db	146
   192  007F29  91                 	db	145
   193  007F2A  90                 	db	144
   194  007F2B  8E                 	db	142
   195  007F2C  8D                 	db	141
   196  007F2D  8C                 	db	140
   197  007F2E  8B                 	db	139
   198  007F2F  89                 	db	137
   199  007F30  88                 	db	136
   200  007F31  87                 	db	135
   201  007F32  86                 	db	134
   202  007F33  85                 	db	133
   203  007F34  83                 	db	131
   204  007F35  82                 	db	130
   205  007F36  81                 	db	129
   206  007F37  80                 	db	128
   207  007F38  FF                 	db	255
   208  007F39  FD                 	db	253
   209  007F3A  FB                 	db	251
   210  007F3B  F9                 	db	249
   211  007F3C  F7                 	db	247
   212  007F3D  F5                 	db	245
   213  007F3E  F3                 	db	243
   214  007F3F  F1                 	db	241
   215  007F40  EF                 	db	239
   216  007F41  EE                 	db	238
   217  007F42  EC                 	db	236
   218  007F43  EA                 	db	234
   219  007F44  E8                 	db	232
   220  007F45  E6                 	db	230
   221  007F46  E5                 	db	229
   222  007F47  E3                 	db	227
   223  007F48  E1                 	db	225
   224  007F49  E0                 	db	224
   225  007F4A  DE                 	db	222
   226  007F4B  DD                 	db	221
   227  007F4C  DB                 	db	219
   228  007F4D  DA                 	db	218
   229  007F4E  D8                 	db	216
   230  007F4F  D7                 	db	215
   231  007F50  D5                 	db	213
   232  007F51  D4                 	db	212
   233  007F52  D2                 	db	210
   234  007F53  D1                 	db	209
   235  007F54  CF                 	db	207
   236  007F55  CE                 	db	206
   237  007F56  CD                 	db	205
   238  007F57  CB                 	db	203
   239  007F58  CA                 	db	202
   240  007F59  C9                 	db	201
   241  007F5A  C7                 	db	199
   242  007F5B  C6                 	db	198
   243  007F5C  C5                 	db	197
   244  007F5D  C4                 	db	196
   245  007F5E  C2                 	db	194
   246  007F5F  C1                 	db	193
   247  007F60  C0                 	db	192
   248  007F61  BF                 	db	191
   249  007F62  BE                 	db	190
   250  007F63  BC                 	db	188
   251  007F64  BB                 	db	187
   252  007F65  BA                 	db	186
   253  007F66  B9                 	db	185
   254  007F67  B8                 	db	184
   255  007F68  B7                 	db	183
   256  007F69  B6                 	db	182
   257  007F6A  B5                 	db	181
   258  007F6B  B4                 	db	180
   259  007F6C  B3                 	db	179
   260  007F6D  B2                 	db	178
   261  007F6E  B1                 	db	177
   262  007F6F  B0                 	db	176
   263  007F70  AF                 	db	175
   264  007F71  AE                 	db	174
   265  007F72  AD                 	db	173
   266  007F73  AC                 	db	172
   267  007F74  AB                 	db	171
   268  007F75  AA                 	db	170
   269  007F76  A9                 	db	169
   270  007F77  A8                 	db	168
   271  007F78  A7                 	db	167
   272  007F79  A6                 	db	166
   273  007F7A  A5                 	db	165
   274  007F7B  A4                 	db	164
   275  007F7C  A3                 	db	163
   276  007F7D  A3                 	db	163
   277  007F7E  A2                 	db	162
   278  007F7F  A1                 	db	161
   279  007F80  A0                 	db	160
   280  007F81  9F                 	db	159
   281  007F82  9E                 	db	158
   282  007F83  9E                 	db	158
   283  007F84  9D                 	db	157
   284  007F85  9C                 	db	156
   285  007F86  9B                 	db	155
   286  007F87  9A                 	db	154
   287  007F88  9A                 	db	154
   288  007F89  99                 	db	153
   289  007F8A  98                 	db	152
   290  007F8B  97                 	db	151
   291  007F8C  97                 	db	151
   292  007F8D  96                 	db	150
   293  007F8E  95                 	db	149
   294  007F8F  95                 	db	149
   295  007F90  94                 	db	148
   296  007F91  93                 	db	147
   297  007F92  92                 	db	146
   298  007F93  92                 	db	146
   299  007F94  91                 	db	145
   300  007F95  90                 	db	144
   301  007F96  90                 	db	144
   302  007F97  8F                 	db	143
   303  007F98  8E                 	db	142
   304  007F99  8E                 	db	142
   305  007F9A  8D                 	db	141
   306  007F9B  8C                 	db	140
   307  007F9C  8C                 	db	140
   308  007F9D  8B                 	db	139
   309  007F9E  8B                 	db	139
   310  007F9F  8A                 	db	138
   311  007FA0  89                 	db	137
   312  007FA1  89                 	db	137
   313  007FA2  88                 	db	136
   314  007FA3  87                 	db	135
   315  007FA4  87                 	db	135
   316  007FA5  86                 	db	134
   317  007FA6  86                 	db	134
   318  007FA7  85                 	db	133
   319  007FA8  85                 	db	133
   320  007FA9  84                 	db	132
   321  007FAA  83                 	db	131
   322  007FAB  83                 	db	131
   323  007FAC  82                 	db	130
   324  007FAD  82                 	db	130
   325  007FAE  81                 	db	129
   326  007FAF  81                 	db	129
   327  007FB0  80                 	db	128
   328  007FB1  80                 	db	128
   329  007FB2  7F                 	db	127
   330  007FB3  7F                 	db	127
   331  007FB4  7E                 	db	126
   332  007FB5  7E                 	db	126
   333  007FB6  7D                 	db	125
   334  007FB7  7D                 	db	125
   335  007FB8  7C                 	db	124
   336  007FB9  7C                 	db	124
   337  007FBA  7B                 	db	123
   338  007FBB  7B                 	db	123
   339  007FBC  7A                 	db	122
   340  007FBD  79                 	db	121
   341  007FBE                     __end_of_V_Time:
   342                           	opt stack 0
   343  007FBE                     _sine:
   344                           	opt stack 0
   345  007FBE  80                 	db	128
   346  007FBF  8C                 	db	140
   347  007FC0  98                 	db	152
   348  007FC1  A5                 	db	165
   349  007FC2  B0                 	db	176
   350  007FC3  BC                 	db	188
   351  007FC4  C6                 	db	198
   352  007FC5  D0                 	db	208
   353  007FC6  DA                 	db	218
   354  007FC7  E2                 	db	226
   355  007FC8  EA                 	db	234
   356  007FC9  F0                 	db	240
   357  007FCA  F5                 	db	245
   358  007FCB  FA                 	db	250
   359  007FCC  FD                 	db	253
   360  007FCD  FE                 	db	254
   361  007FCE  FF                 	db	255
   362  007FCF  FE                 	db	254
   363  007FD0  FD                 	db	253
   364  007FD1  FA                 	db	250
   365  007FD2  F5                 	db	245
   366  007FD3  F0                 	db	240
   367  007FD4  EA                 	db	234
   368  007FD5  E2                 	db	226
   369  007FD6  DA                 	db	218
   370  007FD7  D0                 	db	208
   371  007FD8  C6                 	db	198
   372  007FD9  BC                 	db	188
   373  007FDA  B0                 	db	176
   374  007FDB  A5                 	db	165
   375  007FDC  98                 	db	152
   376  007FDD  8C                 	db	140
   377  007FDE  80                 	db	128
   378  007FDF  73                 	db	115
   379  007FE0  67                 	db	103
   380  007FE1  5B                 	db	91
   381  007FE2  4F                 	db	79
   382  007FE3  43                 	db	67
   383  007FE4  39                 	db	57
   384  007FE5  2F                 	db	47
   385  007FE6  25                 	db	37
   386  007FE7  1D                 	db	29
   387  007FE8  16                 	db	22
   388  007FE9  0F                 	db	15
   389  007FEA  0A                 	db	10
   390  007FEB  05                 	db	5
   391  007FEC  02                 	db	2
   392  007FED  01                 	db	1
   393  007FEE  00                 	db	0
   394  007FEF  01                 	db	1
   395  007FF0  02                 	db	2
   396  007FF1  05                 	db	5
   397  007FF2  0A                 	db	10
   398  007FF3  0F                 	db	15
   399  007FF4  15                 	db	21
   400  007FF5  1D                 	db	29
   401  007FF6  25                 	db	37
   402  007FF7  2F                 	db	47
   403  007FF8  39                 	db	57
   404  007FF9  43                 	db	67
   405  007FFA  4F                 	db	79
   406  007FFB  5A                 	db	90
   407  007FFC  67                 	db	103
   408  007FFD  73                 	db	115
   409  007FFE                     __end_of_sine:
   410                           	opt stack 0
   411  0000                     _EECON2	set	4007
   412  0000                     _EEDATA	set	4008
   413  0000                     _EECON1bits	set	4006
   414  0000                     _EEADR	set	4009
   415  0000                     _PIE1bits	set	3997
   416  0000                     _IPR1bits	set	3999
   417  0000                     _PR2	set	4043
   418  0000                     _T2CON	set	4042
   419  0000                     _PORTD	set	3971
   420  0000                     _LATEbits	set	3981
   421  0000                     _SPPCFGbits	set	3939
   422  0000                     _SSPCON1bits	set	4038
   423  0000                     _CCP1CONbits	set	4029
   424  0000                     _LATE	set	3981
   425  0000                     _LATD	set	3980
   426  0000                     _TRISE	set	3990
   427  0000                     _TRISD	set	3989
   428  0000                     _INTCON2bits	set	4081
   429  0000                     _TRISB	set	3987
   430  0000                     _RCONbits	set	4048
   431  0000                     _PIR1bits	set	3998
   432  0000                     _LATC	set	3979
   433  0000                     _LATA	set	3977
   434  0000                     _LATB	set	3978
   435  0000                     _T2CONbits	set	4042
   436  0000                     _PORTB	set	3969
   437  0000                     _INTCONbits	set	4082
   438  0000                     _TRISC	set	3988
   439  0000                     _TRISA	set	3986
   440  0000                     _UCONbits	set	3949
   441  0000                     _CVRCONbits	set	4021
   442  0000                     _CMCON	set	4020
   443  0000                     _ADCON1	set	4033
   444  0000                     _OSCCON	set	4051
   445                           
   446                           ; #config settings
   447  007FFE  00                 	db	0	; dummy byte at the end
   448  0000                     
   449                           	psect	cinit
   450  000C4A                     __pcinit:
   451                           	opt stack 0
   452  000C4A                     start_initialization:
   453                           	opt stack 0
   454  000C4A                     __initialization:
   455                           	opt stack 0
   456                           
   457                           ; Clear objects allocated to COMRAM (22 bytes)
   458  000C4A  EE00  F02B         	lfsr	0,__pbssCOMRAM
   459  000C4E  0E16               	movlw	22
   460  000C50                     clear_0:
   461  000C50  6AEE               	clrf	postinc0,c
   462  000C52  06E8               	decf	wreg,f,c
   463  000C54  E1FD               	bnz	clear_0
   464  000C56                     end_of_initialization:
   465                           	opt stack 0
   466  000C56                     __end_of__initialization:
   467                           	opt stack 0
   468  000C56  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   469  000C58  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   470  000C5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   471  000C5C  6EF8               	movwf	tblptru,c
   472  000C5E  0100               	movlb	0
   473  000C60  EF1F  F005         	goto	_main	;jump to C main() function
   474                           tblptru	equ	0xFF8
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           
   478                           	psect	bssCOMRAM
   479  00002B                     __pbssCOMRAM:
   480                           	opt stack 0
   481  00002B                     conversor@F3848:
   482                           	opt stack 0
   483  00002B                     	ds	3
   484  00002E                     cambio_frec@F3840:
   485                           	opt stack 0
   486  00002E                     	ds	3
   487  000031                     Mensaje_LCD@F3825:
   488                           	opt stack 0
   489  000031                     	ds	3
   490  000034                     _Freq:
   491                           	opt stack 0
   492  000034                     	ds	3
   493  000037                     _Tecla:
   494                           	opt stack 0
   495  000037                     	ds	3
   496  00003A                     _j:
   497                           	opt stack 0
   498  00003A                     	ds	1
   499  00003B                     _flag_cambio:
   500                           	opt stack 0
   501  00003B                     	ds	1
   502  00003C                     _V_Puerto2:
   503                           	opt stack 0
   504  00003C                     	ds	1
   505  00003D                     _V_Puerto1:
   506                           	opt stack 0
   507  00003D                     	ds	1
   508  00003E                     _Senal:
   509                           	opt stack 0
   510  00003E                     	ds	1
   511  00003F                     _Frecuencia:
   512                           	opt stack 0
   513  00003F                     	ds	1
   514  000040                     _Aux_T:
   515                           	opt stack 0
   516  000040                     	ds	1
   517                           tblptru	equ	0xFF8
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           
   521                           	psect	cstackBANK0
   522  000060                     __pcstackBANK0:
   523                           	opt stack 0
   524  000060                     ??_retardos:
   525  000060                     osc_config@parametro:
   526                           	opt stack 0
   527  000060                     esperar_LCD@bussy:
   528                           	opt stack 0
   529  000060                     E_Read@address:
   530                           	opt stack 0
   531  000060                     conversor@n:
   532                           	opt stack 0
   533                           
   534                           ; 3 bytes @ 0x0
   535  000060                     	ds	1
   536  000061                     LCD_cmd@dato:
   537                           	opt stack 0
   538  000061                     LCD_dato@dato:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x1
   542  000061                     	ds	1
   543  000062                     ??_ini_LCD:
   544  000062                     Mensaje_LCD@Numeros:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x2
   548  000062                     	ds	1
   549  000063                     conversor@frec_m:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x3
   553  000063                     	ds	1
   554  000064                     retardos@M_Aux:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x4
   558  000064                     	ds	1
   559  000065                     Mensaje_LCD@i_665:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x5
   563  000065                     	ds	1
   564  000066                     Mensaje_LCD@i:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x6
   568  000066                     	ds	1
   569  000067                     main@Senal_m:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x7
   573  000067                     	ds	1
   574                           tblptru	equ	0xFF8
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           
   578                           	psect	cstackCOMRAM
   579  000001                     __pcstackCOMRAM:
   580                           	opt stack 0
   581  000001                     ??i2_retardos:
   582  000001                     leer_teclado@aux_portb:
   583                           	opt stack 0
   584  000001                     Freq_charge@flag_nZ:
   585                           	opt stack 0
   586  000001                     cambio_frec@Frec_aux:
   587                           	opt stack 0
   588  000001                     E_Write@data:
   589                           	opt stack 0
   590  000001                     i2esperar_LCD@bussy:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x0
   594  000001                     	ds	1
   595  000002                     Freq_charge@flag_OF:
   596                           	opt stack 0
   597  000002                     E_Write@address:
   598                           	opt stack 0
   599  000002                     i2LCD_cmd@dato:
   600                           	opt stack 0
   601  000002                     i2LCD_dato@dato:
   602                           	opt stack 0
   603  000002                     cambio_frec@Freq_aux:
   604                           	opt stack 0
   605                           
   606                           ; 3 bytes @ 0x1
   607  000002                     	ds	1
   608  000003                     Freq_charge@i:
   609                           	opt stack 0
   610  000003                     i2Mensaje_LCD@Numeros:
   611                           	opt stack 0
   612                           
   613                           ; 3 bytes @ 0x2
   614  000003                     	ds	2
   615  000005                     i2retardos@M_Aux:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x4
   619  000005                     	ds	1
   620  000006                     i2Mensaje_LCD@i_665:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x5
   624  000006                     	ds	1
   625  000007                     i2Mensaje_LCD@i:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x6
   629  000007                     	ds	1
   630  000008                     ??_ISR_H:
   631                           
   632                           ; 1 bytes @ 0x7
   633  000008                     	ds	14
   634  000016                     ISR_H@aux_portb:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x15
   638  000016                     	ds	1
   639  000017                     port@v_puerto:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x16
   643  000017                     	ds	1
   644  000018                     port@M1:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x17
   648  000018                     	ds	1
   649  000019                     port@M2:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x18
   653  000019                     	ds	1
   654  00001A                     ??_ISR_L:
   655                           
   656                           ; 1 bytes @ 0x19
   657  00001A                     	ds	17
   658                           tblptru	equ	0xFF8
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           
   662 ;;
   663 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   664 ;;
   665 ;; *************** function _main *****************
   666 ;; Defined at:
   667 ;;		line 117 in file "Main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  Senal_m         1    7[BANK0 ] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   681 ;;      Params:         0       0       0       0       0       0       0       0       0
   682 ;;      Locals:         0       1       0       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0
   684 ;;      Totals:         0       1       0       0       0       0       0       0       0
   685 ;;Total ram usage:        1 bytes
   686 ;; Hardware stack levels required when called:   11
   687 ;; This function calls:
   688 ;;		_E_Read
   689 ;;		_Mensaje_LCD
   690 ;;		_Teclado_config
   691 ;;		_conf_puertos
   692 ;;		_conf_timer
   693 ;;		_conversor
   694 ;;		_ini_LCD
   695 ;;		_osc_config
   696 ;;		_retardos
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text0
   703  000A3E                     __ptext0:
   704                           	opt stack 0
   705  000A3E                     _main:
   706                           	opt stack 20
   707                           
   708                           ;Main.c: 118: unsigned char Senal_m = 0;
   709                           
   710                           ;incstack = 0
   711  000A3E  0E00               	movlw	0
   712  000A40  0100               	movlb	0	; () banked
   713  000A42  6F67               	movwf	main@Senal_m& (0+255),b
   714                           
   715                           ; BSR set to: 0
   716                           ;Main.c: 119: osc_config (0X73);
   717  000A44  0E73               	movlw	115
   718  000A46  EC5F  F006         	call	_osc_config
   719                           
   720                           ;Main.c: 120: conf_puertos ();
   721  000A4A  EC3F  F006         	call	_conf_puertos	;wreg free
   722                           
   723                           ;Main.c: 121: Teclado_config ();
   724  000A4E  EC56  F006         	call	_Teclado_config	;wreg free
   725                           
   726                           ;Main.c: 122: ini_LCD ();
   727  000A52  ECE3  F004         	call	_ini_LCD	;wreg free
   728                           
   729                           ;Main.c: 123: Senal_m = E_Read (1);
   730  000A56  0E01               	movlw	1
   731  000A58  EC4B  F006         	call	_E_Read
   732  000A5C  0100               	movlb	0	; () banked
   733  000A5E  6F67               	movwf	main@Senal_m& (0+255),b
   734                           
   735                           ; BSR set to: 0
   736                           ;Main.c: 124: if (Senal_m == 1 || Senal_m == 2 || Senal_m == 3)
   737  000A60  0100               	movlb	0	; () banked
   738  000A62  0567               	decf	main@Senal_m& (0+255),w,b
   739  000A64  B4D8               	btfsc	status,2,c
   740  000A66  D00A               	goto	l119
   741                           
   742                           ; BSR set to: 0
   743  000A68  0E02               	movlw	2
   744  000A6A  0100               	movlb	0	; () banked
   745  000A6C  1967               	xorwf	main@Senal_m& (0+255),w,b
   746  000A6E  B4D8               	btfsc	status,2,c
   747  000A70  D005               	goto	l119
   748                           
   749                           ; BSR set to: 0
   750  000A72  0E03               	movlw	3
   751  000A74  0100               	movlb	0	; () banked
   752  000A76  1967               	xorwf	main@Senal_m& (0+255),w,b
   753  000A78  A4D8               	btfss	status,2,c
   754  000A7A  D003               	goto	l2203
   755  000A7C                     l119:
   756                           
   757                           ; BSR set to: 0
   758                           ;Main.c: 125: Senal = Senal_m;
   759  000A7C  C067  F03E         	movff	main@Senal_m,_Senal
   760  000A80  D002               	goto	l2205
   761  000A82                     l2203:
   762                           
   763                           ; BSR set to: 0
   764                           ;Main.c: 126: else
   765                           ;Main.c: 127: Senal = 3;
   766  000A82  0E03               	movlw	3
   767  000A84  6E3E               	movwf	_Senal,c
   768  000A86                     l2205:
   769                           
   770                           ; BSR set to: 0
   771                           ;Main.c: 128: Frecuencia = E_Read (0);
   772  000A86  0E00               	movlw	0
   773  000A88  EC4B  F006         	call	_E_Read
   774  000A8C  6E3F               	movwf	_Frecuencia,c
   775                           
   776                           ;Main.c: 129: conversor ();
   777  000A8E  ECA7  F003         	call	_conversor	;wreg free
   778                           
   779                           ;Main.c: 130: INTCONbits.GIEH = 1;
   780  000A92  8EF2               	bsf	intcon,7,c	;volatile
   781                           
   782                           ;Main.c: 131: INTCONbits.GIEL = 1;
   783  000A94  8CF2               	bsf	intcon,6,c	;volatile
   784                           
   785                           ;Main.c: 132: RCONbits.IPEN = 1;
   786  000A96  8ED0               	bsf	4048,7,c	;volatile
   787                           
   788                           ;Main.c: 133: Mensaje_LCD ();
   789  000A98  EC8E  F000         	call	_Mensaje_LCD	;wreg free
   790                           
   791                           ;Main.c: 134: retardos ();
   792  000A9C  EC04  F004         	call	_retardos	;wreg free
   793                           
   794                           ;Main.c: 135: conf_timer ();
   795  000AA0  EC64  F006         	call	_conf_timer	;wreg free
   796  000AA4                     l121:
   797  000AA4  D7FF               	goto	l121
   798  000AA6                     __end_of_main:
   799                           	opt stack 0
   800                           tblptru	equ	0xFF8
   801                           intcon	equ	0xFF2
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           status	equ	0xFD8
   805                           
   806 ;; *************** function _retardos *****************
   807 ;; Defined at:
   808 ;;		line 57 in file "Lib_generador.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  M_Aux           1    4[BANK0 ] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   822 ;;      Params:         0       0       0       0       0       0       0       0       0
   823 ;;      Locals:         0       1       0       0       0       0       0       0       0
   824 ;;      Temps:          0       4       0       0       0       0       0       0       0
   825 ;;      Totals:         0       5       0       0       0       0       0       0       0
   826 ;;Total ram usage:        5 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    7
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text1
   837  000808                     __ptext1:
   838                           	opt stack 0
   839  000808                     _retardos:
   840                           	opt stack 23
   841                           
   842                           ;Lib_generador.c: 58: unsigned char M_Aux = 0;
   843                           
   844                           ;incstack = 0
   845  000808  0E00               	movlw	0
   846  00080A  0100               	movlb	0	; () banked
   847  00080C  6F64               	movwf	retardos@M_Aux& (0+255),b
   848                           
   849                           ; BSR set to: 0
   850                           ;Lib_generador.c: 59: M_Aux = Frecuencia;
   851  00080E  C03F  F064         	movff	_Frecuencia,retardos@M_Aux
   852                           
   853                           ;Lib_generador.c: 60: if (M_Aux > 0 && M_Aux <= 12)
   854  000812  0100               	movlb	0	; () banked
   855  000814  5164               	movf	retardos@M_Aux& (0+255),w,b
   856  000816  0100               	movlb	0	; () banked
   857  000818  B4D8               	btfsc	status,2,c
   858  00081A  D006               	goto	l1987
   859                           
   860                           ; BSR set to: 0
   861  00081C  0E0D               	movlw	13
   862  00081E  0100               	movlb	0	; () banked
   863  000820  6164               	cpfslt	retardos@M_Aux& (0+255),b
   864  000822  D002               	goto	l1987
   865                           
   866                           ; BSR set to: 0
   867                           ;Lib_generador.c: 61: T2CON = 0X3A;
   868  000824  0E3A               	movlw	58
   869  000826  D023               	goto	L4
   870  000828                     l1987:
   871                           
   872                           ; BSR set to: 0
   873                           ;Lib_generador.c: 62: else if (M_Aux > 12 && M_Aux <= 24)
   874  000828  0E0C               	movlw	12
   875  00082A  0100               	movlb	0	; () banked
   876  00082C  6564               	cpfsgt	retardos@M_Aux& (0+255),b
   877  00082E  D006               	goto	l1993
   878                           
   879                           ; BSR set to: 0
   880  000830  0E19               	movlw	25
   881  000832  0100               	movlb	0	; () banked
   882  000834  6164               	cpfslt	retardos@M_Aux& (0+255),b
   883  000836  D002               	goto	l1993
   884                           
   885                           ; BSR set to: 0
   886                           ;Lib_generador.c: 63: T2CON = 0X48;
   887  000838  0E48               	movlw	72
   888  00083A  D019               	goto	L4
   889  00083C                     l1993:
   890                           
   891                           ; BSR set to: 0
   892                           ;Lib_generador.c: 64: else if (M_Aux > 24 && M_Aux <= 60)
   893  00083C  0E18               	movlw	24
   894  00083E  0100               	movlb	0	; () banked
   895  000840  6564               	cpfsgt	retardos@M_Aux& (0+255),b
   896  000842  D006               	goto	l1999
   897                           
   898                           ; BSR set to: 0
   899  000844  0E3D               	movlw	61
   900  000846  0100               	movlb	0	; () banked
   901  000848  6164               	cpfslt	retardos@M_Aux& (0+255),b
   902  00084A  D002               	goto	l1999
   903                           
   904                           ; BSR set to: 0
   905                           ;Lib_generador.c: 65: T2CON = 0X20;
   906  00084C  0E20               	movlw	32
   907  00084E  D00F               	goto	L4
   908  000850                     l1999:
   909                           
   910                           ; BSR set to: 0
   911                           ;Lib_generador.c: 66: else if (M_Aux > 60 && M_Aux <= 121)
   912  000850  0E3C               	movlw	60
   913  000852  0100               	movlb	0	; () banked
   914  000854  6564               	cpfsgt	retardos@M_Aux& (0+255),b
   915  000856  D006               	goto	l2005
   916                           
   917                           ; BSR set to: 0
   918  000858  0E7A               	movlw	122
   919  00085A  0100               	movlb	0	; () banked
   920  00085C  6164               	cpfslt	retardos@M_Aux& (0+255),b
   921  00085E  D002               	goto	l2005
   922                           
   923                           ; BSR set to: 0
   924                           ;Lib_generador.c: 67: T2CON = 0X08;
   925  000860  0E08               	movlw	8
   926  000862  D005               	goto	L4
   927  000864                     l2005:
   928                           
   929                           ; BSR set to: 0
   930                           ;Lib_generador.c: 68: else if (M_Aux > 121 && M_Aux <= 255)
   931  000864  0E79               	movlw	121
   932  000866  0100               	movlb	0	; () banked
   933  000868  6564               	cpfsgt	retardos@M_Aux& (0+255),b
   934  00086A  D003               	goto	l2009
   935  00086C  D002               	goto	l2009
   936  00086E                     L4:
   937  00086E  6ECA               	movwf	4042,c	;volatile
   938  000870  D002               	goto	l2011
   939  000872                     l2009:
   940                           
   941                           ; BSR set to: 0
   942                           ;Lib_generador.c: 70: else
   943                           ;Lib_generador.c: 71: T2CON = 0;
   944  000872  0E00               	movlw	0
   945  000874  D7FC               	goto	L4
   946  000876                     l2011:
   947                           
   948                           ; BSR set to: 0
   949                           ;Lib_generador.c: 72: PR2 = V_Time[M_Aux-1];
   950  000876  0EFF               	movlw	255
   951  000878  0100               	movlb	0	; () banked
   952  00087A  6F60               	movwf	??_retardos& (0+255),b
   953  00087C  0EFF               	movlw	255
   954  00087E  0100               	movlb	0	; () banked
   955  000880  6F61               	movwf	(??_retardos+1)& (0+255),b
   956  000882  0100               	movlb	0	; () banked
   957  000884  5164               	movf	retardos@M_Aux& (0+255),w,b
   958  000886  0100               	movlb	0	; () banked
   959  000888  6F62               	movwf	(??_retardos+2)& (0+255),b
   960  00088A  6B63               	clrf	(??_retardos+3)& (0+255),b
   961  00088C  0100               	movlb	0	; () banked
   962  00088E  5160               	movf	??_retardos& (0+255),w,b
   963  000890  0100               	movlb	0	; () banked
   964  000892  2762               	addwf	(??_retardos+2)& (0+255),f,b
   965  000894  0100               	movlb	0	; () banked
   966  000896  5161               	movf	(??_retardos+1)& (0+255),w,b
   967  000898  0100               	movlb	0	; () banked
   968  00089A  2363               	addwfc	(??_retardos+3)& (0+255),f,b
   969  00089C  0EBF               	movlw	low _V_Time
   970  00089E  0100               	movlb	0	; () banked
   971  0008A0  2562               	addwf	(??_retardos+2)& (0+255),w,b
   972  0008A2  6EF6               	movwf	tblptrl,c
   973  0008A4  0E7E               	movlw	high _V_Time
   974  0008A6  2163               	addwfc	(??_retardos+3)& (0+255),w,b
   975  0008A8  6EF7               	movwf	tblptrh,c
   976  0008AA                     	if	0	;There are less than 3 active tblptr bytes
   977  0008AA                     	endif
   978  0008AA  0008               	tblrd		*
   979  0008AC  CFF5 FFCB          	movff	tablat,4043	;volatile
   980                           
   981                           ; BSR set to: 0
   982  0008B0  0012               	return		;funcret
   983  0008B2                     __end_of_retardos:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           intcon	equ	0xFF2
   990                           postinc0	equ	0xFEE
   991                           wreg	equ	0xFE8
   992                           status	equ	0xFD8
   993                           
   994 ;; *************** function _osc_config *****************
   995 ;; Defined at:
   996 ;;		line 5 in file "Configuracion.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  parametro       1    wreg     unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  parametro       1    0[BANK0 ] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0
  1011 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1013 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1014 ;;Total ram usage:        1 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    7
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text2
  1025  000CBE                     __ptext2:
  1026                           	opt stack 0
  1027  000CBE                     _osc_config:
  1028                           	opt stack 23
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;incstack = 0
  1032                           ;osc_config@parametro stored from wreg
  1033  000CBE  0100               	movlb	0	; () banked
  1034  000CC0  6F60               	movwf	osc_config@parametro& (0+255),b
  1035                           
  1036                           ;Configuracion.c: 6: OSCCON=parametro;
  1037  000CC2  C060  FFD3         	movff	osc_config@parametro,4051	;volatile
  1038  000CC6  0012               	return		;funcret
  1039  000CC8                     __end_of_osc_config:
  1040                           	opt stack 0
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           intcon	equ	0xFF2
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           status	equ	0xFD8
  1049                           
  1050 ;; *************** function _ini_LCD *****************
  1051 ;; Defined at:
  1052 ;;		line 80 in file "TECLADO_LCD.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1066 ;;      Params:         0       0       0       0       0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1068 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1069 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1070 ;;Total ram usage:        1 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    9
  1073 ;; This function calls:
  1074 ;;		_LCD_cmd
  1075 ;;		_setup_LCD
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text3
  1082  0009C6                     __ptext3:
  1083                           	opt stack 0
  1084  0009C6                     _ini_LCD:
  1085                           	opt stack 21
  1086                           
  1087                           ;TECLADO_LCD.c: 81: _delay((unsigned long)((40)*(8000000/4000.0)));
  1088                           
  1089                           ;incstack = 0
  1090  0009C6  0E68               	movlw	104
  1091  0009C8  0100               	movlb	0	; () banked
  1092  0009CA  6F62               	movwf	??_ini_LCD& (0+255),b
  1093  0009CC  0EE4               	movlw	228
  1094  0009CE                     u1067:
  1095  0009CE  2EE8               	decfsz	wreg,f,c
  1096  0009D0  D7FE               	bra	u1067
  1097  0009D2  2F62               	decfsz	??_ini_LCD& (0+255),f,b
  1098  0009D4  D7FC               	bra	u1067
  1099  0009D6  F000               	nop	
  1100                           
  1101                           ;TECLADO_LCD.c: 82: setup_LCD ();
  1102  0009D8  EC32  F006         	call	_setup_LCD	;wreg free
  1103                           
  1104                           ;TECLADO_LCD.c: 83: LCD_cmd (0X30);
  1105  0009DC  0E30               	movlw	48
  1106  0009DE  ECC9  F005         	call	_LCD_cmd
  1107                           
  1108                           ;TECLADO_LCD.c: 84: _delay((unsigned long)((10)*(8000000/4000.0)));
  1109  0009E2  0E1A               	movlw	26
  1110  0009E4  0100               	movlb	0	; () banked
  1111  0009E6  6F62               	movwf	??_ini_LCD& (0+255),b
  1112  0009E8  0EF8               	movlw	248
  1113  0009EA                     u1077:
  1114  0009EA  2EE8               	decfsz	wreg,f,c
  1115  0009EC  D7FE               	bra	u1077
  1116  0009EE  2F62               	decfsz	??_ini_LCD& (0+255),f,b
  1117  0009F0  D7FC               	bra	u1077
  1118  0009F2  F000               	nop	
  1119                           
  1120                           ;TECLADO_LCD.c: 85: LCD_cmd (0X30);
  1121  0009F4  0E30               	movlw	48
  1122  0009F6  ECC9  F005         	call	_LCD_cmd
  1123                           
  1124                           ;TECLADO_LCD.c: 86: _delay((unsigned long)((10)*(8000000/4000.0)));
  1125  0009FA  0E1A               	movlw	26
  1126  0009FC  0100               	movlb	0	; () banked
  1127  0009FE  6F62               	movwf	??_ini_LCD& (0+255),b
  1128  000A00  0EF8               	movlw	248
  1129  000A02                     u1087:
  1130  000A02  2EE8               	decfsz	wreg,f,c
  1131  000A04  D7FE               	bra	u1087
  1132  000A06  2F62               	decfsz	??_ini_LCD& (0+255),f,b
  1133  000A08  D7FC               	bra	u1087
  1134  000A0A  F000               	nop	
  1135                           
  1136                           ;TECLADO_LCD.c: 87: LCD_cmd (0X30);
  1137  000A0C  0E30               	movlw	48
  1138  000A0E  ECC9  F005         	call	_LCD_cmd
  1139                           
  1140                           ;TECLADO_LCD.c: 88: _delay((unsigned long)((10)*(8000000/4000.0)));
  1141  000A12  0E1A               	movlw	26
  1142  000A14  0100               	movlb	0	; () banked
  1143  000A16  6F62               	movwf	??_ini_LCD& (0+255),b
  1144  000A18  0EF8               	movlw	248
  1145  000A1A                     u1097:
  1146  000A1A  2EE8               	decfsz	wreg,f,c
  1147  000A1C  D7FE               	bra	u1097
  1148  000A1E  2F62               	decfsz	??_ini_LCD& (0+255),f,b
  1149  000A20  D7FC               	bra	u1097
  1150  000A22  F000               	nop	
  1151                           
  1152                           ;TECLADO_LCD.c: 89: LCD_cmd (0X3F);
  1153  000A24  0E3F               	movlw	63
  1154  000A26  ECC9  F005         	call	_LCD_cmd
  1155                           
  1156                           ;TECLADO_LCD.c: 90: LCD_cmd (0X0C);
  1157  000A2A  0E0C               	movlw	12
  1158  000A2C  ECC9  F005         	call	_LCD_cmd
  1159                           
  1160                           ;TECLADO_LCD.c: 91: LCD_cmd (0X06);
  1161  000A30  0E06               	movlw	6
  1162  000A32  ECC9  F005         	call	_LCD_cmd
  1163                           
  1164                           ;TECLADO_LCD.c: 92: LCD_cmd (0X01);
  1165  000A36  0E01               	movlw	1
  1166  000A38  ECC9  F005         	call	_LCD_cmd
  1167  000A3C  0012               	return		;funcret
  1168  000A3E                     __end_of_ini_LCD:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           intcon	equ	0xFF2
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function _setup_LCD *****************
  1180 ;; Defined at:
  1181 ;;		line 70 in file "TECLADO_LCD.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    7
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_ini_LCD
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text4
  1210  000C64                     __ptext4:
  1211                           	opt stack 0
  1212  000C64                     _setup_LCD:
  1213                           	opt stack 22
  1214                           
  1215                           ;TECLADO_LCD.c: 71: TRISD = 0;
  1216                           
  1217                           ;incstack = 0
  1218  000C64  0E00               	movlw	0
  1219  000C66  6E95               	movwf	3989,c	;volatile
  1220                           
  1221                           ;TECLADO_LCD.c: 72: TRISE = 0;
  1222  000C68  0E00               	movlw	0
  1223  000C6A  6E96               	movwf	3990,c	;volatile
  1224                           
  1225                           ;TECLADO_LCD.c: 73: LATD = 0;
  1226  000C6C  0E00               	movlw	0
  1227  000C6E  6E8C               	movwf	3980,c	;volatile
  1228                           
  1229                           ;TECLADO_LCD.c: 74: LATE = 0;
  1230  000C70  0E00               	movlw	0
  1231  000C72  6E8D               	movwf	3981,c	;volatile
  1232                           
  1233                           ;TECLADO_LCD.c: 75: CCP1CONbits.P1M = 0;
  1234  000C74  0E3F               	movlw	-193
  1235  000C76  16BD               	andwf	4029,f,c	;volatile
  1236                           
  1237                           ;TECLADO_LCD.c: 76: SSPCON1bits.SSPEN = 0;
  1238  000C78  9AC6               	bcf	4038,5,c	;volatile
  1239                           
  1240                           ;TECLADO_LCD.c: 77: SPPCFGbits.CLK1EN =0;
  1241  000C7A  9863               	bcf	3939,4,c	;volatile
  1242  000C7C  0012               	return		;funcret
  1243  000C7E                     __end_of_setup_LCD:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           intcon	equ	0xFF2
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function _conversor *****************
  1255 ;; Defined at:
  1256 ;;		line 82 in file "Lib_generador.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  n               3    0[BANK0 ] unsigned char [3]
  1261 ;;  frec_m          2    3[BANK0 ] int 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1274 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1275 ;;Total ram usage:        5 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    7
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text5
  1286  00074E                     __ptext5:
  1287                           	opt stack 0
  1288  00074E                     _conversor:
  1289                           	opt stack 23
  1290                           
  1291                           ;Lib_generador.c: 83: int frec_m = 0;
  1292                           
  1293                           ;incstack = 0
  1294  00074E  0E00               	movlw	0
  1295  000750  0100               	movlb	0	; () banked
  1296  000752  6F64               	movwf	(conversor@frec_m+1)& (0+255),b
  1297  000754  0E00               	movlw	0
  1298  000756  6F63               	movwf	conversor@frec_m& (0+255),b
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;Lib_generador.c: 84: frec_m = Frecuencia;
  1302  000758  C03F  F063         	movff	_Frecuencia,conversor@frec_m
  1303  00075C  0100               	movlb	0	; () banked
  1304  00075E  6B64               	clrf	(conversor@frec_m+1)& (0+255),b
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;Lib_generador.c: 85: unsigned char n[3] = {0,0,0};
  1308  000760  C02B  F060         	movff	conversor@F3848,conversor@n
  1309  000764  C02C  F061         	movff	conversor@F3848+1,conversor@n+1
  1310  000768  C02D  F062         	movff	conversor@F3848+2,conversor@n+2
  1311                           
  1312                           ;Lib_generador.c: 86: while (frec_m > 100){
  1313  00076C  D00C               	goto	l2065
  1314  00076E                     l2061:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;Lib_generador.c: 87: frec_m = frec_m-100;
  1318  00076E  0E9C               	movlw	156
  1319  000770  0100               	movlb	0	; () banked
  1320  000772  2563               	addwf	conversor@frec_m& (0+255),w,b
  1321  000774  0100               	movlb	0	; () banked
  1322  000776  6F63               	movwf	conversor@frec_m& (0+255),b
  1323  000778  0EFF               	movlw	255
  1324  00077A  0100               	movlb	0	; () banked
  1325  00077C  2164               	addwfc	(conversor@frec_m+1)& (0+255),w,b
  1326  00077E  0100               	movlb	0	; () banked
  1327  000780  6F64               	movwf	(conversor@frec_m+1)& (0+255),b
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;Lib_generador.c: 88: n[0]++;
  1331  000782  0100               	movlb	0	; () banked
  1332  000784  2B60               	incf	conversor@n& (0+255),f,b
  1333  000786                     l2065:
  1334                           
  1335                           ; BSR set to: 0
  1336  000786  0100               	movlb	0	; () banked
  1337  000788  BF64               	btfsc	(conversor@frec_m+1)& (0+255),7,b
  1338  00078A  D015               	goto	l2071
  1339  00078C  0100               	movlb	0	; () banked
  1340  00078E  5164               	movf	(conversor@frec_m+1)& (0+255),w,b
  1341  000790  E1EE               	bnz	l2061
  1342  000792  0E65               	movlw	101
  1343  000794  0100               	movlb	0	; () banked
  1344  000796  5D63               	subwf	conversor@frec_m& (0+255),w,b
  1345  000798  A0D8               	btfss	status,0,c
  1346  00079A  D00D               	goto	l2071
  1347  00079C  D7E8               	goto	l2061
  1348  00079E                     l2067:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;Lib_generador.c: 91: frec_m = frec_m-10;
  1352  00079E  0EF6               	movlw	246
  1353  0007A0  0100               	movlb	0	; () banked
  1354  0007A2  2563               	addwf	conversor@frec_m& (0+255),w,b
  1355  0007A4  0100               	movlb	0	; () banked
  1356  0007A6  6F63               	movwf	conversor@frec_m& (0+255),b
  1357  0007A8  0EFF               	movlw	255
  1358  0007AA  0100               	movlb	0	; () banked
  1359  0007AC  2164               	addwfc	(conversor@frec_m+1)& (0+255),w,b
  1360  0007AE  0100               	movlb	0	; () banked
  1361  0007B0  6F64               	movwf	(conversor@frec_m+1)& (0+255),b
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;Lib_generador.c: 92: n[1]++;
  1365  0007B2  0100               	movlb	0	; () banked
  1366  0007B4  2B61               	incf	(conversor@n+1)& (0+255),f,b
  1367  0007B6                     l2071:
  1368                           
  1369                           ; BSR set to: 0
  1370  0007B6  0100               	movlb	0	; () banked
  1371  0007B8  BF64               	btfsc	(conversor@frec_m+1)& (0+255),7,b
  1372  0007BA  D015               	goto	l2077
  1373  0007BC  0100               	movlb	0	; () banked
  1374  0007BE  5164               	movf	(conversor@frec_m+1)& (0+255),w,b
  1375  0007C0  E1EE               	bnz	l2067
  1376  0007C2  0E0B               	movlw	11
  1377  0007C4  0100               	movlb	0	; () banked
  1378  0007C6  5D63               	subwf	conversor@frec_m& (0+255),w,b
  1379  0007C8  A0D8               	btfss	status,0,c
  1380  0007CA  D00D               	goto	l2077
  1381  0007CC  D7E8               	goto	l2067
  1382  0007CE                     l2073:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;Lib_generador.c: 95: frec_m = frec_m-1;
  1386  0007CE  0EFF               	movlw	255
  1387  0007D0  0100               	movlb	0	; () banked
  1388  0007D2  2563               	addwf	conversor@frec_m& (0+255),w,b
  1389  0007D4  0100               	movlb	0	; () banked
  1390  0007D6  6F63               	movwf	conversor@frec_m& (0+255),b
  1391  0007D8  0EFF               	movlw	255
  1392  0007DA  0100               	movlb	0	; () banked
  1393  0007DC  2164               	addwfc	(conversor@frec_m+1)& (0+255),w,b
  1394  0007DE  0100               	movlb	0	; () banked
  1395  0007E0  6F64               	movwf	(conversor@frec_m+1)& (0+255),b
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;Lib_generador.c: 96: n[2]++;
  1399  0007E2  0100               	movlb	0	; () banked
  1400  0007E4  2B62               	incf	(conversor@n+2)& (0+255),f,b
  1401  0007E6                     l2077:
  1402                           
  1403                           ; BSR set to: 0
  1404  0007E6  0100               	movlb	0	; () banked
  1405  0007E8  BF64               	btfsc	(conversor@frec_m+1)& (0+255),7,b
  1406  0007EA  D007               	goto	l347
  1407  0007EC  0100               	movlb	0	; () banked
  1408  0007EE  5164               	movf	(conversor@frec_m+1)& (0+255),w,b
  1409  0007F0  E1EE               	bnz	l2073
  1410  0007F2  0100               	movlb	0	; () banked
  1411  0007F4  0563               	decf	conversor@frec_m& (0+255),w,b
  1412  0007F6  B0D8               	btfsc	status,0,c
  1413  0007F8  D7EA               	goto	l2073
  1414  0007FA                     l347:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;Lib_generador.c: 97: }
  1418                           ;Lib_generador.c: 98: Freq[0] = n[0];
  1419  0007FA  C060  F034         	movff	conversor@n,_Freq
  1420                           
  1421                           ;Lib_generador.c: 99: Freq[1] = n[1];
  1422  0007FE  C061  F035         	movff	conversor@n+1,_Freq+1
  1423                           
  1424                           ;Lib_generador.c: 100: Freq[2] = n[2];
  1425  000802  C062  F036         	movff	conversor@n+2,_Freq+2
  1426                           
  1427                           ; BSR set to: 0
  1428  000806  0012               	return		;funcret
  1429  000808                     __end_of_conversor:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           intcon	equ	0xFF2
  1436                           postinc0	equ	0xFEE
  1437                           wreg	equ	0xFE8
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _conf_timer *****************
  1441 ;; Defined at:
  1442 ;;		line 75 in file "Lib_generador.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		None
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1456 ;;      Params:         0       0       0       0       0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    7
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text6
  1471  000CC8                     __ptext6:
  1472                           	opt stack 0
  1473  000CC8                     _conf_timer:
  1474                           	opt stack 23
  1475                           
  1476                           ;Lib_generador.c: 76: IPR1bits.TMR2IP = 0;
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;incstack = 0
  1480  000CC8  929F               	bcf	3999,1,c	;volatile
  1481                           
  1482                           ;Lib_generador.c: 77: PIE1bits.TMR2IE = 1;
  1483  000CCA  829D               	bsf	3997,1,c	;volatile
  1484                           
  1485                           ;Lib_generador.c: 78: PIR1bits.TMR2IF = 0;
  1486  000CCC  929E               	bcf	3998,1,c	;volatile
  1487                           
  1488                           ;Lib_generador.c: 79: T2CONbits.TMR2ON = 1;
  1489  000CCE  84CA               	bsf	4042,2,c	;volatile
  1490  000CD0  0012               	return		;funcret
  1491  000CD2                     __end_of_conf_timer:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           intcon	equ	0xFF2
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _conf_puertos *****************
  1503 ;; Defined at:
  1504 ;;		line 9 in file "Configuracion.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1518 ;;      Params:         0       0       0       0       0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    7
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text7
  1533  000C7E                     __ptext7:
  1534                           	opt stack 0
  1535  000C7E                     _conf_puertos:
  1536                           	opt stack 23
  1537                           
  1538                           ;Configuracion.c: 10: ADCON1 = 0X0F;
  1539                           
  1540                           ;incstack = 0
  1541  000C7E  0E0F               	movlw	15
  1542  000C80  6EC1               	movwf	4033,c	;volatile
  1543                           
  1544                           ;Configuracion.c: 11: CMCON = 0X07;
  1545  000C82  0E07               	movlw	7
  1546  000C84  6EB4               	movwf	4020,c	;volatile
  1547                           
  1548                           ;Configuracion.c: 12: CVRCONbits.CVREN = 0;
  1549  000C86  9EB5               	bcf	4021,7,c	;volatile
  1550                           
  1551                           ;Configuracion.c: 13: CVRCONbits.CVROE = 0;
  1552  000C88  9CB5               	bcf	4021,6,c	;volatile
  1553                           
  1554                           ;Configuracion.c: 14: UCONbits.USBEN = 0;
  1555  000C8A  966D               	bcf	3949,3,c	;volatile
  1556                           
  1557                           ;Configuracion.c: 15: TRISA = 0XF0;
  1558  000C8C  0EF0               	movlw	240
  1559  000C8E  6E92               	movwf	3986,c	;volatile
  1560                           
  1561                           ;Configuracion.c: 16: TRISC = 0X3C;
  1562  000C90  0E3C               	movlw	60
  1563  000C92  6E94               	movwf	3988,c	;volatile
  1564  000C94  0012               	return		;funcret
  1565  000C96                     __end_of_conf_puertos:
  1566                           	opt stack 0
  1567                           tblptru	equ	0xFF8
  1568                           tblptrh	equ	0xFF7
  1569                           tblptrl	equ	0xFF6
  1570                           tablat	equ	0xFF5
  1571                           intcon	equ	0xFF2
  1572                           postinc0	equ	0xFEE
  1573                           wreg	equ	0xFE8
  1574                           status	equ	0xFD8
  1575                           
  1576 ;; *************** function _Teclado_config *****************
  1577 ;; Defined at:
  1578 ;;		line 4 in file "TECLADO_LCD.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    7
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text8
  1607  000CAC                     __ptext8:
  1608                           	opt stack 0
  1609  000CAC                     _Teclado_config:
  1610                           	opt stack 23
  1611                           
  1612                           ;TECLADO_LCD.c: 5: TRISB = 0XF0;
  1613                           
  1614                           ;incstack = 0
  1615  000CAC  0EF0               	movlw	240
  1616  000CAE  6E93               	movwf	3987,c	;volatile
  1617                           
  1618                           ;TECLADO_LCD.c: 6: INTCON2bits.RBPU = 0;
  1619  000CB0  9EF1               	bcf	intcon2,7,c	;volatile
  1620                           
  1621                           ;TECLADO_LCD.c: 7: INTCON2bits.RBIP = 1;
  1622  000CB2  80F1               	bsf	intcon2,0,c	;volatile
  1623                           
  1624                           ;TECLADO_LCD.c: 8: LATB = 0XF0;
  1625  000CB4  0EF0               	movlw	240
  1626  000CB6  6E8A               	movwf	3978,c	;volatile
  1627                           
  1628                           ;TECLADO_LCD.c: 9: INTCONbits.RBIF = 0;
  1629  000CB8  90F2               	bcf	intcon,0,c	;volatile
  1630                           
  1631                           ;TECLADO_LCD.c: 10: INTCONbits.RBIE = 1;
  1632  000CBA  86F2               	bsf	intcon,3,c	;volatile
  1633  000CBC  0012               	return		;funcret
  1634  000CBE                     __end_of_Teclado_config:
  1635                           	opt stack 0
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           intcon	equ	0xFF2
  1641                           intcon2	equ	0xFF1
  1642                           postinc0	equ	0xFEE
  1643                           wreg	equ	0xFE8
  1644                           status	equ	0xFD8
  1645                           
  1646 ;; *************** function _Mensaje_LCD *****************
  1647 ;; Defined at:
  1648 ;;		line 4 in file "Mensajes.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  i               1    5[BANK0 ] unsigned char 
  1653 ;;  i               1    6[BANK0 ] unsigned char 
  1654 ;;  Numeros         3    2[BANK0 ] unsigned char [3]
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        5 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:   10
  1671 ;; This function calls:
  1672 ;;		_LCD_dato
  1673 ;;		_clr_screen
  1674 ;;		_enter
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text9
  1681  00011C                     __ptext9:
  1682                           	opt stack 0
  1683  00011C                     _Mensaje_LCD:
  1684                           	opt stack 20
  1685                           
  1686                           ;Mensajes.c: 5: unsigned char Numeros [3]={0, 0, 0};
  1687                           
  1688                           ;incstack = 0
  1689  00011C  C031  F062         	movff	Mensaje_LCD@F3825,Mensaje_LCD@Numeros
  1690  000120  C032  F063         	movff	Mensaje_LCD@F3825+1,Mensaje_LCD@Numeros+1
  1691  000124  C033  F064         	movff	Mensaje_LCD@F3825+2,Mensaje_LCD@Numeros+2
  1692                           
  1693                           ;Mensajes.c: 6: for (unsigned char i = 0; i<3; i++)
  1694  000128  0E00               	movlw	0
  1695  00012A  0100               	movlb	0	; () banked
  1696  00012C  6F66               	movwf	Mensaje_LCD@i& (0+255),b
  1697  00012E                     l1941:
  1698                           
  1699                           ; BSR set to: 0
  1700  00012E  0E02               	movlw	2
  1701  000130  0100               	movlb	0	; () banked
  1702  000132  6566               	cpfsgt	Mensaje_LCD@i& (0+255),b
  1703  000134  D001               	goto	l1945
  1704  000136  D018               	goto	l1951
  1705  000138                     l1945:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;Mensajes.c: 7: Numeros [i] = 48 + Freq[i];
  1709  000138  0100               	movlb	0	; () banked
  1710  00013A  5166               	movf	Mensaje_LCD@i& (0+255),w,b
  1711  00013C  0D01               	mullw	1
  1712  00013E  0E62               	movlw	low Mensaje_LCD@Numeros
  1713  000140  24F3               	addwf	prodl,w,c
  1714  000142  6ED9               	movwf	fsr2l,c
  1715  000144  0E00               	movlw	high Mensaje_LCD@Numeros
  1716  000146  20F4               	addwfc	prodh,w,c
  1717  000148  6EDA               	movwf	fsr2h,c
  1718  00014A  0100               	movlb	0	; () banked
  1719  00014C  5166               	movf	Mensaje_LCD@i& (0+255),w,b
  1720  00014E  0D01               	mullw	1
  1721  000150  0E34               	movlw	low _Freq
  1722  000152  24F3               	addwf	prodl,w,c
  1723  000154  6EE1               	movwf	fsr1l,c
  1724  000156  0E00               	movlw	high _Freq
  1725  000158  20F4               	addwfc	prodh,w,c
  1726  00015A  6EE2               	movwf	fsr1h,c
  1727  00015C  50E7               	movf	indf1,w,c
  1728  00015E  0F30               	addlw	48
  1729  000160  6EDF               	movwf	indf2,c
  1730                           
  1731                           ; BSR set to: 0
  1732  000162  0100               	movlb	0	; () banked
  1733  000164  2B66               	incf	Mensaje_LCD@i& (0+255),f,b
  1734  000166  D7E3               	goto	l1941
  1735  000168                     l1951:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;Mensajes.c: 8: clr_screen ();
  1739  000168  EC6D  F006         	call	_clr_screen	;wreg free
  1740                           
  1741                           ;Mensajes.c: 9: switch (Senal){
  1742  00016C  D08A               	goto	l1961
  1743  00016E                     l1953:
  1744                           
  1745                           ;Mensajes.c: 11: LCD_dato (' ');
  1746  00016E  0E20               	movlw	32
  1747  000170  ECB5  F005         	call	_LCD_dato
  1748                           
  1749                           ;Mensajes.c: 12: LCD_dato ('S');
  1750  000174  0E53               	movlw	83
  1751  000176  ECB5  F005         	call	_LCD_dato
  1752                           
  1753                           ;Mensajes.c: 13: LCD_dato ('e');
  1754  00017A  0E65               	movlw	101
  1755  00017C  ECB5  F005         	call	_LCD_dato
  1756                           
  1757                           ;Mensajes.c: 14: LCD_dato (0XEE);
  1758  000180  0EEE               	movlw	238
  1759  000182  ECB5  F005         	call	_LCD_dato
  1760                           
  1761                           ;Mensajes.c: 15: LCD_dato ('a');
  1762  000186  0E61               	movlw	97
  1763  000188  ECB5  F005         	call	_LCD_dato
  1764                           
  1765                           ;Mensajes.c: 16: LCD_dato ('l');
  1766  00018C  0E6C               	movlw	108
  1767  00018E  ECB5  F005         	call	_LCD_dato
  1768                           
  1769                           ;Mensajes.c: 17: LCD_dato (' ');
  1770  000192  0E20               	movlw	32
  1771  000194  ECB5  F005         	call	_LCD_dato
  1772                           
  1773                           ;Mensajes.c: 18: LCD_dato ('S');
  1774  000198  0E53               	movlw	83
  1775  00019A  ECB5  F005         	call	_LCD_dato
  1776                           
  1777                           ;Mensajes.c: 19: LCD_dato ('e');
  1778  00019E  0E65               	movlw	101
  1779  0001A0  ECB5  F005         	call	_LCD_dato
  1780                           
  1781                           ;Mensajes.c: 20: LCD_dato ('n');
  1782  0001A4  0E6E               	movlw	110
  1783  0001A6  ECB5  F005         	call	_LCD_dato
  1784                           
  1785                           ;Mensajes.c: 21: LCD_dato ('o');
  1786  0001AA  0E6F               	movlw	111
  1787  0001AC  ECB5  F005         	call	_LCD_dato
  1788                           
  1789                           ;Mensajes.c: 22: LCD_dato ('i');
  1790  0001B0  0E69               	movlw	105
  1791  0001B2  ECB5  F005         	call	_LCD_dato
  1792                           
  1793                           ;Mensajes.c: 23: LCD_dato ('d');
  1794  0001B6  0E64               	movlw	100
  1795  0001B8  ECB5  F005         	call	_LCD_dato
  1796                           
  1797                           ;Mensajes.c: 24: LCD_dato ('a');
  1798  0001BC  0E61               	movlw	97
  1799  0001BE  ECB5  F005         	call	_LCD_dato
  1800                           
  1801                           ;Mensajes.c: 25: LCD_dato ('l');
  1802  0001C2  0E6C               	movlw	108
  1803  0001C4  ECB5  F005         	call	_LCD_dato
  1804                           
  1805                           ;Mensajes.c: 26: break;
  1806  0001C8  D066               	goto	l1963
  1807  0001CA                     l1955:
  1808                           
  1809                           ;Mensajes.c: 28: LCD_dato (' ');
  1810  0001CA  0E20               	movlw	32
  1811  0001CC  ECB5  F005         	call	_LCD_dato
  1812                           
  1813                           ;Mensajes.c: 29: LCD_dato ('S');
  1814  0001D0  0E53               	movlw	83
  1815  0001D2  ECB5  F005         	call	_LCD_dato
  1816                           
  1817                           ;Mensajes.c: 30: LCD_dato ('e');
  1818  0001D6  0E65               	movlw	101
  1819  0001D8  ECB5  F005         	call	_LCD_dato
  1820                           
  1821                           ;Mensajes.c: 31: LCD_dato (0XEE);
  1822  0001DC  0EEE               	movlw	238
  1823  0001DE  ECB5  F005         	call	_LCD_dato
  1824                           
  1825                           ;Mensajes.c: 32: LCD_dato ('a');
  1826  0001E2  0E61               	movlw	97
  1827  0001E4  ECB5  F005         	call	_LCD_dato
  1828                           
  1829                           ;Mensajes.c: 33: LCD_dato ('l');
  1830  0001E8  0E6C               	movlw	108
  1831  0001EA  ECB5  F005         	call	_LCD_dato
  1832                           
  1833                           ;Mensajes.c: 34: LCD_dato (' ');
  1834  0001EE  0E20               	movlw	32
  1835  0001F0  ECB5  F005         	call	_LCD_dato
  1836                           
  1837                           ;Mensajes.c: 35: LCD_dato ('C');
  1838  0001F4  0E43               	movlw	67
  1839  0001F6  ECB5  F005         	call	_LCD_dato
  1840                           
  1841                           ;Mensajes.c: 36: LCD_dato ('u');
  1842  0001FA  0E75               	movlw	117
  1843  0001FC  ECB5  F005         	call	_LCD_dato
  1844                           
  1845                           ;Mensajes.c: 37: LCD_dato ('a');
  1846  000200  0E61               	movlw	97
  1847  000202  ECB5  F005         	call	_LCD_dato
  1848                           
  1849                           ;Mensajes.c: 38: LCD_dato ('d');
  1850  000206  0E64               	movlw	100
  1851  000208  ECB5  F005         	call	_LCD_dato
  1852                           
  1853                           ;Mensajes.c: 39: LCD_dato ('r');
  1854  00020C  0E72               	movlw	114
  1855  00020E  ECB5  F005         	call	_LCD_dato
  1856                           
  1857                           ;Mensajes.c: 40: LCD_dato ('a');
  1858  000212  0E61               	movlw	97
  1859  000214  ECB5  F005         	call	_LCD_dato
  1860                           
  1861                           ;Mensajes.c: 41: LCD_dato ('d');
  1862  000218  0E64               	movlw	100
  1863  00021A  ECB5  F005         	call	_LCD_dato
  1864                           
  1865                           ;Mensajes.c: 42: LCD_dato ('a');
  1866  00021E  0E61               	movlw	97
  1867  000220  ECB5  F005         	call	_LCD_dato
  1868                           
  1869                           ;Mensajes.c: 43: break;
  1870  000224  D038               	goto	l1963
  1871  000226                     l1957:
  1872                           
  1873                           ;Mensajes.c: 45: LCD_dato (' ');
  1874  000226  0E20               	movlw	32
  1875  000228  ECB5  F005         	call	_LCD_dato
  1876                           
  1877                           ;Mensajes.c: 46: LCD_dato ('S');
  1878  00022C  0E53               	movlw	83
  1879  00022E  ECB5  F005         	call	_LCD_dato
  1880                           
  1881                           ;Mensajes.c: 47: LCD_dato ('e');
  1882  000232  0E65               	movlw	101
  1883  000234  ECB5  F005         	call	_LCD_dato
  1884                           
  1885                           ;Mensajes.c: 48: LCD_dato (0XEE);
  1886  000238  0EEE               	movlw	238
  1887  00023A  ECB5  F005         	call	_LCD_dato
  1888                           
  1889                           ;Mensajes.c: 49: LCD_dato ('a');
  1890  00023E  0E61               	movlw	97
  1891  000240  ECB5  F005         	call	_LCD_dato
  1892                           
  1893                           ;Mensajes.c: 50: LCD_dato ('l');
  1894  000244  0E6C               	movlw	108
  1895  000246  ECB5  F005         	call	_LCD_dato
  1896                           
  1897                           ;Mensajes.c: 51: LCD_dato (' ');
  1898  00024A  0E20               	movlw	32
  1899  00024C  ECB5  F005         	call	_LCD_dato
  1900                           
  1901                           ;Mensajes.c: 52: LCD_dato ('D');
  1902  000250  0E44               	movlw	68
  1903  000252  ECB5  F005         	call	_LCD_dato
  1904                           
  1905                           ;Mensajes.c: 53: LCD_dato ('.');
  1906  000256  0E2E               	movlw	46
  1907  000258  ECB5  F005         	call	_LCD_dato
  1908                           
  1909                           ;Mensajes.c: 54: LCD_dato ('S');
  1910  00025C  0E53               	movlw	83
  1911  00025E  ECB5  F005         	call	_LCD_dato
  1912                           
  1913                           ;Mensajes.c: 55: LCD_dato ('i');
  1914  000262  0E69               	movlw	105
  1915  000264  ECB5  F005         	call	_LCD_dato
  1916                           
  1917                           ;Mensajes.c: 56: LCD_dato ('e');
  1918  000268  0E65               	movlw	101
  1919  00026A  ECB5  F005         	call	_LCD_dato
  1920                           
  1921                           ;Mensajes.c: 57: LCD_dato ('r');
  1922  00026E  0E72               	movlw	114
  1923  000270  ECB5  F005         	call	_LCD_dato
  1924                           
  1925                           ;Mensajes.c: 58: LCD_dato ('r');
  1926  000274  0E72               	movlw	114
  1927  000276  ECB5  F005         	call	_LCD_dato
  1928                           
  1929                           ;Mensajes.c: 59: LCD_dato ('a');
  1930  00027A  0E61               	movlw	97
  1931  00027C  ECB5  F005         	call	_LCD_dato
  1932                           
  1933                           ;Mensajes.c: 64: }
  1934                           
  1935                           ;Mensajes.c: 63: break;
  1936                           
  1937                           ;Mensajes.c: 61: default:
  1938                           
  1939                           ;Mensajes.c: 60: break;
  1940  000280  D00A               	goto	l1963
  1941  000282                     l1961:
  1942  000282  503E               	movf	_Senal,w,c
  1943                           
  1944                           ; Switch size 1, requested type "space"
  1945                           ; Number of cases is 3, Range of values is 1 to 3
  1946                           ; switch strategies available:
  1947                           ; Name         Instructions Cycles
  1948                           ; simple_byte           10     6 (average)
  1949                           ;	Chosen strategy is simple_byte
  1950  000284  0A01               	xorlw	1	; case 1
  1951  000286  B4D8               	btfsc	status,2,c
  1952  000288  D772               	goto	l1953
  1953  00028A  0A03               	xorlw	3	; case 2
  1954  00028C  B4D8               	btfsc	status,2,c
  1955  00028E  D79D               	goto	l1955
  1956  000290  0A01               	xorlw	1	; case 3
  1957  000292  B4D8               	btfsc	status,2,c
  1958  000294  D7C8               	goto	l1957
  1959  000296                     l1963:
  1960                           
  1961                           ;Mensajes.c: 65: enter ();
  1962  000296  EC69  F006         	call	_enter	;wreg free
  1963                           
  1964                           ;Mensajes.c: 66: LCD_dato (' ');
  1965  00029A  0E20               	movlw	32
  1966  00029C  ECB5  F005         	call	_LCD_dato
  1967                           
  1968                           ;Mensajes.c: 67: LCD_dato (' ');
  1969  0002A0  0E20               	movlw	32
  1970  0002A2  ECB5  F005         	call	_LCD_dato
  1971                           
  1972                           ;Mensajes.c: 68: LCD_dato ('F');
  1973  0002A6  0E46               	movlw	70
  1974  0002A8  ECB5  F005         	call	_LCD_dato
  1975                           
  1976                           ;Mensajes.c: 69: LCD_dato ('r');
  1977  0002AC  0E72               	movlw	114
  1978  0002AE  ECB5  F005         	call	_LCD_dato
  1979                           
  1980                           ;Mensajes.c: 70: LCD_dato ('e');
  1981  0002B2  0E65               	movlw	101
  1982  0002B4  ECB5  F005         	call	_LCD_dato
  1983                           
  1984                           ;Mensajes.c: 71: LCD_dato ('c');
  1985  0002B8  0E63               	movlw	99
  1986  0002BA  ECB5  F005         	call	_LCD_dato
  1987                           
  1988                           ;Mensajes.c: 72: LCD_dato (':');
  1989  0002BE  0E3A               	movlw	58
  1990  0002C0  ECB5  F005         	call	_LCD_dato
  1991                           
  1992                           ;Mensajes.c: 73: LCD_dato (' ');
  1993  0002C4  0E20               	movlw	32
  1994  0002C6  ECB5  F005         	call	_LCD_dato
  1995                           
  1996                           ;Mensajes.c: 74: for (unsigned char i = 0; i<3; i++)
  1997  0002CA  0E00               	movlw	0
  1998  0002CC  0100               	movlb	0	; () banked
  1999  0002CE  6F65               	movwf	Mensaje_LCD@i_665& (0+255),b
  2000  0002D0                     l1967:
  2001                           
  2002                           ; BSR set to: 0
  2003  0002D0  0E02               	movlw	2
  2004  0002D2  0100               	movlb	0	; () banked
  2005  0002D4  6565               	cpfsgt	Mensaje_LCD@i_665& (0+255),b
  2006  0002D6  D001               	goto	l1971
  2007  0002D8  D00F               	goto	l1977
  2008  0002DA                     l1971:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;Mensajes.c: 75: LCD_dato (Numeros [i]);
  2012  0002DA  0100               	movlb	0	; () banked
  2013  0002DC  5165               	movf	Mensaje_LCD@i_665& (0+255),w,b
  2014  0002DE  0D01               	mullw	1
  2015  0002E0  0E62               	movlw	low Mensaje_LCD@Numeros
  2016  0002E2  24F3               	addwf	prodl,w,c
  2017  0002E4  6ED9               	movwf	fsr2l,c
  2018  0002E6  0E00               	movlw	high Mensaje_LCD@Numeros
  2019  0002E8  20F4               	addwfc	prodh,w,c
  2020  0002EA  6EDA               	movwf	fsr2h,c
  2021  0002EC  50DF               	movf	indf2,w,c
  2022  0002EE  ECB5  F005         	call	_LCD_dato
  2023  0002F2  0100               	movlb	0	; () banked
  2024  0002F4  2B65               	incf	Mensaje_LCD@i_665& (0+255),f,b
  2025  0002F6  D7EC               	goto	l1967
  2026  0002F8                     l1977:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;Mensajes.c: 76: LCD_dato (' ');
  2030  0002F8  0E20               	movlw	32
  2031  0002FA  ECB5  F005         	call	_LCD_dato
  2032                           
  2033                           ;Mensajes.c: 77: LCD_dato ('H');
  2034  0002FE  0E48               	movlw	72
  2035  000300  ECB5  F005         	call	_LCD_dato
  2036                           
  2037                           ;Mensajes.c: 78: LCD_dato ('z');
  2038  000304  0E7A               	movlw	122
  2039  000306  ECB5  F005         	call	_LCD_dato
  2040  00030A  0012               	return		;funcret
  2041  00030C                     __end_of_Mensaje_LCD:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodh	equ	0xFF4
  2048                           prodl	equ	0xFF3
  2049                           intcon	equ	0xFF2
  2050                           intcon2	equ	0xFF1
  2051                           postinc0	equ	0xFEE
  2052                           wreg	equ	0xFE8
  2053                           indf1	equ	0xFE7
  2054                           fsr1h	equ	0xFE2
  2055                           fsr1l	equ	0xFE1
  2056                           indf2	equ	0xFDF
  2057                           fsr2h	equ	0xFDA
  2058                           fsr2l	equ	0xFD9
  2059                           status	equ	0xFD8
  2060                           
  2061 ;; *************** function _enter *****************
  2062 ;; Defined at:
  2063 ;;		line 148 in file "TECLADO_LCD.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    9
  2084 ;; This function calls:
  2085 ;;		_LCD_cmd
  2086 ;; This function is called by:
  2087 ;;		_Mensaje_LCD
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text10
  2092  000CD2                     __ptext10:
  2093                           	opt stack 0
  2094  000CD2                     _enter:
  2095                           	opt stack 20
  2096                           
  2097                           ;TECLADO_LCD.c: 149: LCD_cmd (0XC0);
  2098                           
  2099                           ;incstack = 0
  2100  000CD2  0EC0               	movlw	192
  2101  000CD4  ECC9  F005         	call	_LCD_cmd
  2102  000CD8  0012               	return		;funcret
  2103  000CDA                     __end_of_enter:
  2104                           	opt stack 0
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           prodh	equ	0xFF4
  2110                           prodl	equ	0xFF3
  2111                           intcon	equ	0xFF2
  2112                           intcon2	equ	0xFF1
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           indf1	equ	0xFE7
  2116                           fsr1h	equ	0xFE2
  2117                           fsr1l	equ	0xFE1
  2118                           indf2	equ	0xFDF
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _clr_screen *****************
  2124 ;; Defined at:
  2125 ;;		line 144 in file "TECLADO_LCD.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    9
  2146 ;; This function calls:
  2147 ;;		_LCD_cmd
  2148 ;; This function is called by:
  2149 ;;		_Mensaje_LCD
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text11
  2154  000CDA                     __ptext11:
  2155                           	opt stack 0
  2156  000CDA                     _clr_screen:
  2157                           	opt stack 20
  2158                           
  2159                           ;TECLADO_LCD.c: 145: LCD_cmd (0X01);
  2160                           
  2161                           ;incstack = 0
  2162  000CDA  0E01               	movlw	1
  2163  000CDC  ECC9  F005         	call	_LCD_cmd
  2164  000CE0  0012               	return		;funcret
  2165  000CE2                     __end_of_clr_screen:
  2166                           	opt stack 0
  2167                           tblptru	equ	0xFF8
  2168                           tblptrh	equ	0xFF7
  2169                           tblptrl	equ	0xFF6
  2170                           tablat	equ	0xFF5
  2171                           prodh	equ	0xFF4
  2172                           prodl	equ	0xFF3
  2173                           intcon	equ	0xFF2
  2174                           intcon2	equ	0xFF1
  2175                           postinc0	equ	0xFEE
  2176                           wreg	equ	0xFE8
  2177                           indf1	equ	0xFE7
  2178                           fsr1h	equ	0xFE2
  2179                           fsr1l	equ	0xFE1
  2180                           indf2	equ	0xFDF
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _LCD_cmd *****************
  2186 ;; Defined at:
  2187 ;;		line 95 in file "TECLADO_LCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  dato            1    wreg     unsigned char 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  dato            1    1[BANK0 ] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0
  2202 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2204 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2205 ;;Total ram usage:        1 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    8
  2208 ;; This function calls:
  2209 ;;		_esperar_LCD
  2210 ;; This function is called by:
  2211 ;;		_ini_LCD
  2212 ;;		_clr_screen
  2213 ;;		_enter
  2214 ;;		_shift_screen_D
  2215 ;;		_shift_screen_I
  2216 ;;		_cursor_D
  2217 ;;		_cursor_I
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222  000B92                     __ptext12:
  2223                           	opt stack 0
  2224  000B92                     _LCD_cmd:
  2225                           	opt stack 21
  2226                           
  2227                           ;incstack = 0
  2228                           ;LCD_cmd@dato stored from wreg
  2229  000B92  0100               	movlb	0	; () banked
  2230  000B94  6F61               	movwf	LCD_cmd@dato& (0+255),b
  2231                           
  2232                           ;TECLADO_LCD.c: 96: LATD = dato;
  2233  000B96  C061  FF8C         	movff	LCD_cmd@dato,3980	;volatile
  2234                           
  2235                           ;TECLADO_LCD.c: 97: LATEbits.LATE0 = 0;
  2236  000B9A  908D               	bcf	3981,0,c	;volatile
  2237                           
  2238                           ;TECLADO_LCD.c: 98: LATEbits.LATE1 = 0;
  2239  000B9C  928D               	bcf	3981,1,c	;volatile
  2240                           
  2241                           ;TECLADO_LCD.c: 99: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2242  000B9E  0E06               	movlw	6
  2243  000BA0                     u1107:
  2244  000BA0  2EE8               	decfsz	wreg,f,c
  2245  000BA2  D7FE               	bra	u1107
  2246  000BA4  D000               	nop2	
  2247                           
  2248                           ;TECLADO_LCD.c: 100: LATEbits.LATE2 = 1;
  2249  000BA6  848D               	bsf	3981,2,c	;volatile
  2250                           
  2251                           ;TECLADO_LCD.c: 101: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2252  000BA8  0E06               	movlw	6
  2253  000BAA                     u1117:
  2254  000BAA  2EE8               	decfsz	wreg,f,c
  2255  000BAC  D7FE               	bra	u1117
  2256  000BAE  D000               	nop2	
  2257                           
  2258                           ;TECLADO_LCD.c: 102: LATEbits.LATE2 = 0;
  2259  000BB0  948D               	bcf	3981,2,c	;volatile
  2260                           
  2261                           ;TECLADO_LCD.c: 103: esperar_LCD ();
  2262  000BB2  EC53  F005         	call	_esperar_LCD	;wreg free
  2263  000BB6  0012               	return		;funcret
  2264  000BB8                     __end_of_LCD_cmd:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon	equ	0xFF2
  2273                           intcon2	equ	0xFF1
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           indf1	equ	0xFE7
  2277                           fsr1h	equ	0xFE2
  2278                           fsr1l	equ	0xFE1
  2279                           indf2	equ	0xFDF
  2280                           fsr2h	equ	0xFDA
  2281                           fsr2l	equ	0xFD9
  2282                           status	equ	0xFD8
  2283                           
  2284 ;; *************** function _LCD_dato *****************
  2285 ;; Defined at:
  2286 ;;		line 106 in file "TECLADO_LCD.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  dato            1    wreg     unsigned char 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  dato            1    1[BANK0 ] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2300 ;;      Params:         0       0       0       0       0       0       0       0       0
  2301 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2303 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2304 ;;Total ram usage:        1 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    8
  2307 ;; This function calls:
  2308 ;;		_esperar_LCD
  2309 ;; This function is called by:
  2310 ;;		_Mensaje_LCD
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text13
  2315  000B6A                     __ptext13:
  2316                           	opt stack 0
  2317  000B6A                     _LCD_dato:
  2318                           	opt stack 21
  2319                           
  2320                           ;incstack = 0
  2321                           ;LCD_dato@dato stored from wreg
  2322  000B6A  0100               	movlb	0	; () banked
  2323  000B6C  6F61               	movwf	LCD_dato@dato& (0+255),b
  2324                           
  2325                           ;TECLADO_LCD.c: 107: LATD = dato;
  2326  000B6E  C061  FF8C         	movff	LCD_dato@dato,3980	;volatile
  2327                           
  2328                           ;TECLADO_LCD.c: 108: LATEbits.LATE0 = 1;
  2329  000B72  808D               	bsf	3981,0,c	;volatile
  2330                           
  2331                           ;TECLADO_LCD.c: 109: LATEbits.LATE1 = 0;
  2332  000B74  928D               	bcf	3981,1,c	;volatile
  2333                           
  2334                           ;TECLADO_LCD.c: 110: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2335  000B76  0E06               	movlw	6
  2336  000B78                     u1127:
  2337  000B78  2EE8               	decfsz	wreg,f,c
  2338  000B7A  D7FE               	bra	u1127
  2339  000B7C  D000               	nop2	
  2340                           
  2341                           ;TECLADO_LCD.c: 111: LATEbits.LATE2 = 1;
  2342  000B7E  848D               	bsf	3981,2,c	;volatile
  2343                           
  2344                           ;TECLADO_LCD.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2345  000B80  0E06               	movlw	6
  2346  000B82                     u1137:
  2347  000B82  2EE8               	decfsz	wreg,f,c
  2348  000B84  D7FE               	bra	u1137
  2349  000B86  D000               	nop2	
  2350                           
  2351                           ;TECLADO_LCD.c: 113: LATEbits.LATE2 = 0;
  2352  000B88  948D               	bcf	3981,2,c	;volatile
  2353                           
  2354                           ;TECLADO_LCD.c: 114: LATEbits.LATE0 = 0;
  2355  000B8A  908D               	bcf	3981,0,c	;volatile
  2356                           
  2357                           ;TECLADO_LCD.c: 115: esperar_LCD ();
  2358  000B8C  EC53  F005         	call	_esperar_LCD	;wreg free
  2359  000B90  0012               	return		;funcret
  2360  000B92                     __end_of_LCD_dato:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           prodh	equ	0xFF4
  2367                           prodl	equ	0xFF3
  2368                           intcon	equ	0xFF2
  2369                           intcon2	equ	0xFF1
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           indf1	equ	0xFE7
  2373                           fsr1h	equ	0xFE2
  2374                           fsr1l	equ	0xFE1
  2375                           indf2	equ	0xFDF
  2376                           fsr2h	equ	0xFDA
  2377                           fsr2l	equ	0xFD9
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _esperar_LCD *****************
  2381 ;; Defined at:
  2382 ;;		line 118 in file "TECLADO_LCD.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  bussy           1    0[BANK0 ] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0
  2397 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2399 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2400 ;;Total ram usage:        1 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    7
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_LCD_cmd
  2407 ;;		_LCD_dato
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text14
  2412  000AA6                     __ptext14:
  2413                           	opt stack 0
  2414  000AA6                     _esperar_LCD:
  2415                           	opt stack 21
  2416                           
  2417                           ;TECLADO_LCD.c: 119: unsigned char bussy = 1;
  2418                           
  2419                           ;incstack = 0
  2420  000AA6  0E01               	movlw	1
  2421  000AA8  0100               	movlb	0	; () banked
  2422  000AAA  6F60               	movwf	esperar_LCD@bussy& (0+255),b
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;TECLADO_LCD.c: 120: TRISD = 0XFF;
  2426  000AAC  6895               	setf	3989,c	;volatile
  2427                           
  2428                           ;TECLADO_LCD.c: 121: while (bussy){
  2429  000AAE  D017               	goto	l1819
  2430  000AB0                     l221:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;TECLADO_LCD.c: 122: LATEbits.LATE0 = 0;
  2434  000AB0  908D               	bcf	3981,0,c	;volatile
  2435                           
  2436                           ;TECLADO_LCD.c: 123: LATEbits.LATE1 = 1;
  2437  000AB2  828D               	bsf	3981,1,c	;volatile
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;TECLADO_LCD.c: 124: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2441  000AB4  0E06               	movlw	6
  2442  000AB6                     u1147:
  2443  000AB6  2EE8               	decfsz	wreg,f,c
  2444  000AB8  D7FE               	bra	u1147
  2445  000ABA  D000               	nop2	
  2446                           
  2447                           ;TECLADO_LCD.c: 125: LATEbits.LATE2 = 1;
  2448  000ABC  848D               	bsf	3981,2,c	;volatile
  2449                           
  2450                           ;TECLADO_LCD.c: 126: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2451  000ABE  0E06               	movlw	6
  2452  000AC0                     u1157:
  2453  000AC0  2EE8               	decfsz	wreg,f,c
  2454  000AC2  D7FE               	bra	u1157
  2455  000AC4  D000               	nop2	
  2456                           
  2457                           ;TECLADO_LCD.c: 127: bussy = PORTD;
  2458  000AC6  CF83 F060          	movff	3971,esperar_LCD@bussy	;volatile
  2459                           
  2460                           ;TECLADO_LCD.c: 128: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2461  000ACA  0E06               	movlw	6
  2462  000ACC                     u1167:
  2463  000ACC  2EE8               	decfsz	wreg,f,c
  2464  000ACE  D7FE               	bra	u1167
  2465  000AD0  D000               	nop2	
  2466                           
  2467                           ;TECLADO_LCD.c: 129: LATEbits.LATE2 = 0;
  2468  000AD2  948D               	bcf	3981,2,c	;volatile
  2469                           
  2470                           ;TECLADO_LCD.c: 130: bussy = bussy>>7;
  2471  000AD4  0100               	movlb	0	; () banked
  2472  000AD6  4560               	rlncf	esperar_LCD@bussy& (0+255),w,b
  2473  000AD8  0B01               	andlw	1
  2474  000ADA  0100               	movlb	0	; () banked
  2475  000ADC  6F60               	movwf	esperar_LCD@bussy& (0+255),b
  2476  000ADE                     l1819:
  2477                           
  2478                           ; BSR set to: 0
  2479  000ADE  0100               	movlb	0	; () banked
  2480  000AE0  5160               	movf	esperar_LCD@bussy& (0+255),w,b
  2481  000AE2  0100               	movlb	0	; () banked
  2482  000AE4  A4D8               	btfss	status,2,c
  2483  000AE6  D7E4               	goto	l221
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;TECLADO_LCD.c: 131: }
  2487                           ;TECLADO_LCD.c: 132: TRISD = 0;
  2488                           
  2489                           ; BSR set to: 0
  2490  000AE8  0E00               	movlw	0
  2491  000AEA  6E95               	movwf	3989,c	;volatile
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;TECLADO_LCD.c: 133: LATEbits.LATE1 = 0;
  2495  000AEC  928D               	bcf	3981,1,c	;volatile
  2496                           
  2497                           ; BSR set to: 0
  2498  000AEE  0012               	return		;funcret
  2499  000AF0                     __end_of_esperar_LCD:
  2500                           	opt stack 0
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           prodh	equ	0xFF4
  2506                           prodl	equ	0xFF3
  2507                           intcon	equ	0xFF2
  2508                           intcon2	equ	0xFF1
  2509                           postinc0	equ	0xFEE
  2510                           wreg	equ	0xFE8
  2511                           indf1	equ	0xFE7
  2512                           fsr1h	equ	0xFE2
  2513                           fsr1l	equ	0xFE1
  2514                           indf2	equ	0xFDF
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _E_Read *****************
  2520 ;; Defined at:
  2521 ;;		line 4 in file "Memoria.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  address         1    wreg     unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  address         1    0[BANK0 ] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      unsigned char 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0
  2536 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2538 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2539 ;;Total ram usage:        1 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    7
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text15
  2550  000C96                     __ptext15:
  2551                           	opt stack 0
  2552  000C96                     _E_Read:
  2553                           	opt stack 23
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;incstack = 0
  2557                           ;E_Read@address stored from wreg
  2558  000C96  0100               	movlb	0	; () banked
  2559  000C98  6F60               	movwf	E_Read@address& (0+255),b
  2560                           
  2561                           ;Memoria.c: 5: EEADR = address;
  2562  000C9A  C060  FFA9         	movff	E_Read@address,4009	;volatile
  2563                           
  2564                           ;Memoria.c: 6: EECON1bits.EEPGD = 0;
  2565  000C9E  9EA6               	bcf	4006,7,c	;volatile
  2566                           
  2567                           ;Memoria.c: 7: EECON1bits.CFGS = 0;
  2568  000CA0  9CA6               	bcf	4006,6,c	;volatile
  2569                           
  2570                           ;Memoria.c: 8: EECON1bits.RD = 1;
  2571  000CA2  80A6               	bsf	4006,0,c	;volatile
  2572  000CA4                     l362:
  2573  000CA4  B0A6               	btfsc	4006,0,c	;volatile
  2574  000CA6  D7FE               	goto	l362
  2575                           
  2576                           ;Memoria.c: 10: return EEDATA;
  2577  000CA8  50A8               	movf	4008,w,c	;volatile
  2578  000CAA  0012               	return		;funcret
  2579  000CAC                     __end_of_E_Read:
  2580                           	opt stack 0
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           prodh	equ	0xFF4
  2586                           prodl	equ	0xFF3
  2587                           intcon	equ	0xFF2
  2588                           intcon2	equ	0xFF1
  2589                           postinc0	equ	0xFEE
  2590                           wreg	equ	0xFE8
  2591                           indf1	equ	0xFE7
  2592                           fsr1h	equ	0xFE2
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _ISR_L *****************
  2600 ;; Defined at:
  2601 ;;		line 84 in file "Main.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2617 ;;      Temps:         17       0       0       0       0       0       0       0       0
  2618 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2619 ;;Total ram usage:       17 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    6
  2622 ;; This function calls:
  2623 ;;		_port
  2624 ;; This function is called by:
  2625 ;;		Interrupt level 1
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	intcodelo
  2630  000018                     __pintcodelo:
  2631                           	opt stack 0
  2632  000018                     _ISR_L:
  2633                           	opt stack 20
  2634                           
  2635                           ;incstack = 0
  2636  000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2637  00001A  CFD8 F01A          	movff	status,??_ISR_L
  2638  00001E  CFE8 F01B          	movff	wreg,??_ISR_L+1
  2639  000022  CFE0 F01C          	movff	bsr,??_ISR_L+2
  2640  000026  CFFA F01D          	movff	pclath,??_ISR_L+3
  2641  00002A  CFFB F01E          	movff	pclatu,??_ISR_L+4
  2642  00002E  CFE9 F01F          	movff	fsr0l,??_ISR_L+5
  2643  000032  CFEA F020          	movff	fsr0h,??_ISR_L+6
  2644  000036  CFE1 F021          	movff	fsr1l,??_ISR_L+7
  2645  00003A  CFE2 F022          	movff	fsr1h,??_ISR_L+8
  2646  00003E  CFD9 F023          	movff	fsr2l,??_ISR_L+9
  2647  000042  CFDA F024          	movff	fsr2h,??_ISR_L+10
  2648  000046  CFF3 F025          	movff	prodl,??_ISR_L+11
  2649  00004A  CFF4 F026          	movff	prodh,??_ISR_L+12
  2650  00004E  CFF6 F027          	movff	tblptrl,??_ISR_L+13
  2651  000052  CFF7 F028          	movff	tblptrh,??_ISR_L+14
  2652  000056  CFF8 F029          	movff	tblptru,??_ISR_L+15
  2653  00005A  CFF5 F02A          	movff	tablat,??_ISR_L+16
  2654                           
  2655                           ;Main.c: 85: LATA = V_Puerto1;
  2656  00005E  C03D  FF89         	movff	_V_Puerto1,3977	;volatile
  2657                           
  2658                           ;Main.c: 86: LATC = V_Puerto2;
  2659  000062  C03C  FF8B         	movff	_V_Puerto2,3979	;volatile
  2660                           
  2661                           ;Main.c: 87: PIR1bits.TMR2IF = 0;
  2662  000066  929E               	bcf	3998,1,c	;volatile
  2663                           
  2664                           ;Main.c: 88: if (j == 63)
  2665  000068  0E3F               	movlw	63
  2666  00006A  183A               	xorwf	_j,w,c
  2667  00006C  A4D8               	btfss	status,2,c
  2668  00006E  D003               	goto	i1l1563
  2669                           
  2670                           ;Main.c: 89: j = 0;
  2671  000070  0E00               	movlw	0
  2672  000072  6E3A               	movwf	_j,c
  2673  000074  D023               	goto	i1l1581
  2674  000076                     i1l1563:
  2675                           
  2676                           ;Main.c: 90: else
  2677                           ;Main.c: 91: j++;
  2678  000076  2A3A               	incf	_j,f,c
  2679                           
  2680                           ;Main.c: 92: switch (Senal){
  2681  000078  D021               	goto	i1l1581
  2682  00007A                     i1l1565:
  2683                           
  2684                           ;Main.c: 94: V_Puerto1 = sine[j];
  2685  00007A  503A               	movf	_j,w,c
  2686  00007C  0D01               	mullw	1
  2687  00007E  0EBE               	movlw	low _sine
  2688  000080  24F3               	addwf	prodl,w,c
  2689  000082  6EF6               	movwf	tblptrl,c
  2690  000084  0E7F               	movlw	high _sine
  2691  000086  20F4               	addwfc	prodh,w,c
  2692  000088  6EF7               	movwf	tblptrh,c
  2693  00008A                     	if	0	;There are less than 3 active tblptr bytes
  2694  00008A                     	endif
  2695  00008A  0008               	tblrd		*
  2696  00008C  CFF5 F03D          	movff	tablat,_V_Puerto1
  2697                           
  2698                           ;Main.c: 95: V_Puerto2 = port (V_Puerto1);
  2699  000090  503D               	movf	_V_Puerto1,w,c
  2700  000092  ECDC  F005         	call	_port
  2701  000096  D010               	goto	L7
  2702  000098                     i1l1569:
  2703                           
  2704                           ;Main.c: 98: if (j>=31){
  2705  000098  0E1E               	movlw	30
  2706  00009A  643A               	cpfsgt	_j,c
  2707  00009C  D004               	goto	i1l110
  2708                           
  2709                           ;Main.c: 99: V_Puerto1 = 0;
  2710  00009E  0E00               	movlw	0
  2711  0000A0  6E3D               	movwf	_V_Puerto1,c
  2712                           
  2713                           ;Main.c: 100: V_Puerto2 = 0;
  2714  0000A2  0E00               	movlw	0
  2715  0000A4  D009               	goto	L7
  2716  0000A6                     i1l110:
  2717                           
  2718                           ;Main.c: 102: else{
  2719                           ;Main.c: 103: V_Puerto1 = 255;
  2720  0000A6  683D               	setf	_V_Puerto1,c
  2721                           
  2722                           ;Main.c: 104: V_Puerto2 = 0XC3;
  2723  0000A8  0EC3               	movlw	195
  2724  0000AA  D006               	goto	L7
  2725  0000AC                     i1l1575:
  2726                           
  2727                           ;Main.c: 108: V_Puerto1 = V_Puerto1 + 4;
  2728  0000AC  503D               	movf	_V_Puerto1,w,c
  2729  0000AE  0F04               	addlw	4
  2730  0000B0  6E3D               	movwf	_V_Puerto1,c
  2731                           
  2732                           ;Main.c: 109: V_Puerto2 = port (V_Puerto1);
  2733  0000B2  503D               	movf	_V_Puerto1,w,c
  2734  0000B4  ECDC  F005         	call	_port
  2735  0000B8                     L7:
  2736  0000B8  6E3C               	movwf	_V_Puerto2,c
  2737                           
  2738                           ;Main.c: 113: }
  2739                           
  2740                           ;Main.c: 112: break;
  2741                           
  2742                           ;Main.c: 111: default:
  2743                           
  2744                           ;Main.c: 110: break;
  2745  0000BA  D00A               	goto	i1l114
  2746  0000BC                     i1l1581:
  2747  0000BC  503E               	movf	_Senal,w,c
  2748                           
  2749                           ; Switch size 1, requested type "space"
  2750                           ; Number of cases is 3, Range of values is 1 to 3
  2751                           ; switch strategies available:
  2752                           ; Name         Instructions Cycles
  2753                           ; simple_byte           10     6 (average)
  2754                           ;	Chosen strategy is simple_byte
  2755  0000BE  0A01               	xorlw	1	; case 1
  2756  0000C0  B4D8               	btfsc	status,2,c
  2757  0000C2  D7DB               	goto	i1l1565
  2758  0000C4  0A03               	xorlw	3	; case 2
  2759  0000C6  B4D8               	btfsc	status,2,c
  2760  0000C8  D7E7               	goto	i1l1569
  2761  0000CA  0A01               	xorlw	1	; case 3
  2762  0000CC  B4D8               	btfsc	status,2,c
  2763  0000CE  D7EE               	goto	i1l1575
  2764  0000D0                     i1l114:
  2765  0000D0  C02A  FFF5         	movff	??_ISR_L+16,tablat
  2766  0000D4  C029  FFF8         	movff	??_ISR_L+15,tblptru
  2767  0000D8  C028  FFF7         	movff	??_ISR_L+14,tblptrh
  2768  0000DC  C027  FFF6         	movff	??_ISR_L+13,tblptrl
  2769  0000E0  C026  FFF4         	movff	??_ISR_L+12,prodh
  2770  0000E4  C025  FFF3         	movff	??_ISR_L+11,prodl
  2771  0000E8  C024  FFDA         	movff	??_ISR_L+10,fsr2h
  2772  0000EC  C023  FFD9         	movff	??_ISR_L+9,fsr2l
  2773  0000F0  C022  FFE2         	movff	??_ISR_L+8,fsr1h
  2774  0000F4  C021  FFE1         	movff	??_ISR_L+7,fsr1l
  2775  0000F8  C020  FFEA         	movff	??_ISR_L+6,fsr0h
  2776  0000FC  C01F  FFE9         	movff	??_ISR_L+5,fsr0l
  2777  000100  C01E  FFFB         	movff	??_ISR_L+4,pclatu
  2778  000104  C01D  FFFA         	movff	??_ISR_L+3,pclath
  2779  000108  C01C  FFE0         	movff	??_ISR_L+2,bsr
  2780  00010C  C01B  FFE8         	movff	??_ISR_L+1,wreg
  2781  000110  C01A  FFD8         	movff	??_ISR_L,status
  2782  000114  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2783  000116  0010               	retfie	
  2784  000118                     __end_of_ISR_L:
  2785                           	opt stack 0
  2786                           pclatu	equ	0xFFB
  2787                           pclath	equ	0xFFA
  2788                           tblptru	equ	0xFF8
  2789                           tblptrh	equ	0xFF7
  2790                           tblptrl	equ	0xFF6
  2791                           tablat	equ	0xFF5
  2792                           prodh	equ	0xFF4
  2793                           prodl	equ	0xFF3
  2794                           intcon	equ	0xFF2
  2795                           intcon2	equ	0xFF1
  2796                           postinc0	equ	0xFEE
  2797                           fsr0h	equ	0xFEA
  2798                           fsr0l	equ	0xFE9
  2799                           wreg	equ	0xFE8
  2800                           indf1	equ	0xFE7
  2801                           fsr1h	equ	0xFE2
  2802                           fsr1l	equ	0xFE1
  2803                           bsr	equ	0xFE0
  2804                           indf2	equ	0xFDF
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function _port *****************
  2810 ;; Defined at:
  2811 ;;		line 103 in file "Lib_generador.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  v_puerto        1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  v_puerto        1   22[COMRAM] unsigned char 
  2816 ;;  M2              1   24[COMRAM] unsigned char 
  2817 ;;  M1              1   23[COMRAM] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      unsigned char 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0
  2828 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2830 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2831 ;;Total ram usage:        3 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    5
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_ISR_L
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text17
  2842  000BB8                     __ptext17:
  2843                           	opt stack 0
  2844  000BB8                     _port:
  2845                           	opt stack 20
  2846                           
  2847                           ;incstack = 0
  2848                           ;port@v_puerto stored from wreg
  2849  000BB8  6E17               	movwf	port@v_puerto,c
  2850                           
  2851                           ;Lib_generador.c: 104: unsigned char M1 = 0;
  2852  000BBA  0E00               	movlw	0
  2853  000BBC  6E18               	movwf	port@M1,c
  2854                           
  2855                           ;Lib_generador.c: 105: unsigned char M2 = 0;
  2856  000BBE  0E00               	movlw	0
  2857  000BC0  6E19               	movwf	port@M2,c
  2858                           
  2859                           ;Lib_generador.c: 107: M1 = v_puerto & 0XC0;
  2860  000BC2  5017               	movf	port@v_puerto,w,c
  2861  000BC4  0BC0               	andlw	192
  2862  000BC6  6E18               	movwf	port@M1,c
  2863                           
  2864                           ;Lib_generador.c: 108: M2 = v_puerto & 0X30;
  2865  000BC8  5017               	movf	port@v_puerto,w,c
  2866  000BCA  0B30               	andlw	48
  2867  000BCC  6E19               	movwf	port@M2,c
  2868                           
  2869                           ;Lib_generador.c: 109: M2 = M2 >> 4;
  2870  000BCE  3819               	swapf	port@M2,w,c
  2871  000BD0  0B0F               	andlw	15
  2872  000BD2  6E19               	movwf	port@M2,c
  2873                           
  2874                           ;Lib_generador.c: 110: M1 = M1 | M2;
  2875  000BD4  5018               	movf	port@M1,w,c
  2876  000BD6  1019               	iorwf	port@M2,w,c
  2877  000BD8  6E18               	movwf	port@M1,c
  2878                           
  2879                           ;Lib_generador.c: 112: return M1;
  2880  000BDA  5018               	movf	port@M1,w,c
  2881  000BDC  0012               	return	
  2882  000BDE                     __end_of_port:
  2883                           	opt stack 0
  2884                           pclatu	equ	0xFFB
  2885                           pclath	equ	0xFFA
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           intcon	equ	0xFF2
  2893                           intcon2	equ	0xFF1
  2894                           postinc0	equ	0xFEE
  2895                           fsr0h	equ	0xFEA
  2896                           fsr0l	equ	0xFE9
  2897                           wreg	equ	0xFE8
  2898                           indf1	equ	0xFE7
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           bsr	equ	0xFE0
  2902                           indf2	equ	0xFDF
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function _ISR_H *****************
  2908 ;; Defined at:
  2909 ;;		line 27 in file "Main.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  aux_portb       1   21[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0
  2924 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2925 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2926 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2927 ;;Total ram usage:       15 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    4
  2930 ;; This function calls:
  2931 ;;		_E_Write
  2932 ;;		_Freq_charge
  2933 ;;		_cambio_frec
  2934 ;;		_leer_teclado
  2935 ;;		i2_Mensaje_LCD
  2936 ;;		i2_retardos
  2937 ;; This function is called by:
  2938 ;;		Interrupt level 2
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	intcode
  2943  000008                     __pintcode:
  2944                           	opt stack 0
  2945  000008                     _ISR_H:
  2946                           	opt stack 20
  2947                           
  2948                           ;incstack = 0
  2949  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2950  00000A  ED75  F002         	call	int_func,f	;refresh shadow registers
  2951                           pclatu	equ	0xFFB
  2952                           pclath	equ	0xFFA
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           intcon2	equ	0xFF1
  2961                           postinc0	equ	0xFEE
  2962                           fsr0h	equ	0xFEA
  2963                           fsr0l	equ	0xFE9
  2964                           wreg	equ	0xFE8
  2965                           indf1	equ	0xFE7
  2966                           fsr1h	equ	0xFE2
  2967                           fsr1l	equ	0xFE1
  2968                           bsr	equ	0xFE0
  2969                           indf2	equ	0xFDF
  2970                           fsr2h	equ	0xFDA
  2971                           fsr2l	equ	0xFD9
  2972                           status	equ	0xFD8
  2973                           
  2974                           	psect	intcode_body
  2975  0004EA                     __pintcode_body:
  2976                           	opt stack 20
  2977  0004EA                     int_func:
  2978                           	opt stack 20
  2979  0004EA  0006               	pop		; remove dummy address from shadow register refresh
  2980  0004EC  CFFA F008          	movff	pclath,??_ISR_H
  2981  0004F0  CFFB F009          	movff	pclatu,??_ISR_H+1
  2982  0004F4  CFE9 F00A          	movff	fsr0l,??_ISR_H+2
  2983  0004F8  CFEA F00B          	movff	fsr0h,??_ISR_H+3
  2984  0004FC  CFE1 F00C          	movff	fsr1l,??_ISR_H+4
  2985  000500  CFE2 F00D          	movff	fsr1h,??_ISR_H+5
  2986  000504  CFD9 F00E          	movff	fsr2l,??_ISR_H+6
  2987  000508  CFDA F00F          	movff	fsr2h,??_ISR_H+7
  2988  00050C  CFF3 F010          	movff	prodl,??_ISR_H+8
  2989  000510  CFF4 F011          	movff	prodh,??_ISR_H+9
  2990  000514  CFF6 F012          	movff	tblptrl,??_ISR_H+10
  2991  000518  CFF7 F013          	movff	tblptrh,??_ISR_H+11
  2992  00051C  CFF8 F014          	movff	tblptru,??_ISR_H+12
  2993  000520  CFF5 F015          	movff	tablat,??_ISR_H+13
  2994                           
  2995                           ;Main.c: 28: unsigned char aux_portb = 0;
  2996  000524  0E00               	movlw	0
  2997  000526  6E16               	movwf	ISR_H@aux_portb,c
  2998                           
  2999                           ;Main.c: 29: Aux_T = 0;
  3000  000528  0E00               	movlw	0
  3001  00052A  6E40               	movwf	_Aux_T,c
  3002                           
  3003                           ;Main.c: 30: if (INTCONbits.RBIF == 1){
  3004  00052C  A0F2               	btfss	intcon,0,c	;volatile
  3005  00052E  D063               	goto	i2l101
  3006                           
  3007                           ;Main.c: 31: aux_portb = PORTB;
  3008  000530  CF81 F016          	movff	3969,ISR_H@aux_portb	;volatile
  3009                           
  3010                           ;Main.c: 32: aux_portb &= 0XF0;
  3011  000534  0EF0               	movlw	240
  3012  000536  1616               	andwf	ISR_H@aux_portb,f,c
  3013                           
  3014                           ;Main.c: 33: if (aux_portb != 0xF0){
  3015  000538  0EF0               	movlw	240
  3016  00053A  1816               	xorwf	ISR_H@aux_portb,w,c
  3017  00053C  B4D8               	btfsc	status,2,c
  3018  00053E  D058               	goto	i2l2181
  3019                           
  3020                           ;Main.c: 34: leer_teclado ();
  3021  000540  EC19  F003         	call	_leer_teclado	;wreg free
  3022                           
  3023                           ;Main.c: 35: if (Aux_T != 0x80){
  3024  000544  0E80               	movlw	128
  3025  000546  1840               	xorwf	_Aux_T,w,c
  3026  000548  A4D8               	btfss	status,2,c
  3027  00054A  D03F               	goto	i2l2179
  3028  00054C  D051               	goto	i2l2181
  3029  00054E                     i2l2137:
  3030                           
  3031                           ;Main.c: 44: Senal = 1;
  3032  00054E  0E01               	movlw	1
  3033  000550  6E3E               	movwf	_Senal,c
  3034                           
  3035                           ;Main.c: 45: Mensaje_LCD ();
  3036  000552  EC86  F001         	call	i2_Mensaje_LCD	;wreg free
  3037                           
  3038                           ;Main.c: 46: E_Write (1, Senal);
  3039  000556  C03E  F001         	movff	_Senal,E_Write@data
  3040  00055A  0E01               	movlw	1
  3041  00055C  EC14  F006         	call	_E_Write
  3042                           
  3043                           ;Main.c: 47: break;
  3044  000560  D047               	goto	i2l2181
  3045  000562                     i2l2143:
  3046                           
  3047                           ;Main.c: 49: Senal = 2;
  3048  000562  0E02               	movlw	2
  3049  000564  6E3E               	movwf	_Senal,c
  3050                           
  3051                           ;Main.c: 50: Mensaje_LCD ();
  3052  000566  EC86  F001         	call	i2_Mensaje_LCD	;wreg free
  3053                           
  3054                           ;Main.c: 51: E_Write (1, Senal);
  3055  00056A  C03E  F001         	movff	_Senal,E_Write@data
  3056  00056E  0E01               	movlw	1
  3057  000570  EC14  F006         	call	_E_Write
  3058                           
  3059                           ;Main.c: 52: break;
  3060  000574  D03D               	goto	i2l2181
  3061  000576                     i2l2149:
  3062                           
  3063                           ;Main.c: 54: Senal = 3;
  3064  000576  0E03               	movlw	3
  3065  000578  6E3E               	movwf	_Senal,c
  3066                           
  3067                           ;Main.c: 55: Mensaje_LCD ();
  3068  00057A  EC86  F001         	call	i2_Mensaje_LCD	;wreg free
  3069                           
  3070                           ;Main.c: 56: E_Write (1, Senal);
  3071  00057E  C03E  F001         	movff	_Senal,E_Write@data
  3072  000582  0E01               	movlw	1
  3073  000584  EC14  F006         	call	_E_Write
  3074                           
  3075                           ;Main.c: 57: V_Puerto1 = 0;
  3076  000588  0E00               	movlw	0
  3077  00058A  6E3D               	movwf	_V_Puerto1,c
  3078                           
  3079                           ;Main.c: 58: V_Puerto2 = 0;
  3080  00058C  0E00               	movlw	0
  3081  00058E  6E3C               	movwf	_V_Puerto2,c
  3082                           
  3083                           ;Main.c: 59: break;
  3084  000590  D02F               	goto	i2l2181
  3085  000592                     i2l2159:
  3086                           
  3087                           ;Main.c: 61: Freq_charge ();
  3088  000592  EC59  F004         	call	_Freq_charge	;wreg free
  3089                           
  3090                           ;Main.c: 62: cambio_frec ();
  3091  000596  EC98  F005         	call	_cambio_frec	;wreg free
  3092                           
  3093                           ;Main.c: 63: Mensaje_LCD ();
  3094  00059A  EC86  F001         	call	i2_Mensaje_LCD	;wreg free
  3095                           
  3096                           ;Main.c: 64: E_Write (0, Frecuencia);
  3097  00059E  C03F  F001         	movff	_Frecuencia,E_Write@data
  3098  0005A2  0E00               	movlw	0
  3099  0005A4  EC14  F006         	call	_E_Write
  3100                           
  3101                           ;Main.c: 65: retardos ();
  3102  0005A8  ECA2  F004         	call	i2_retardos	;wreg free
  3103                           
  3104                           ;Main.c: 66: Tecla [0] = 0;
  3105  0005AC  0E00               	movlw	0
  3106  0005AE  6E37               	movwf	_Tecla,c
  3107                           
  3108                           ;Main.c: 67: Tecla [1] = 0;
  3109  0005B0  0E00               	movlw	0
  3110  0005B2  6E38               	movwf	_Tecla+1,c
  3111                           
  3112                           ;Main.c: 68: Tecla [2] = 0;
  3113  0005B4  0E00               	movlw	0
  3114  0005B6  6E39               	movwf	_Tecla+2,c
  3115                           
  3116                           ;Main.c: 69: T2CONbits.TMR2ON = 1;
  3117  0005B8  84CA               	bsf	4042,2,c	;volatile
  3118                           
  3119                           ;Main.c: 70: break;
  3120  0005BA  D01A               	goto	i2l2181
  3121  0005BC                     i2l100:
  3122                           
  3123                           ;Main.c: 72: Tecla [0] = Tecla [1];
  3124  0005BC  C038  F037         	movff	_Tecla+1,_Tecla
  3125                           
  3126                           ;Main.c: 73: Tecla [1] = Tecla [2];
  3127  0005C0  C039  F038         	movff	_Tecla+2,_Tecla+1
  3128                           
  3129                           ;Main.c: 74: Tecla [2] = Aux_T;
  3130  0005C4  C040  F039         	movff	_Aux_T,_Tecla+2
  3131                           
  3132                           ;Main.c: 76: }
  3133                           
  3134                           ;Main.c: 75: break;
  3135  0005C8  D013               	goto	i2l2181
  3136  0005CA                     i2l2179:
  3137  0005CA  5040               	movf	_Aux_T,w,c
  3138                           
  3139                           ; Switch size 1, requested type "space"
  3140                           ; Number of cases is 6, Range of values is 10 to 15
  3141                           ; switch strategies available:
  3142                           ; Name         Instructions Cycles
  3143                           ; simple_byte           19    10 (average)
  3144                           ;	Chosen strategy is simple_byte
  3145  0005CC  0A0A               	xorlw	10	; case 10
  3146  0005CE  B4D8               	btfsc	status,2,c
  3147  0005D0  D7BE               	goto	i2l2137
  3148  0005D2  0A01               	xorlw	1	; case 11
  3149  0005D4  B4D8               	btfsc	status,2,c
  3150  0005D6  D7C5               	goto	i2l2143
  3151  0005D8  0A07               	xorlw	7	; case 12
  3152  0005DA  B4D8               	btfsc	status,2,c
  3153  0005DC  D7CC               	goto	i2l2149
  3154  0005DE  0A01               	xorlw	1	; case 13
  3155  0005E0  B4D8               	btfsc	status,2,c
  3156  0005E2  D7D7               	goto	i2l2159
  3157  0005E4  0A03               	xorlw	3	; case 14
  3158  0005E6  B4D8               	btfsc	status,2,c
  3159  0005E8  D003               	goto	i2l2181
  3160  0005EA  0A01               	xorlw	1	; case 15
  3161  0005EC  A4D8               	btfss	status,2,c
  3162  0005EE  D7E6               	goto	i2l100
  3163  0005F0                     i2l2181:
  3164                           
  3165                           ;Main.c: 77: }
  3166                           ;Main.c: 78: }
  3167                           ;Main.c: 79: LATB = 0XF0;
  3168  0005F0  0EF0               	movlw	240
  3169  0005F2  6E8A               	movwf	3978,c	;volatile
  3170                           
  3171                           ;Main.c: 80: INTCONbits.RBIF = 0;
  3172  0005F4  90F2               	bcf	intcon,0,c	;volatile
  3173  0005F6                     i2l101:
  3174  0005F6  C015  FFF5         	movff	??_ISR_H+13,tablat
  3175  0005FA  C014  FFF8         	movff	??_ISR_H+12,tblptru
  3176  0005FE  C013  FFF7         	movff	??_ISR_H+11,tblptrh
  3177  000602  C012  FFF6         	movff	??_ISR_H+10,tblptrl
  3178  000606  C011  FFF4         	movff	??_ISR_H+9,prodh
  3179  00060A  C010  FFF3         	movff	??_ISR_H+8,prodl
  3180  00060E  C00F  FFDA         	movff	??_ISR_H+7,fsr2h
  3181  000612  C00E  FFD9         	movff	??_ISR_H+6,fsr2l
  3182  000616  C00D  FFE2         	movff	??_ISR_H+5,fsr1h
  3183  00061A  C00C  FFE1         	movff	??_ISR_H+4,fsr1l
  3184  00061E  C00B  FFEA         	movff	??_ISR_H+3,fsr0h
  3185  000622  C00A  FFE9         	movff	??_ISR_H+2,fsr0l
  3186  000626  C009  FFFB         	movff	??_ISR_H+1,pclatu
  3187  00062A  C008  FFFA         	movff	??_ISR_H,pclath
  3188  00062E  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3189  000630  0011               	retfie		f
  3190  000632                     __end_of_ISR_H:
  3191                           	opt stack 0
  3192                           pclatu	equ	0xFFB
  3193                           pclath	equ	0xFFA
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           intcon	equ	0xFF2
  3201                           intcon2	equ	0xFF1
  3202                           postinc0	equ	0xFEE
  3203                           fsr0h	equ	0xFEA
  3204                           fsr0l	equ	0xFE9
  3205                           wreg	equ	0xFE8
  3206                           indf1	equ	0xFE7
  3207                           fsr1h	equ	0xFE2
  3208                           fsr1l	equ	0xFE1
  3209                           bsr	equ	0xFE0
  3210                           indf2	equ	0xFDF
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function i2_retardos *****************
  3216 ;; Defined at:
  3217 ;;		line 57 in file "Lib_generador.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  retardos        1    4[COMRAM] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0
  3232 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3233 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3234 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3235 ;;Total ram usage:        5 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_ISR_H
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text19
  3245  000944                     __ptext19:
  3246                           	opt stack 0
  3247  000944                     i2_retardos:
  3248                           	opt stack 23
  3249                           
  3250                           ;Lib_generador.c: 58: unsigned char M_Aux = 0;
  3251                           
  3252                           ;incstack = 0
  3253  000944  0E00               	movlw	0
  3254  000946  6E05               	movwf	i2retardos@M_Aux,c
  3255                           
  3256                           ;Lib_generador.c: 59: M_Aux = Frecuencia;
  3257  000948  C03F  F005         	movff	_Frecuencia,i2retardos@M_Aux
  3258                           
  3259                           ;Lib_generador.c: 60: if (M_Aux > 0 && M_Aux <= 12)
  3260  00094C  5005               	movf	i2retardos@M_Aux,w,c
  3261  00094E  B4D8               	btfsc	status,2,c
  3262  000950  D005               	goto	i2l1469
  3263  000952  0E0D               	movlw	13
  3264  000954  6005               	cpfslt	i2retardos@M_Aux,c
  3265  000956  D002               	goto	i2l1469
  3266                           
  3267                           ;Lib_generador.c: 61: T2CON = 0X3A;
  3268  000958  0E3A               	movlw	58
  3269  00095A  D01C               	goto	L11
  3270  00095C                     i2l1469:
  3271                           
  3272                           ;Lib_generador.c: 62: else if (M_Aux > 12 && M_Aux <= 24)
  3273  00095C  0E0C               	movlw	12
  3274  00095E  6405               	cpfsgt	i2retardos@M_Aux,c
  3275  000960  D005               	goto	i2l1475
  3276  000962  0E19               	movlw	25
  3277  000964  6005               	cpfslt	i2retardos@M_Aux,c
  3278  000966  D002               	goto	i2l1475
  3279                           
  3280                           ;Lib_generador.c: 63: T2CON = 0X48;
  3281  000968  0E48               	movlw	72
  3282  00096A  D014               	goto	L11
  3283  00096C                     i2l1475:
  3284                           
  3285                           ;Lib_generador.c: 64: else if (M_Aux > 24 && M_Aux <= 60)
  3286  00096C  0E18               	movlw	24
  3287  00096E  6405               	cpfsgt	i2retardos@M_Aux,c
  3288  000970  D005               	goto	i2l1481
  3289  000972  0E3D               	movlw	61
  3290  000974  6005               	cpfslt	i2retardos@M_Aux,c
  3291  000976  D002               	goto	i2l1481
  3292                           
  3293                           ;Lib_generador.c: 65: T2CON = 0X20;
  3294  000978  0E20               	movlw	32
  3295  00097A  D00C               	goto	L11
  3296  00097C                     i2l1481:
  3297                           
  3298                           ;Lib_generador.c: 66: else if (M_Aux > 60 && M_Aux <= 121)
  3299  00097C  0E3C               	movlw	60
  3300  00097E  6405               	cpfsgt	i2retardos@M_Aux,c
  3301  000980  D005               	goto	i2l1487
  3302  000982  0E7A               	movlw	122
  3303  000984  6005               	cpfslt	i2retardos@M_Aux,c
  3304  000986  D002               	goto	i2l1487
  3305                           
  3306                           ;Lib_generador.c: 67: T2CON = 0X08;
  3307  000988  0E08               	movlw	8
  3308  00098A  D004               	goto	L11
  3309  00098C                     i2l1487:
  3310                           
  3311                           ;Lib_generador.c: 68: else if (M_Aux > 121 && M_Aux <= 255)
  3312  00098C  0E79               	movlw	121
  3313  00098E  6405               	cpfsgt	i2retardos@M_Aux,c
  3314  000990  D003               	goto	i2l1491
  3315  000992  D002               	goto	i2l1491
  3316  000994                     L11:
  3317  000994  6ECA               	movwf	4042,c	;volatile
  3318  000996  D002               	goto	i2l1493
  3319  000998                     i2l1491:
  3320                           
  3321                           ;Lib_generador.c: 70: else
  3322                           ;Lib_generador.c: 71: T2CON = 0;
  3323  000998  0E00               	movlw	0
  3324  00099A  D7FC               	goto	L11
  3325  00099C                     i2l1493:
  3326                           
  3327                           ;Lib_generador.c: 72: PR2 = V_Time[M_Aux-1];
  3328  00099C  0EFF               	movlw	255
  3329  00099E  6E01               	movwf	??i2_retardos& (0+255),c
  3330  0009A0  0EFF               	movlw	255
  3331  0009A2  6E02               	movwf	(??i2_retardos+1)& (0+255),c
  3332  0009A4  5005               	movf	i2retardos@M_Aux,w,c
  3333  0009A6  6E03               	movwf	(??i2_retardos+2)& (0+255),c
  3334  0009A8  6A04               	clrf	(??i2_retardos+3)& (0+255),c
  3335  0009AA  5001               	movf	??i2_retardos,w,c
  3336  0009AC  2603               	addwf	??i2_retardos+2,f,c
  3337  0009AE  5002               	movf	??i2_retardos+1,w,c
  3338  0009B0  2204               	addwfc	??i2_retardos+3,f,c
  3339  0009B2  0EBF               	movlw	low _V_Time
  3340  0009B4  2403               	addwf	??i2_retardos+2,w,c
  3341  0009B6  6EF6               	movwf	tblptrl,c
  3342  0009B8  0E7E               	movlw	high _V_Time
  3343  0009BA  2004               	addwfc	??i2_retardos+3,w,c
  3344  0009BC  6EF7               	movwf	tblptrh,c
  3345  0009BE                     	if	0	;There are less than 3 active tblptr bytes
  3346  0009BE                     	endif
  3347  0009BE  0008               	tblrd		*
  3348  0009C0  CFF5 FFCB          	movff	tablat,4043	;volatile
  3349  0009C4  0012               	return		;funcret
  3350  0009C6                     __end_ofi2_retardos:
  3351                           	opt stack 0
  3352                           pclatu	equ	0xFFB
  3353                           pclath	equ	0xFFA
  3354                           tblptru	equ	0xFF8
  3355                           tblptrh	equ	0xFF7
  3356                           tblptrl	equ	0xFF6
  3357                           tablat	equ	0xFF5
  3358                           prodh	equ	0xFF4
  3359                           prodl	equ	0xFF3
  3360                           intcon	equ	0xFF2
  3361                           intcon2	equ	0xFF1
  3362                           postinc0	equ	0xFEE
  3363                           fsr0h	equ	0xFEA
  3364                           fsr0l	equ	0xFE9
  3365                           wreg	equ	0xFE8
  3366                           indf1	equ	0xFE7
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           bsr	equ	0xFE0
  3370                           indf2	equ	0xFDF
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function i2_Mensaje_LCD *****************
  3376 ;; Defined at:
  3377 ;;		line 4 in file "Mensajes.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  Mensaje_LCD     3    2[COMRAM] unsigned char [3]
  3382 ;;  Mensaje_LCD     1    6[COMRAM] unsigned char 
  3383 ;;  Mensaje_LCD     1    5[COMRAM] unsigned char 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3393 ;;      Params:         0       0       0       0       0       0       0       0       0
  3394 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3396 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3397 ;;Total ram usage:        5 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    3
  3400 ;; This function calls:
  3401 ;;		i2_LCD_dato
  3402 ;;		i2_clr_screen
  3403 ;;		i2_enter
  3404 ;; This function is called by:
  3405 ;;		_ISR_H
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text20
  3410  00030C                     __ptext20:
  3411                           	opt stack 0
  3412  00030C                     i2_Mensaje_LCD:
  3413                           	opt stack 20
  3414                           
  3415                           ;Mensajes.c: 5: unsigned char Numeros [3]={0, 0, 0};
  3416                           
  3417                           ;incstack = 0
  3418  00030C  C031  F003         	movff	Mensaje_LCD@F3825,i2Mensaje_LCD@Numeros
  3419  000310  C032  F004         	movff	Mensaje_LCD@F3825+1,i2Mensaje_LCD@Numeros+1
  3420  000314  C033  F005         	movff	Mensaje_LCD@F3825+2,i2Mensaje_LCD@Numeros+2
  3421                           
  3422                           ;Mensajes.c: 6: for (unsigned char i = 0; i<3; i++)
  3423  000318  0E00               	movlw	0
  3424  00031A  6E07               	movwf	i2Mensaje_LCD@i,c
  3425  00031C                     i2l2085:
  3426  00031C  0E02               	movlw	2
  3427  00031E  6407               	cpfsgt	i2Mensaje_LCD@i,c
  3428  000320  D001               	goto	i2l2089
  3429  000322  D015               	goto	i2l2095
  3430  000324                     i2l2089:
  3431                           
  3432                           ;Mensajes.c: 7: Numeros [i] = 48 + Freq[i];
  3433  000324  5007               	movf	i2Mensaje_LCD@i,w,c
  3434  000326  0D01               	mullw	1
  3435  000328  0E03               	movlw	low i2Mensaje_LCD@Numeros
  3436  00032A  24F3               	addwf	prodl,w,c
  3437  00032C  6ED9               	movwf	fsr2l,c
  3438  00032E  0E00               	movlw	high i2Mensaje_LCD@Numeros
  3439  000330  20F4               	addwfc	prodh,w,c
  3440  000332  6EDA               	movwf	fsr2h,c
  3441  000334  5007               	movf	i2Mensaje_LCD@i,w,c
  3442  000336  0D01               	mullw	1
  3443  000338  0E34               	movlw	low _Freq
  3444  00033A  24F3               	addwf	prodl,w,c
  3445  00033C  6EE1               	movwf	fsr1l,c
  3446  00033E  0E00               	movlw	high _Freq
  3447  000340  20F4               	addwfc	prodh,w,c
  3448  000342  6EE2               	movwf	fsr1h,c
  3449  000344  50E7               	movf	indf1,w,c
  3450  000346  0F30               	addlw	48
  3451  000348  6EDF               	movwf	indf2,c
  3452  00034A  2A07               	incf	i2Mensaje_LCD@i,f,c
  3453  00034C  D7E7               	goto	i2l2085
  3454  00034E                     i2l2095:
  3455                           
  3456                           ;Mensajes.c: 8: clr_screen ();
  3457  00034E  EC75  F006         	call	i2_clr_screen	;wreg free
  3458                           
  3459                           ;Mensajes.c: 9: switch (Senal){
  3460  000352  D08A               	goto	i2l2105
  3461  000354                     i2l2097:
  3462                           
  3463                           ;Mensajes.c: 11: LCD_dato (' ');
  3464  000354  0E20               	movlw	32
  3465  000356  ECEF  F005         	call	i2_LCD_dato
  3466                           
  3467                           ;Mensajes.c: 12: LCD_dato ('S');
  3468  00035A  0E53               	movlw	83
  3469  00035C  ECEF  F005         	call	i2_LCD_dato
  3470                           
  3471                           ;Mensajes.c: 13: LCD_dato ('e');
  3472  000360  0E65               	movlw	101
  3473  000362  ECEF  F005         	call	i2_LCD_dato
  3474                           
  3475                           ;Mensajes.c: 14: LCD_dato (0XEE);
  3476  000366  0EEE               	movlw	238
  3477  000368  ECEF  F005         	call	i2_LCD_dato
  3478                           
  3479                           ;Mensajes.c: 15: LCD_dato ('a');
  3480  00036C  0E61               	movlw	97
  3481  00036E  ECEF  F005         	call	i2_LCD_dato
  3482                           
  3483                           ;Mensajes.c: 16: LCD_dato ('l');
  3484  000372  0E6C               	movlw	108
  3485  000374  ECEF  F005         	call	i2_LCD_dato
  3486                           
  3487                           ;Mensajes.c: 17: LCD_dato (' ');
  3488  000378  0E20               	movlw	32
  3489  00037A  ECEF  F005         	call	i2_LCD_dato
  3490                           
  3491                           ;Mensajes.c: 18: LCD_dato ('S');
  3492  00037E  0E53               	movlw	83
  3493  000380  ECEF  F005         	call	i2_LCD_dato
  3494                           
  3495                           ;Mensajes.c: 19: LCD_dato ('e');
  3496  000384  0E65               	movlw	101
  3497  000386  ECEF  F005         	call	i2_LCD_dato
  3498                           
  3499                           ;Mensajes.c: 20: LCD_dato ('n');
  3500  00038A  0E6E               	movlw	110
  3501  00038C  ECEF  F005         	call	i2_LCD_dato
  3502                           
  3503                           ;Mensajes.c: 21: LCD_dato ('o');
  3504  000390  0E6F               	movlw	111
  3505  000392  ECEF  F005         	call	i2_LCD_dato
  3506                           
  3507                           ;Mensajes.c: 22: LCD_dato ('i');
  3508  000396  0E69               	movlw	105
  3509  000398  ECEF  F005         	call	i2_LCD_dato
  3510                           
  3511                           ;Mensajes.c: 23: LCD_dato ('d');
  3512  00039C  0E64               	movlw	100
  3513  00039E  ECEF  F005         	call	i2_LCD_dato
  3514                           
  3515                           ;Mensajes.c: 24: LCD_dato ('a');
  3516  0003A2  0E61               	movlw	97
  3517  0003A4  ECEF  F005         	call	i2_LCD_dato
  3518                           
  3519                           ;Mensajes.c: 25: LCD_dato ('l');
  3520  0003A8  0E6C               	movlw	108
  3521  0003AA  ECEF  F005         	call	i2_LCD_dato
  3522                           
  3523                           ;Mensajes.c: 26: break;
  3524  0003AE  D066               	goto	i2l2107
  3525  0003B0                     i2l2099:
  3526                           
  3527                           ;Mensajes.c: 28: LCD_dato (' ');
  3528  0003B0  0E20               	movlw	32
  3529  0003B2  ECEF  F005         	call	i2_LCD_dato
  3530                           
  3531                           ;Mensajes.c: 29: LCD_dato ('S');
  3532  0003B6  0E53               	movlw	83
  3533  0003B8  ECEF  F005         	call	i2_LCD_dato
  3534                           
  3535                           ;Mensajes.c: 30: LCD_dato ('e');
  3536  0003BC  0E65               	movlw	101
  3537  0003BE  ECEF  F005         	call	i2_LCD_dato
  3538                           
  3539                           ;Mensajes.c: 31: LCD_dato (0XEE);
  3540  0003C2  0EEE               	movlw	238
  3541  0003C4  ECEF  F005         	call	i2_LCD_dato
  3542                           
  3543                           ;Mensajes.c: 32: LCD_dato ('a');
  3544  0003C8  0E61               	movlw	97
  3545  0003CA  ECEF  F005         	call	i2_LCD_dato
  3546                           
  3547                           ;Mensajes.c: 33: LCD_dato ('l');
  3548  0003CE  0E6C               	movlw	108
  3549  0003D0  ECEF  F005         	call	i2_LCD_dato
  3550                           
  3551                           ;Mensajes.c: 34: LCD_dato (' ');
  3552  0003D4  0E20               	movlw	32
  3553  0003D6  ECEF  F005         	call	i2_LCD_dato
  3554                           
  3555                           ;Mensajes.c: 35: LCD_dato ('C');
  3556  0003DA  0E43               	movlw	67
  3557  0003DC  ECEF  F005         	call	i2_LCD_dato
  3558                           
  3559                           ;Mensajes.c: 36: LCD_dato ('u');
  3560  0003E0  0E75               	movlw	117
  3561  0003E2  ECEF  F005         	call	i2_LCD_dato
  3562                           
  3563                           ;Mensajes.c: 37: LCD_dato ('a');
  3564  0003E6  0E61               	movlw	97
  3565  0003E8  ECEF  F005         	call	i2_LCD_dato
  3566                           
  3567                           ;Mensajes.c: 38: LCD_dato ('d');
  3568  0003EC  0E64               	movlw	100
  3569  0003EE  ECEF  F005         	call	i2_LCD_dato
  3570                           
  3571                           ;Mensajes.c: 39: LCD_dato ('r');
  3572  0003F2  0E72               	movlw	114
  3573  0003F4  ECEF  F005         	call	i2_LCD_dato
  3574                           
  3575                           ;Mensajes.c: 40: LCD_dato ('a');
  3576  0003F8  0E61               	movlw	97
  3577  0003FA  ECEF  F005         	call	i2_LCD_dato
  3578                           
  3579                           ;Mensajes.c: 41: LCD_dato ('d');
  3580  0003FE  0E64               	movlw	100
  3581  000400  ECEF  F005         	call	i2_LCD_dato
  3582                           
  3583                           ;Mensajes.c: 42: LCD_dato ('a');
  3584  000404  0E61               	movlw	97
  3585  000406  ECEF  F005         	call	i2_LCD_dato
  3586                           
  3587                           ;Mensajes.c: 43: break;
  3588  00040A  D038               	goto	i2l2107
  3589  00040C                     i2l2101:
  3590                           
  3591                           ;Mensajes.c: 45: LCD_dato (' ');
  3592  00040C  0E20               	movlw	32
  3593  00040E  ECEF  F005         	call	i2_LCD_dato
  3594                           
  3595                           ;Mensajes.c: 46: LCD_dato ('S');
  3596  000412  0E53               	movlw	83
  3597  000414  ECEF  F005         	call	i2_LCD_dato
  3598                           
  3599                           ;Mensajes.c: 47: LCD_dato ('e');
  3600  000418  0E65               	movlw	101
  3601  00041A  ECEF  F005         	call	i2_LCD_dato
  3602                           
  3603                           ;Mensajes.c: 48: LCD_dato (0XEE);
  3604  00041E  0EEE               	movlw	238
  3605  000420  ECEF  F005         	call	i2_LCD_dato
  3606                           
  3607                           ;Mensajes.c: 49: LCD_dato ('a');
  3608  000424  0E61               	movlw	97
  3609  000426  ECEF  F005         	call	i2_LCD_dato
  3610                           
  3611                           ;Mensajes.c: 50: LCD_dato ('l');
  3612  00042A  0E6C               	movlw	108
  3613  00042C  ECEF  F005         	call	i2_LCD_dato
  3614                           
  3615                           ;Mensajes.c: 51: LCD_dato (' ');
  3616  000430  0E20               	movlw	32
  3617  000432  ECEF  F005         	call	i2_LCD_dato
  3618                           
  3619                           ;Mensajes.c: 52: LCD_dato ('D');
  3620  000436  0E44               	movlw	68
  3621  000438  ECEF  F005         	call	i2_LCD_dato
  3622                           
  3623                           ;Mensajes.c: 53: LCD_dato ('.');
  3624  00043C  0E2E               	movlw	46
  3625  00043E  ECEF  F005         	call	i2_LCD_dato
  3626                           
  3627                           ;Mensajes.c: 54: LCD_dato ('S');
  3628  000442  0E53               	movlw	83
  3629  000444  ECEF  F005         	call	i2_LCD_dato
  3630                           
  3631                           ;Mensajes.c: 55: LCD_dato ('i');
  3632  000448  0E69               	movlw	105
  3633  00044A  ECEF  F005         	call	i2_LCD_dato
  3634                           
  3635                           ;Mensajes.c: 56: LCD_dato ('e');
  3636  00044E  0E65               	movlw	101
  3637  000450  ECEF  F005         	call	i2_LCD_dato
  3638                           
  3639                           ;Mensajes.c: 57: LCD_dato ('r');
  3640  000454  0E72               	movlw	114
  3641  000456  ECEF  F005         	call	i2_LCD_dato
  3642                           
  3643                           ;Mensajes.c: 58: LCD_dato ('r');
  3644  00045A  0E72               	movlw	114
  3645  00045C  ECEF  F005         	call	i2_LCD_dato
  3646                           
  3647                           ;Mensajes.c: 59: LCD_dato ('a');
  3648  000460  0E61               	movlw	97
  3649  000462  ECEF  F005         	call	i2_LCD_dato
  3650                           
  3651                           ;Mensajes.c: 64: }
  3652                           
  3653                           ;Mensajes.c: 63: break;
  3654                           
  3655                           ;Mensajes.c: 61: default:
  3656                           
  3657                           ;Mensajes.c: 60: break;
  3658  000466  D00A               	goto	i2l2107
  3659  000468                     i2l2105:
  3660  000468  503E               	movf	_Senal,w,c
  3661                           
  3662                           ; Switch size 1, requested type "space"
  3663                           ; Number of cases is 3, Range of values is 1 to 3
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte           10     6 (average)
  3667                           ;	Chosen strategy is simple_byte
  3668  00046A  0A01               	xorlw	1	; case 1
  3669  00046C  B4D8               	btfsc	status,2,c
  3670  00046E  D772               	goto	i2l2097
  3671  000470  0A03               	xorlw	3	; case 2
  3672  000472  B4D8               	btfsc	status,2,c
  3673  000474  D79D               	goto	i2l2099
  3674  000476  0A01               	xorlw	1	; case 3
  3675  000478  B4D8               	btfsc	status,2,c
  3676  00047A  D7C8               	goto	i2l2101
  3677  00047C                     i2l2107:
  3678                           
  3679                           ;Mensajes.c: 65: enter ();
  3680  00047C  EC71  F006         	call	i2_enter	;wreg free
  3681                           
  3682                           ;Mensajes.c: 66: LCD_dato (' ');
  3683  000480  0E20               	movlw	32
  3684  000482  ECEF  F005         	call	i2_LCD_dato
  3685                           
  3686                           ;Mensajes.c: 67: LCD_dato (' ');
  3687  000486  0E20               	movlw	32
  3688  000488  ECEF  F005         	call	i2_LCD_dato
  3689                           
  3690                           ;Mensajes.c: 68: LCD_dato ('F');
  3691  00048C  0E46               	movlw	70
  3692  00048E  ECEF  F005         	call	i2_LCD_dato
  3693                           
  3694                           ;Mensajes.c: 69: LCD_dato ('r');
  3695  000492  0E72               	movlw	114
  3696  000494  ECEF  F005         	call	i2_LCD_dato
  3697                           
  3698                           ;Mensajes.c: 70: LCD_dato ('e');
  3699  000498  0E65               	movlw	101
  3700  00049A  ECEF  F005         	call	i2_LCD_dato
  3701                           
  3702                           ;Mensajes.c: 71: LCD_dato ('c');
  3703  00049E  0E63               	movlw	99
  3704  0004A0  ECEF  F005         	call	i2_LCD_dato
  3705                           
  3706                           ;Mensajes.c: 72: LCD_dato (':');
  3707  0004A4  0E3A               	movlw	58
  3708  0004A6  ECEF  F005         	call	i2_LCD_dato
  3709                           
  3710                           ;Mensajes.c: 73: LCD_dato (' ');
  3711  0004AA  0E20               	movlw	32
  3712  0004AC  ECEF  F005         	call	i2_LCD_dato
  3713                           
  3714                           ;Mensajes.c: 74: for (unsigned char i = 0; i<3; i++)
  3715  0004B0  0E00               	movlw	0
  3716  0004B2  6E06               	movwf	i2Mensaje_LCD@i_665,c
  3717  0004B4                     i2l2111:
  3718  0004B4  0E02               	movlw	2
  3719  0004B6  6406               	cpfsgt	i2Mensaje_LCD@i_665,c
  3720  0004B8  D001               	goto	i2l2115
  3721  0004BA  D00D               	goto	i2l2121
  3722  0004BC                     i2l2115:
  3723                           
  3724                           ;Mensajes.c: 75: LCD_dato (Numeros [i]);
  3725  0004BC  5006               	movf	i2Mensaje_LCD@i_665,w,c
  3726  0004BE  0D01               	mullw	1
  3727  0004C0  0E03               	movlw	low i2Mensaje_LCD@Numeros
  3728  0004C2  24F3               	addwf	prodl,w,c
  3729  0004C4  6ED9               	movwf	fsr2l,c
  3730  0004C6  0E00               	movlw	high i2Mensaje_LCD@Numeros
  3731  0004C8  20F4               	addwfc	prodh,w,c
  3732  0004CA  6EDA               	movwf	fsr2h,c
  3733  0004CC  50DF               	movf	indf2,w,c
  3734  0004CE  ECEF  F005         	call	i2_LCD_dato
  3735  0004D2  2A06               	incf	i2Mensaje_LCD@i_665,f,c
  3736  0004D4  D7EF               	goto	i2l2111
  3737  0004D6                     i2l2121:
  3738                           
  3739                           ;Mensajes.c: 76: LCD_dato (' ');
  3740  0004D6  0E20               	movlw	32
  3741  0004D8  ECEF  F005         	call	i2_LCD_dato
  3742                           
  3743                           ;Mensajes.c: 77: LCD_dato ('H');
  3744  0004DC  0E48               	movlw	72
  3745  0004DE  ECEF  F005         	call	i2_LCD_dato
  3746                           
  3747                           ;Mensajes.c: 78: LCD_dato ('z');
  3748  0004E2  0E7A               	movlw	122
  3749  0004E4  ECEF  F005         	call	i2_LCD_dato
  3750  0004E8  0012               	return		;funcret
  3751  0004EA                     __end_ofi2_Mensaje_LCD:
  3752                           	opt stack 0
  3753                           pclatu	equ	0xFFB
  3754                           pclath	equ	0xFFA
  3755                           tblptru	equ	0xFF8
  3756                           tblptrh	equ	0xFF7
  3757                           tblptrl	equ	0xFF6
  3758                           tablat	equ	0xFF5
  3759                           prodh	equ	0xFF4
  3760                           prodl	equ	0xFF3
  3761                           intcon	equ	0xFF2
  3762                           intcon2	equ	0xFF1
  3763                           postinc0	equ	0xFEE
  3764                           fsr0h	equ	0xFEA
  3765                           fsr0l	equ	0xFE9
  3766                           wreg	equ	0xFE8
  3767                           indf1	equ	0xFE7
  3768                           fsr1h	equ	0xFE2
  3769                           fsr1l	equ	0xFE1
  3770                           bsr	equ	0xFE0
  3771                           indf2	equ	0xFDF
  3772                           fsr2h	equ	0xFDA
  3773                           fsr2l	equ	0xFD9
  3774                           status	equ	0xFD8
  3775                           
  3776 ;; *************** function i2_enter *****************
  3777 ;; Defined at:
  3778 ;;		line 148 in file "TECLADO_LCD.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    2
  3799 ;; This function calls:
  3800 ;;		i2_LCD_cmd
  3801 ;; This function is called by:
  3802 ;;		i2_Mensaje_LCD
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text21
  3807  000CE2                     __ptext21:
  3808                           	opt stack 0
  3809  000CE2                     i2_enter:
  3810                           	opt stack 20
  3811                           
  3812                           ;TECLADO_LCD.c: 149: LCD_cmd (0XC0);
  3813                           
  3814                           ;incstack = 0
  3815  000CE2  0EC0               	movlw	192
  3816  000CE4  EC02  F006         	call	i2_LCD_cmd
  3817  000CE8  0012               	return		;funcret
  3818  000CEA                     __end_ofi2_enter:
  3819                           	opt stack 0
  3820                           pclatu	equ	0xFFB
  3821                           pclath	equ	0xFFA
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodh	equ	0xFF4
  3827                           prodl	equ	0xFF3
  3828                           intcon	equ	0xFF2
  3829                           intcon2	equ	0xFF1
  3830                           postinc0	equ	0xFEE
  3831                           fsr0h	equ	0xFEA
  3832                           fsr0l	equ	0xFE9
  3833                           wreg	equ	0xFE8
  3834                           indf1	equ	0xFE7
  3835                           fsr1h	equ	0xFE2
  3836                           fsr1l	equ	0xFE1
  3837                           bsr	equ	0xFE0
  3838                           indf2	equ	0xFDF
  3839                           fsr2h	equ	0xFDA
  3840                           fsr2l	equ	0xFD9
  3841                           status	equ	0xFD8
  3842                           
  3843 ;; *************** function i2_clr_screen *****************
  3844 ;; Defined at:
  3845 ;;		line 144 in file "TECLADO_LCD.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3859 ;;      Params:         0       0       0       0       0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    2
  3866 ;; This function calls:
  3867 ;;		i2_LCD_cmd
  3868 ;; This function is called by:
  3869 ;;		i2_Mensaje_LCD
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text22
  3874  000CEA                     __ptext22:
  3875                           	opt stack 0
  3876  000CEA                     i2_clr_screen:
  3877                           	opt stack 20
  3878                           
  3879                           ;TECLADO_LCD.c: 145: LCD_cmd (0X01);
  3880                           
  3881                           ;incstack = 0
  3882  000CEA  0E01               	movlw	1
  3883  000CEC  EC02  F006         	call	i2_LCD_cmd
  3884  000CF0  0012               	return		;funcret
  3885  000CF2                     __end_ofi2_clr_screen:
  3886                           	opt stack 0
  3887                           pclatu	equ	0xFFB
  3888                           pclath	equ	0xFFA
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           prodh	equ	0xFF4
  3894                           prodl	equ	0xFF3
  3895                           intcon	equ	0xFF2
  3896                           intcon2	equ	0xFF1
  3897                           postinc0	equ	0xFEE
  3898                           fsr0h	equ	0xFEA
  3899                           fsr0l	equ	0xFE9
  3900                           wreg	equ	0xFE8
  3901                           indf1	equ	0xFE7
  3902                           fsr1h	equ	0xFE2
  3903                           fsr1l	equ	0xFE1
  3904                           bsr	equ	0xFE0
  3905                           indf2	equ	0xFDF
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function i2_LCD_cmd *****************
  3911 ;; Defined at:
  3912 ;;		line 95 in file "TECLADO_LCD.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  dato            1    wreg     unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  dato            1    1[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3929 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3930 ;;Total ram usage:        1 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    1
  3933 ;; This function calls:
  3934 ;;		i2_esperar_LCD
  3935 ;; This function is called by:
  3936 ;;		i2_clr_screen
  3937 ;;		i2_enter
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text23
  3942  000C04                     __ptext23:
  3943                           	opt stack 0
  3944  000C04                     i2_LCD_cmd:
  3945                           	opt stack 20
  3946                           
  3947                           ;incstack = 0
  3948                           ;i2LCD_cmd@dato stored from wreg
  3949  000C04  6E02               	movwf	i2LCD_cmd@dato,c
  3950                           
  3951                           ;TECLADO_LCD.c: 96: LATD = dato;
  3952  000C06  C002  FF8C         	movff	i2LCD_cmd@dato,3980	;volatile
  3953                           
  3954                           ;TECLADO_LCD.c: 97: LATEbits.LATE0 = 0;
  3955  000C0A  908D               	bcf	3981,0,c	;volatile
  3956                           
  3957                           ;TECLADO_LCD.c: 98: LATEbits.LATE1 = 0;
  3958  000C0C  928D               	bcf	3981,1,c	;volatile
  3959                           
  3960                           ;TECLADO_LCD.c: 99: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3961  000C0E  0E06               	movlw	6
  3962  000C10                     i2u117_47:
  3963  000C10  2EE8               	decfsz	wreg,f,c
  3964  000C12  D7FE               	bra	i2u117_47
  3965  000C14  D000               	nop2	
  3966                           
  3967                           ;TECLADO_LCD.c: 100: LATEbits.LATE2 = 1;
  3968  000C16  848D               	bsf	3981,2,c	;volatile
  3969                           
  3970                           ;TECLADO_LCD.c: 101: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3971  000C18  0E06               	movlw	6
  3972  000C1A                     i2u118_47:
  3973  000C1A  2EE8               	decfsz	wreg,f,c
  3974  000C1C  D7FE               	bra	i2u118_47
  3975  000C1E  D000               	nop2	
  3976                           
  3977                           ;TECLADO_LCD.c: 102: LATEbits.LATE2 = 0;
  3978  000C20  948D               	bcf	3981,2,c	;volatile
  3979                           
  3980                           ;TECLADO_LCD.c: 103: esperar_LCD ();
  3981  000C22  EC78  F005         	call	i2_esperar_LCD	;wreg free
  3982  000C26  0012               	return		;funcret
  3983  000C28                     __end_ofi2_LCD_cmd:
  3984                           	opt stack 0
  3985                           pclatu	equ	0xFFB
  3986                           pclath	equ	0xFFA
  3987                           tblptru	equ	0xFF8
  3988                           tblptrh	equ	0xFF7
  3989                           tblptrl	equ	0xFF6
  3990                           tablat	equ	0xFF5
  3991                           prodh	equ	0xFF4
  3992                           prodl	equ	0xFF3
  3993                           intcon	equ	0xFF2
  3994                           intcon2	equ	0xFF1
  3995                           postinc0	equ	0xFEE
  3996                           fsr0h	equ	0xFEA
  3997                           fsr0l	equ	0xFE9
  3998                           wreg	equ	0xFE8
  3999                           indf1	equ	0xFE7
  4000                           fsr1h	equ	0xFE2
  4001                           fsr1l	equ	0xFE1
  4002                           bsr	equ	0xFE0
  4003                           indf2	equ	0xFDF
  4004                           fsr2h	equ	0xFDA
  4005                           fsr2l	equ	0xFD9
  4006                           status	equ	0xFD8
  4007                           
  4008 ;; *************** function i2_LCD_dato *****************
  4009 ;; Defined at:
  4010 ;;		line 106 in file "TECLADO_LCD.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  dato            1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  dato            1    1[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4027 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    1
  4031 ;; This function calls:
  4032 ;;		i2_esperar_LCD
  4033 ;; This function is called by:
  4034 ;;		i2_Mensaje_LCD
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text24
  4039  000BDE                     __ptext24:
  4040                           	opt stack 0
  4041  000BDE                     i2_LCD_dato:
  4042                           	opt stack 21
  4043                           
  4044                           ;incstack = 0
  4045                           ;i2LCD_dato@dato stored from wreg
  4046  000BDE  6E02               	movwf	i2LCD_dato@dato,c
  4047                           
  4048                           ;TECLADO_LCD.c: 107: LATD = dato;
  4049  000BE0  C002  FF8C         	movff	i2LCD_dato@dato,3980	;volatile
  4050                           
  4051                           ;TECLADO_LCD.c: 108: LATEbits.LATE0 = 1;
  4052  000BE4  808D               	bsf	3981,0,c	;volatile
  4053                           
  4054                           ;TECLADO_LCD.c: 109: LATEbits.LATE1 = 0;
  4055  000BE6  928D               	bcf	3981,1,c	;volatile
  4056                           
  4057                           ;TECLADO_LCD.c: 110: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4058  000BE8  0E06               	movlw	6
  4059  000BEA                     i2u119_47:
  4060  000BEA  2EE8               	decfsz	wreg,f,c
  4061  000BEC  D7FE               	bra	i2u119_47
  4062  000BEE  D000               	nop2	
  4063                           
  4064                           ;TECLADO_LCD.c: 111: LATEbits.LATE2 = 1;
  4065  000BF0  848D               	bsf	3981,2,c	;volatile
  4066                           
  4067                           ;TECLADO_LCD.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4068  000BF2  0E06               	movlw	6
  4069  000BF4                     i2u120_47:
  4070  000BF4  2EE8               	decfsz	wreg,f,c
  4071  000BF6  D7FE               	bra	i2u120_47
  4072  000BF8  D000               	nop2	
  4073                           
  4074                           ;TECLADO_LCD.c: 113: LATEbits.LATE2 = 0;
  4075  000BFA  948D               	bcf	3981,2,c	;volatile
  4076                           
  4077                           ;TECLADO_LCD.c: 114: LATEbits.LATE0 = 0;
  4078  000BFC  908D               	bcf	3981,0,c	;volatile
  4079                           
  4080                           ;TECLADO_LCD.c: 115: esperar_LCD ();
  4081  000BFE  EC78  F005         	call	i2_esperar_LCD	;wreg free
  4082  000C02  0012               	return		;funcret
  4083  000C04                     __end_ofi2_LCD_dato:
  4084                           	opt stack 0
  4085                           pclatu	equ	0xFFB
  4086                           pclath	equ	0xFFA
  4087                           tblptru	equ	0xFF8
  4088                           tblptrh	equ	0xFF7
  4089                           tblptrl	equ	0xFF6
  4090                           tablat	equ	0xFF5
  4091                           prodh	equ	0xFF4
  4092                           prodl	equ	0xFF3
  4093                           intcon	equ	0xFF2
  4094                           intcon2	equ	0xFF1
  4095                           postinc0	equ	0xFEE
  4096                           fsr0h	equ	0xFEA
  4097                           fsr0l	equ	0xFE9
  4098                           wreg	equ	0xFE8
  4099                           indf1	equ	0xFE7
  4100                           fsr1h	equ	0xFE2
  4101                           fsr1l	equ	0xFE1
  4102                           bsr	equ	0xFE0
  4103                           indf2	equ	0xFDF
  4104                           fsr2h	equ	0xFDA
  4105                           fsr2l	equ	0xFD9
  4106                           status	equ	0xFD8
  4107                           
  4108 ;; *************** function i2_esperar_LCD *****************
  4109 ;; Defined at:
  4110 ;;		line 118 in file "TECLADO_LCD.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  esperar_LCD     1    0[COMRAM] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         0       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        1 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		i2_LCD_cmd
  4134 ;;		i2_LCD_dato
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text25
  4139  000AF0                     __ptext25:
  4140                           	opt stack 0
  4141  000AF0                     i2_esperar_LCD:
  4142                           	opt stack 20
  4143                           
  4144                           ;TECLADO_LCD.c: 119: unsigned char bussy = 1;
  4145                           
  4146                           ;incstack = 0
  4147  000AF0  0E01               	movlw	1
  4148  000AF2  6E01               	movwf	i2esperar_LCD@bussy,c
  4149                           
  4150                           ;TECLADO_LCD.c: 120: TRISD = 0XFF;
  4151  000AF4  6895               	setf	3989,c	;volatile
  4152                           
  4153                           ;TECLADO_LCD.c: 121: while (bussy){
  4154  000AF6  D015               	goto	i2l1839
  4155  000AF8                     i2l221:
  4156                           
  4157                           ;TECLADO_LCD.c: 122: LATEbits.LATE0 = 0;
  4158  000AF8  908D               	bcf	3981,0,c	;volatile
  4159                           
  4160                           ;TECLADO_LCD.c: 123: LATEbits.LATE1 = 1;
  4161  000AFA  828D               	bsf	3981,1,c	;volatile
  4162                           
  4163                           ;TECLADO_LCD.c: 124: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4164  000AFC  0E06               	movlw	6
  4165  000AFE                     i2u121_47:
  4166  000AFE  2EE8               	decfsz	wreg,f,c
  4167  000B00  D7FE               	bra	i2u121_47
  4168  000B02  D000               	nop2	
  4169                           
  4170                           ;TECLADO_LCD.c: 125: LATEbits.LATE2 = 1;
  4171  000B04  848D               	bsf	3981,2,c	;volatile
  4172                           
  4173                           ;TECLADO_LCD.c: 126: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4174  000B06  0E06               	movlw	6
  4175  000B08                     i2u122_47:
  4176  000B08  2EE8               	decfsz	wreg,f,c
  4177  000B0A  D7FE               	bra	i2u122_47
  4178  000B0C  D000               	nop2	
  4179                           
  4180                           ;TECLADO_LCD.c: 127: bussy = PORTD;
  4181  000B0E  CF83 F001          	movff	3971,i2esperar_LCD@bussy	;volatile
  4182                           
  4183                           ;TECLADO_LCD.c: 128: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4184  000B12  0E06               	movlw	6
  4185  000B14                     i2u123_47:
  4186  000B14  2EE8               	decfsz	wreg,f,c
  4187  000B16  D7FE               	bra	i2u123_47
  4188  000B18  D000               	nop2	
  4189                           
  4190                           ;TECLADO_LCD.c: 129: LATEbits.LATE2 = 0;
  4191  000B1A  948D               	bcf	3981,2,c	;volatile
  4192                           
  4193                           ;TECLADO_LCD.c: 130: bussy = bussy>>7;
  4194  000B1C  4401               	rlncf	i2esperar_LCD@bussy,w,c
  4195  000B1E  0B01               	andlw	1
  4196  000B20  6E01               	movwf	i2esperar_LCD@bussy,c
  4197  000B22                     i2l1839:
  4198  000B22  5001               	movf	i2esperar_LCD@bussy,w,c
  4199  000B24  A4D8               	btfss	status,2,c
  4200  000B26  D7E8               	goto	i2l221
  4201                           
  4202                           ;TECLADO_LCD.c: 131: }
  4203                           ;TECLADO_LCD.c: 132: TRISD = 0;
  4204  000B28  0E00               	movlw	0
  4205  000B2A  6E95               	movwf	3989,c	;volatile
  4206                           
  4207                           ;TECLADO_LCD.c: 133: LATEbits.LATE1 = 0;
  4208  000B2C  928D               	bcf	3981,1,c	;volatile
  4209  000B2E  0012               	return		;funcret
  4210  000B30                     __end_ofi2_esperar_LCD:
  4211                           	opt stack 0
  4212                           pclatu	equ	0xFFB
  4213                           pclath	equ	0xFFA
  4214                           tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           prodh	equ	0xFF4
  4219                           prodl	equ	0xFF3
  4220                           intcon	equ	0xFF2
  4221                           intcon2	equ	0xFF1
  4222                           postinc0	equ	0xFEE
  4223                           fsr0h	equ	0xFEA
  4224                           fsr0l	equ	0xFE9
  4225                           wreg	equ	0xFE8
  4226                           indf1	equ	0xFE7
  4227                           fsr1h	equ	0xFE2
  4228                           fsr1l	equ	0xFE1
  4229                           bsr	equ	0xFE0
  4230                           indf2	equ	0xFDF
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _leer_teclado *****************
  4236 ;; Defined at:
  4237 ;;		line 13 in file "TECLADO_LCD.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  aux_portb       1    0[COMRAM] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0
  4252 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4254 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4255 ;;Total ram usage:        1 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_ISR_H
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text26
  4265  000632                     __ptext26:
  4266                           	opt stack 0
  4267  000632                     _leer_teclado:
  4268                           	opt stack 23
  4269                           
  4270                           ;TECLADO_LCD.c: 14: unsigned char aux_portb=0;
  4271                           
  4272                           ;incstack = 0
  4273  000632  0E00               	movlw	0
  4274  000634  6E01               	movwf	leer_teclado@aux_portb,c
  4275                           
  4276                           ;TECLADO_LCD.c: 15: Aux_T = 0X80;
  4277  000636  0E80               	movlw	128
  4278  000638  6E40               	movwf	_Aux_T,c
  4279                           
  4280                           ;TECLADO_LCD.c: 16: LATB = 0XF7;
  4281  00063A  0EF7               	movlw	247
  4282  00063C  6E8A               	movwf	3978,c	;volatile
  4283                           
  4284                           ;TECLADO_LCD.c: 17: aux_portb = PORTB;
  4285  00063E  CF81 F001          	movff	3969,leer_teclado@aux_portb	;volatile
  4286                           
  4287                           ;TECLADO_LCD.c: 18: aux_portb &= 0XF0;
  4288  000642  0EF0               	movlw	240
  4289  000644  1601               	andwf	leer_teclado@aux_portb,f,c
  4290                           
  4291                           ;TECLADO_LCD.c: 19: if (aux_portb == 0X70)
  4292  000646  0E70               	movlw	112
  4293  000648  1801               	xorwf	leer_teclado@aux_portb,w,c
  4294  00064A  A4D8               	btfss	status,2,c
  4295  00064C  D003               	goto	i2l1111
  4296                           
  4297                           ;TECLADO_LCD.c: 20: Aux_T = 1;
  4298  00064E  0E01               	movlw	1
  4299  000650  6E40               	movwf	_Aux_T,c
  4300  000652  0012               	return	
  4301  000654                     i2l1111:
  4302                           
  4303                           ;TECLADO_LCD.c: 21: else if (aux_portb == 0XB0)
  4304  000654  0EB0               	movlw	176
  4305  000656  1801               	xorwf	leer_teclado@aux_portb,w,c
  4306  000658  A4D8               	btfss	status,2,c
  4307  00065A  D003               	goto	i2l1115
  4308                           
  4309                           ;TECLADO_LCD.c: 22: Aux_T = 4;
  4310  00065C  0E04               	movlw	4
  4311  00065E  6E40               	movwf	_Aux_T,c
  4312  000660  0012               	return	
  4313  000662                     i2l1115:
  4314                           
  4315                           ;TECLADO_LCD.c: 23: else if (aux_portb == 0XD0)
  4316  000662  0ED0               	movlw	208
  4317  000664  1801               	xorwf	leer_teclado@aux_portb,w,c
  4318  000666  A4D8               	btfss	status,2,c
  4319  000668  D003               	goto	i2l1119
  4320                           
  4321                           ;TECLADO_LCD.c: 24: Aux_T = 7;
  4322  00066A  0E07               	movlw	7
  4323  00066C  6E40               	movwf	_Aux_T,c
  4324  00066E  0012               	return	
  4325  000670                     i2l1119:
  4326                           
  4327                           ;TECLADO_LCD.c: 25: else if (aux_portb == 0XE0)
  4328  000670  0EE0               	movlw	224
  4329  000672  1801               	xorwf	leer_teclado@aux_portb,w,c
  4330  000674  A4D8               	btfss	status,2,c
  4331  000676  D003               	goto	i2l1123
  4332                           
  4333                           ;TECLADO_LCD.c: 26: Aux_T = 0X0F;
  4334  000678  0E0F               	movlw	15
  4335  00067A  6E40               	movwf	_Aux_T,c
  4336  00067C  0012               	return	
  4337  00067E                     i2l1123:
  4338                           
  4339                           ;TECLADO_LCD.c: 27: else{
  4340                           ;TECLADO_LCD.c: 28: LATB = 0XFB;
  4341  00067E  0EFB               	movlw	251
  4342  000680  6E8A               	movwf	3978,c	;volatile
  4343                           
  4344                           ;TECLADO_LCD.c: 29: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4345  000682  D000               	nop2		;2 cycle nop
  4346  000684  D000               	nop2		;2 cycle nop
  4347                           
  4348                           ;TECLADO_LCD.c: 30: aux_portb = PORTB;
  4349  000686  CF81 F001          	movff	3969,leer_teclado@aux_portb	;volatile
  4350                           
  4351                           ;TECLADO_LCD.c: 31: aux_portb &= 0XF0;
  4352  00068A  0EF0               	movlw	240
  4353  00068C  1601               	andwf	leer_teclado@aux_portb,f,c
  4354                           
  4355                           ;TECLADO_LCD.c: 32: if (aux_portb == 0X70)
  4356  00068E  0E70               	movlw	112
  4357  000690  1801               	xorwf	leer_teclado@aux_portb,w,c
  4358  000692  A4D8               	btfss	status,2,c
  4359  000694  D003               	goto	i2l1135
  4360                           
  4361                           ;TECLADO_LCD.c: 33: Aux_T = 2;
  4362  000696  0E02               	movlw	2
  4363  000698  6E40               	movwf	_Aux_T,c
  4364  00069A  0012               	return	
  4365  00069C                     i2l1135:
  4366                           
  4367                           ;TECLADO_LCD.c: 34: else if (aux_portb == 0XB0)
  4368  00069C  0EB0               	movlw	176
  4369  00069E  1801               	xorwf	leer_teclado@aux_portb,w,c
  4370  0006A0  A4D8               	btfss	status,2,c
  4371  0006A2  D003               	goto	i2l1139
  4372                           
  4373                           ;TECLADO_LCD.c: 35: Aux_T = 5;
  4374  0006A4  0E05               	movlw	5
  4375  0006A6  6E40               	movwf	_Aux_T,c
  4376  0006A8  0012               	return	
  4377  0006AA                     i2l1139:
  4378                           
  4379                           ;TECLADO_LCD.c: 36: else if (aux_portb == 0XD0)
  4380  0006AA  0ED0               	movlw	208
  4381  0006AC  1801               	xorwf	leer_teclado@aux_portb,w,c
  4382  0006AE  A4D8               	btfss	status,2,c
  4383  0006B0  D003               	goto	i2l1143
  4384                           
  4385                           ;TECLADO_LCD.c: 37: Aux_T = 8;
  4386  0006B2  0E08               	movlw	8
  4387  0006B4  6E40               	movwf	_Aux_T,c
  4388  0006B6  0012               	return	
  4389  0006B8                     i2l1143:
  4390                           
  4391                           ;TECLADO_LCD.c: 38: else if (aux_portb == 0XE0)
  4392  0006B8  0EE0               	movlw	224
  4393  0006BA  1801               	xorwf	leer_teclado@aux_portb,w,c
  4394  0006BC  A4D8               	btfss	status,2,c
  4395  0006BE  D003               	goto	i2l1147
  4396                           
  4397                           ;TECLADO_LCD.c: 39: Aux_T = 0X00;
  4398  0006C0  0E00               	movlw	0
  4399  0006C2  6E40               	movwf	_Aux_T,c
  4400  0006C4  0012               	return	
  4401  0006C6                     i2l1147:
  4402                           
  4403                           ;TECLADO_LCD.c: 40: else{
  4404                           ;TECLADO_LCD.c: 41: LATB = 0XFD;
  4405  0006C6  0EFD               	movlw	253
  4406  0006C8  6E8A               	movwf	3978,c	;volatile
  4407                           
  4408                           ;TECLADO_LCD.c: 42: aux_portb = PORTB;
  4409  0006CA  CF81 F001          	movff	3969,leer_teclado@aux_portb	;volatile
  4410                           
  4411                           ;TECLADO_LCD.c: 43: aux_portb &= 0XF0;
  4412  0006CE  0EF0               	movlw	240
  4413  0006D0  1601               	andwf	leer_teclado@aux_portb,f,c
  4414                           
  4415                           ;TECLADO_LCD.c: 44: if (aux_portb == 0X70)
  4416  0006D2  0E70               	movlw	112
  4417  0006D4  1801               	xorwf	leer_teclado@aux_portb,w,c
  4418  0006D6  A4D8               	btfss	status,2,c
  4419  0006D8  D003               	goto	i2l1157
  4420                           
  4421                           ;TECLADO_LCD.c: 45: Aux_T = 3;
  4422  0006DA  0E03               	movlw	3
  4423  0006DC  6E40               	movwf	_Aux_T,c
  4424  0006DE  0012               	return	
  4425  0006E0                     i2l1157:
  4426                           
  4427                           ;TECLADO_LCD.c: 46: else if (aux_portb == 0XB0)
  4428  0006E0  0EB0               	movlw	176
  4429  0006E2  1801               	xorwf	leer_teclado@aux_portb,w,c
  4430  0006E4  A4D8               	btfss	status,2,c
  4431  0006E6  D003               	goto	i2l1161
  4432                           
  4433                           ;TECLADO_LCD.c: 47: Aux_T = 6;
  4434  0006E8  0E06               	movlw	6
  4435  0006EA  6E40               	movwf	_Aux_T,c
  4436  0006EC  0012               	return	
  4437  0006EE                     i2l1161:
  4438                           
  4439                           ;TECLADO_LCD.c: 48: else if (aux_portb == 0XD0)
  4440  0006EE  0ED0               	movlw	208
  4441  0006F0  1801               	xorwf	leer_teclado@aux_portb,w,c
  4442  0006F2  A4D8               	btfss	status,2,c
  4443  0006F4  D003               	goto	i2l1165
  4444                           
  4445                           ;TECLADO_LCD.c: 49: Aux_T = 9;
  4446  0006F6  0E09               	movlw	9
  4447  0006F8  6E40               	movwf	_Aux_T,c
  4448  0006FA  0012               	return	
  4449  0006FC                     i2l1165:
  4450                           
  4451                           ;TECLADO_LCD.c: 50: else if (aux_portb == 0XE0)
  4452  0006FC  0EE0               	movlw	224
  4453  0006FE  1801               	xorwf	leer_teclado@aux_portb,w,c
  4454  000700  A4D8               	btfss	status,2,c
  4455  000702  D003               	goto	i2l1169
  4456                           
  4457                           ;TECLADO_LCD.c: 51: Aux_T = 0X0E;
  4458  000704  0E0E               	movlw	14
  4459  000706  6E40               	movwf	_Aux_T,c
  4460  000708  0012               	return	
  4461  00070A                     i2l1169:
  4462                           
  4463                           ;TECLADO_LCD.c: 52: else{
  4464                           ;TECLADO_LCD.c: 53: LATB = 0XFE;
  4465  00070A  0EFE               	movlw	254
  4466  00070C  6E8A               	movwf	3978,c	;volatile
  4467                           
  4468                           ;TECLADO_LCD.c: 54: aux_portb = PORTB;
  4469  00070E  CF81 F001          	movff	3969,leer_teclado@aux_portb	;volatile
  4470                           
  4471                           ;TECLADO_LCD.c: 55: aux_portb &= 0XF0;
  4472  000712  0EF0               	movlw	240
  4473  000714  1601               	andwf	leer_teclado@aux_portb,f,c
  4474                           
  4475                           ;TECLADO_LCD.c: 56: if (aux_portb == 0X70)
  4476  000716  0E70               	movlw	112
  4477  000718  1801               	xorwf	leer_teclado@aux_portb,w,c
  4478  00071A  A4D8               	btfss	status,2,c
  4479  00071C  D003               	goto	i2l1179
  4480                           
  4481                           ;TECLADO_LCD.c: 57: Aux_T = 0X0A;
  4482  00071E  0E0A               	movlw	10
  4483  000720  6E40               	movwf	_Aux_T,c
  4484  000722  0012               	return	
  4485  000724                     i2l1179:
  4486                           
  4487                           ;TECLADO_LCD.c: 58: else if (aux_portb == 0XB0)
  4488  000724  0EB0               	movlw	176
  4489  000726  1801               	xorwf	leer_teclado@aux_portb,w,c
  4490  000728  A4D8               	btfss	status,2,c
  4491  00072A  D003               	goto	i2l1183
  4492                           
  4493                           ;TECLADO_LCD.c: 59: Aux_T = 0X0B;
  4494  00072C  0E0B               	movlw	11
  4495  00072E  6E40               	movwf	_Aux_T,c
  4496  000730  0012               	return	
  4497  000732                     i2l1183:
  4498                           
  4499                           ;TECLADO_LCD.c: 60: else if (aux_portb == 0XD0)
  4500  000732  0ED0               	movlw	208
  4501  000734  1801               	xorwf	leer_teclado@aux_portb,w,c
  4502  000736  A4D8               	btfss	status,2,c
  4503  000738  D003               	goto	i2l1187
  4504                           
  4505                           ;TECLADO_LCD.c: 61: Aux_T = 0X0C;
  4506  00073A  0E0C               	movlw	12
  4507  00073C  6E40               	movwf	_Aux_T,c
  4508  00073E  0012               	return	
  4509  000740                     i2l1187:
  4510                           
  4511                           ;TECLADO_LCD.c: 62: else if (aux_portb == 0XE0)
  4512  000740  0EE0               	movlw	224
  4513  000742  1801               	xorwf	leer_teclado@aux_portb,w,c
  4514  000744  A4D8               	btfss	status,2,c
  4515  000746  0012               	return	
  4516                           
  4517                           ;TECLADO_LCD.c: 63: Aux_T = 0X0D;
  4518  000748  0E0D               	movlw	13
  4519  00074A  6E40               	movwf	_Aux_T,c
  4520  00074C  0012               	return	
  4521  00074E                     __end_of_leer_teclado:
  4522                           	opt stack 0
  4523                           pclatu	equ	0xFFB
  4524                           pclath	equ	0xFFA
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           prodh	equ	0xFF4
  4530                           prodl	equ	0xFF3
  4531                           intcon	equ	0xFF2
  4532                           intcon2	equ	0xFF1
  4533                           postinc0	equ	0xFEE
  4534                           fsr0h	equ	0xFEA
  4535                           fsr0l	equ	0xFE9
  4536                           wreg	equ	0xFE8
  4537                           indf1	equ	0xFE7
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           bsr	equ	0xFE0
  4541                           indf2	equ	0xFDF
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _cambio_frec *****************
  4547 ;; Defined at:
  4548 ;;		line 45 in file "Lib_generador.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  Freq_aux        3    1[COMRAM] unsigned char [3]
  4553 ;;  Frec_aux        1    0[COMRAM] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, prodl, prodh
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0
  4564 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4566 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4567 ;;Total ram usage:        4 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_ISR_H
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text27
  4577  000B30                     __ptext27:
  4578                           	opt stack 0
  4579  000B30                     _cambio_frec:
  4580                           	opt stack 23
  4581                           
  4582                           ;Lib_generador.c: 46: unsigned char Freq_aux [3] = "";
  4583                           
  4584                           ;incstack = 0
  4585  000B30  C02E  F002         	movff	cambio_frec@F3840,cambio_frec@Freq_aux
  4586  000B34  C02F  F003         	movff	cambio_frec@F3840+1,cambio_frec@Freq_aux+1
  4587  000B38  C030  F004         	movff	cambio_frec@F3840+2,cambio_frec@Freq_aux+2
  4588                           
  4589                           ;Lib_generador.c: 47: unsigned char Frec_aux = 0;
  4590  000B3C  0E00               	movlw	0
  4591  000B3E  6E01               	movwf	cambio_frec@Frec_aux,c
  4592                           
  4593                           ;Lib_generador.c: 48: Freq_aux[0] = Freq[0];
  4594  000B40  C034  F002         	movff	_Freq,cambio_frec@Freq_aux
  4595                           
  4596                           ;Lib_generador.c: 49: Freq_aux[1] = Freq[1];
  4597  000B44  C035  F003         	movff	_Freq+1,cambio_frec@Freq_aux+1
  4598                           
  4599                           ;Lib_generador.c: 50: Freq_aux[2] = Freq[2];
  4600  000B48  C036  F004         	movff	_Freq+2,cambio_frec@Freq_aux+2
  4601                           
  4602                           ;Lib_generador.c: 51: Freq_aux[0] = Freq_aux[0]*100;
  4603  000B4C  5002               	movf	cambio_frec@Freq_aux,w,c
  4604  000B4E  0D64               	mullw	100
  4605  000B50  CFF3 F002          	movff	prodl,cambio_frec@Freq_aux
  4606                           
  4607                           ;Lib_generador.c: 52: Freq_aux[1] = Freq_aux[1]*10;
  4608  000B54  5003               	movf	cambio_frec@Freq_aux+1,w,c
  4609  000B56  0D0A               	mullw	10
  4610  000B58  CFF3 F003          	movff	prodl,cambio_frec@Freq_aux+1
  4611                           
  4612                           ;Lib_generador.c: 53: Frec_aux = Freq_aux[0]+Freq_aux[1]+Freq_aux[2];
  4613  000B5C  5003               	movf	cambio_frec@Freq_aux+1,w,c
  4614  000B5E  2404               	addwf	cambio_frec@Freq_aux+2,w,c
  4615  000B60  2402               	addwf	cambio_frec@Freq_aux,w,c
  4616  000B62  6E01               	movwf	cambio_frec@Frec_aux,c
  4617                           
  4618                           ;Lib_generador.c: 54: Frecuencia = Frec_aux;
  4619  000B64  C001  F03F         	movff	cambio_frec@Frec_aux,_Frecuencia
  4620  000B68  0012               	return		;funcret
  4621  000B6A                     __end_of_cambio_frec:
  4622                           	opt stack 0
  4623                           pclatu	equ	0xFFB
  4624                           pclath	equ	0xFFA
  4625                           tblptru	equ	0xFF8
  4626                           tblptrh	equ	0xFF7
  4627                           tblptrl	equ	0xFF6
  4628                           tablat	equ	0xFF5
  4629                           prodh	equ	0xFF4
  4630                           prodl	equ	0xFF3
  4631                           intcon	equ	0xFF2
  4632                           intcon2	equ	0xFF1
  4633                           postinc0	equ	0xFEE
  4634                           fsr0h	equ	0xFEA
  4635                           fsr0l	equ	0xFE9
  4636                           wreg	equ	0xFE8
  4637                           indf1	equ	0xFE7
  4638                           fsr1h	equ	0xFE2
  4639                           fsr1l	equ	0xFE1
  4640                           bsr	equ	0xFE0
  4641                           indf2	equ	0xFDF
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _Freq_charge *****************
  4647 ;; Defined at:
  4648 ;;		line 3 in file "Lib_generador.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  i               1    2[COMRAM] unsigned char 
  4653 ;;  flag_OF         1    1[COMRAM] unsigned char 
  4654 ;;  flag_nZ         1    0[COMRAM] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0
  4665 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4667 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        3 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_ISR_H
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text28
  4678  0008B2                     __ptext28:
  4679                           	opt stack 0
  4680  0008B2                     _Freq_charge:
  4681                           	opt stack 23
  4682                           
  4683                           ;Lib_generador.c: 4: unsigned char flag_nZ = 0, flag_OF = 0;
  4684                           
  4685                           ;incstack = 0
  4686  0008B2  0E00               	movlw	0
  4687  0008B4  6E01               	movwf	Freq_charge@flag_nZ,c
  4688  0008B6  0E00               	movlw	0
  4689  0008B8  6E02               	movwf	Freq_charge@flag_OF,c
  4690                           
  4691                           ;Lib_generador.c: 5: for (unsigned char i = 0; i<3; i++){
  4692  0008BA  0E00               	movlw	0
  4693  0008BC  6E03               	movwf	Freq_charge@i,c
  4694  0008BE                     i2l1251:
  4695  0008BE  0E02               	movlw	2
  4696  0008C0  6403               	cpfsgt	Freq_charge@i,c
  4697  0008C2  D001               	goto	i2l1255
  4698  0008C4  D00F               	goto	i2l1263
  4699  0008C6                     i2l1255:
  4700                           
  4701                           ;Lib_generador.c: 6: if (Tecla [i]!=0)
  4702  0008C6  5003               	movf	Freq_charge@i,w,c
  4703  0008C8  0D01               	mullw	1
  4704  0008CA  0E37               	movlw	low _Tecla
  4705  0008CC  24F3               	addwf	prodl,w,c
  4706  0008CE  6ED9               	movwf	fsr2l,c
  4707  0008D0  0E00               	movlw	high _Tecla
  4708  0008D2  20F4               	addwfc	prodh,w,c
  4709  0008D4  6EDA               	movwf	fsr2h,c
  4710  0008D6  50DF               	movf	indf2,w,c
  4711  0008D8  B4D8               	btfsc	status,2,c
  4712  0008DA  D002               	goto	i2l1259
  4713                           
  4714                           ;Lib_generador.c: 7: flag_nZ = 1;
  4715  0008DC  0E01               	movlw	1
  4716  0008DE  6E01               	movwf	Freq_charge@flag_nZ,c
  4717  0008E0                     i2l1259:
  4718  0008E0  2A03               	incf	Freq_charge@i,f,c
  4719  0008E2  D7ED               	goto	i2l1251
  4720  0008E4                     i2l1263:
  4721                           
  4722                           ;Lib_generador.c: 8: }
  4723                           ;Lib_generador.c: 9: if (Tecla [0] > 2){
  4724  0008E4  0E02               	movlw	2
  4725  0008E6  6437               	cpfsgt	_Tecla,c
  4726  0008E8  D001               	goto	i2l1267
  4727  0008EA  D00F               	goto	i2l1277
  4728  0008EC                     i2l1267:
  4729                           
  4730                           ;Lib_generador.c: 12: else{
  4731                           ;Lib_generador.c: 13: if (Tecla [0] == 2){
  4732  0008EC  0E02               	movlw	2
  4733  0008EE  1837               	xorwf	_Tecla,w,c
  4734  0008F0  A4D8               	btfss	status,2,c
  4735  0008F2  D00D               	goto	i2l303
  4736                           
  4737                           ;Lib_generador.c: 14: if (Tecla [1] > 5){
  4738  0008F4  0E05               	movlw	5
  4739  0008F6  6438               	cpfsgt	_Tecla+1,c
  4740  0008F8  D001               	goto	i2l1273
  4741  0008FA  D007               	goto	i2l1277
  4742  0008FC                     i2l1273:
  4743                           
  4744                           ;Lib_generador.c: 17: else{
  4745                           ;Lib_generador.c: 18: if (Tecla [1] == 5){
  4746  0008FC  0E05               	movlw	5
  4747  0008FE  1838               	xorwf	_Tecla+1,w,c
  4748  000900  A4D8               	btfss	status,2,c
  4749  000902  D005               	goto	i2l303
  4750                           
  4751                           ;Lib_generador.c: 19: if (Tecla [2] > 5){
  4752  000904  0E05               	movlw	5
  4753  000906  6439               	cpfsgt	_Tecla+2,c
  4754  000908  D002               	goto	i2l303
  4755  00090A                     i2l1277:
  4756                           
  4757                           ;Lib_generador.c: 20: flag_OF = 1;
  4758  00090A  0E01               	movlw	1
  4759  00090C  6E02               	movwf	Freq_charge@flag_OF,c
  4760  00090E                     i2l303:
  4761                           
  4762                           ;Lib_generador.c: 21: }
  4763                           ;Lib_generador.c: 22: }
  4764                           ;Lib_generador.c: 23: }
  4765                           ;Lib_generador.c: 24: }
  4766                           ;Lib_generador.c: 25: }
  4767                           ;Lib_generador.c: 26: if (flag_nZ == 0){
  4768  00090E  5001               	movf	Freq_charge@flag_nZ,w,c
  4769  000910  A4D8               	btfss	status,2,c
  4770  000912  D007               	goto	i2l1281
  4771                           
  4772                           ;Lib_generador.c: 27: Freq [0] = 0;
  4773  000914  0E00               	movlw	0
  4774  000916  6E34               	movwf	_Freq,c
  4775                           
  4776                           ;Lib_generador.c: 28: Freq [1] = 0;
  4777  000918  0E00               	movlw	0
  4778  00091A  6E35               	movwf	_Freq+1,c
  4779                           
  4780                           ;Lib_generador.c: 29: Freq [2] = 1;
  4781  00091C  0E01               	movlw	1
  4782  00091E  6E36               	movwf	_Freq+2,c
  4783                           
  4784                           ;Lib_generador.c: 30: }
  4785  000920  0012               	return	
  4786  000922                     i2l1281:
  4787                           
  4788                           ;Lib_generador.c: 31: else {
  4789                           ;Lib_generador.c: 32: if (flag_OF == 1){
  4790  000922  0402               	decf	Freq_charge@flag_OF,w,c
  4791  000924  A4D8               	btfss	status,2,c
  4792  000926  D007               	goto	i2l311
  4793                           
  4794                           ;Lib_generador.c: 33: Freq [0] = 2;
  4795  000928  0E02               	movlw	2
  4796  00092A  6E34               	movwf	_Freq,c
  4797                           
  4798                           ;Lib_generador.c: 34: Freq [1] = 5;
  4799  00092C  0E05               	movlw	5
  4800  00092E  6E35               	movwf	_Freq+1,c
  4801                           
  4802                           ;Lib_generador.c: 35: Freq [2] = 5;
  4803  000930  0E05               	movlw	5
  4804  000932  6E36               	movwf	_Freq+2,c
  4805                           
  4806                           ;Lib_generador.c: 36: }
  4807  000934  0012               	return	
  4808  000936                     i2l311:
  4809                           
  4810                           ;Lib_generador.c: 37: else{
  4811                           ;Lib_generador.c: 38: Freq [0] = Tecla[0];
  4812  000936  C037  F034         	movff	_Tecla,_Freq
  4813                           
  4814                           ;Lib_generador.c: 39: Freq [1] = Tecla[1];
  4815  00093A  C038  F035         	movff	_Tecla+1,_Freq+1
  4816                           
  4817                           ;Lib_generador.c: 40: Freq [2] = Tecla[2];
  4818  00093E  C039  F036         	movff	_Tecla+2,_Freq+2
  4819  000942  0012               	return	
  4820  000944                     __end_of_Freq_charge:
  4821                           	opt stack 0
  4822                           pclatu	equ	0xFFB
  4823                           pclath	equ	0xFFA
  4824                           tblptru	equ	0xFF8
  4825                           tblptrh	equ	0xFF7
  4826                           tblptrl	equ	0xFF6
  4827                           tablat	equ	0xFF5
  4828                           prodh	equ	0xFF4
  4829                           prodl	equ	0xFF3
  4830                           intcon	equ	0xFF2
  4831                           intcon2	equ	0xFF1
  4832                           postinc0	equ	0xFEE
  4833                           fsr0h	equ	0xFEA
  4834                           fsr0l	equ	0xFE9
  4835                           wreg	equ	0xFE8
  4836                           indf1	equ	0xFE7
  4837                           fsr1h	equ	0xFE2
  4838                           fsr1l	equ	0xFE1
  4839                           bsr	equ	0xFE0
  4840                           indf2	equ	0xFDF
  4841                           fsr2h	equ	0xFDA
  4842                           fsr2l	equ	0xFD9
  4843                           status	equ	0xFD8
  4844                           
  4845 ;; *************** function _E_Write *****************
  4846 ;; Defined at:
  4847 ;;		line 13 in file "Memoria.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  address         1    wreg     unsigned char 
  4850 ;;  data            1    0[COMRAM] unsigned char 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  address         1    1[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4862 ;;      Params:         1       0       0       0       0       0       0       0       0
  4863 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4865 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4866 ;;Total ram usage:        2 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_ISR_H
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text29
  4876  000C28                     __ptext29:
  4877                           	opt stack 0
  4878  000C28                     _E_Write:
  4879                           	opt stack 23
  4880                           
  4881                           ;incstack = 0
  4882                           ;E_Write@address stored from wreg
  4883  000C28  6E02               	movwf	E_Write@address,c
  4884                           
  4885                           ;Memoria.c: 14: EEADR = address;
  4886  000C2A  C002  FFA9         	movff	E_Write@address,4009	;volatile
  4887                           
  4888                           ;Memoria.c: 15: EEDATA = data;
  4889  000C2E  C001  FFA8         	movff	E_Write@data,4008	;volatile
  4890                           
  4891                           ;Memoria.c: 16: EECON1bits.EEPGD = 0;
  4892  000C32  9EA6               	bcf	4006,7,c	;volatile
  4893                           
  4894                           ;Memoria.c: 17: EECON1bits.CFGS = 0;
  4895  000C34  9CA6               	bcf	4006,6,c	;volatile
  4896                           
  4897                           ;Memoria.c: 18: EECON1bits.WREN = 1;
  4898  000C36  84A6               	bsf	4006,2,c	;volatile
  4899                           
  4900                           ;Memoria.c: 20: EECON2 = 0X55;
  4901  000C38  0E55               	movlw	85
  4902  000C3A  6EA7               	movwf	4007,c	;volatile
  4903                           
  4904                           ;Memoria.c: 21: EECON2 = 0XAA;
  4905  000C3C  0EAA               	movlw	170
  4906  000C3E  6EA7               	movwf	4007,c	;volatile
  4907                           
  4908                           ;Memoria.c: 22: EECON1bits.WR = 1;
  4909  000C40  82A6               	bsf	4006,1,c	;volatile
  4910  000C42                     i2l368:
  4911  000C42  B2A6               	btfsc	4006,1,c	;volatile
  4912  000C44  D7FE               	goto	i2l368
  4913                           
  4914                           ;Memoria.c: 25: EECON1bits.WREN = 0;
  4915  000C46  94A6               	bcf	4006,2,c	;volatile
  4916  000C48  0012               	return		;funcret
  4917  000C4A                     __end_of_E_Write:
  4918                           	opt stack 0
  4919                           pclatu	equ	0xFFB
  4920                           pclath	equ	0xFFA
  4921                           tblptru	equ	0xFF8
  4922                           tblptrh	equ	0xFF7
  4923                           tblptrl	equ	0xFF6
  4924                           tablat	equ	0xFF5
  4925                           prodh	equ	0xFF4
  4926                           prodl	equ	0xFF3
  4927                           intcon	equ	0xFF2
  4928                           intcon2	equ	0xFF1
  4929                           postinc0	equ	0xFEE
  4930                           fsr0h	equ	0xFEA
  4931                           fsr0l	equ	0xFE9
  4932                           wreg	equ	0xFE8
  4933                           indf1	equ	0xFE7
  4934                           fsr1h	equ	0xFE2
  4935                           fsr1l	equ	0xFE1
  4936                           bsr	equ	0xFE0
  4937                           indf2	equ	0xFDF
  4938                           fsr2h	equ	0xFDA
  4939                           fsr2l	equ	0xFD9
  4940                           status	equ	0xFD8
  4941                           pclatu	equ	0xFFB
  4942                           pclath	equ	0xFFA
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           intcon2	equ	0xFF1
  4951                           postinc0	equ	0xFEE
  4952                           fsr0h	equ	0xFEA
  4953                           fsr0l	equ	0xFE9
  4954                           wreg	equ	0xFE8
  4955                           indf1	equ	0xFE7
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           bsr	equ	0xFE0
  4959                           indf2	equ	0xFDF
  4960                           fsr2h	equ	0xFDA
  4961                           fsr2l	equ	0xFD9
  4962                           status	equ	0xFD8
  4963                           
  4964                           	psect	rparam
  4965  0000                     pclatu	equ	0xFFB
  4966                           pclath	equ	0xFFA
  4967                           tblptru	equ	0xFF8
  4968                           tblptrh	equ	0xFF7
  4969                           tblptrl	equ	0xFF6
  4970                           tablat	equ	0xFF5
  4971                           prodh	equ	0xFF4
  4972                           prodl	equ	0xFF3
  4973                           intcon	equ	0xFF2
  4974                           intcon2	equ	0xFF1
  4975                           postinc0	equ	0xFEE
  4976                           fsr0h	equ	0xFEA
  4977                           fsr0l	equ	0xFE9
  4978                           wreg	equ	0xFE8
  4979                           indf1	equ	0xFE7
  4980                           fsr1h	equ	0xFE2
  4981                           fsr1l	equ	0xFE1
  4982                           bsr	equ	0xFE0
  4983                           indf2	equ	0xFDF
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988                           	psect	temp
  4989  000041                     btemp:
  4990                           	opt stack 0
  4991  000041                     	ds	1
  4992  0000                     int$flags	set	btemp
  4993                           pclatu	equ	0xFFB
  4994                           pclath	equ	0xFFA
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           intcon2	equ	0xFF1
  5003                           postinc0	equ	0xFEE
  5004                           fsr0h	equ	0xFEA
  5005                           fsr0l	equ	0xFE9
  5006                           wreg	equ	0xFE8
  5007                           indf1	equ	0xFE7
  5008                           fsr1h	equ	0xFE2
  5009                           fsr1l	equ	0xFE1
  5010                           bsr	equ	0xFE0
  5011                           indf2	equ	0xFDF
  5012                           fsr2h	equ	0xFDA
  5013                           fsr2l	equ	0xFD9
  5014                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    319
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      64
    BANK0           160      8       8
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_L in COMRAM

    _ISR_L->_port

Critical Paths under _ISR_H in COMRAM

    _ISR_H->i2_Mensaje_LCD
    i2_Mensaje_LCD->i2_LCD_dato
    i2_enter->i2_LCD_cmd
    i2_clr_screen->i2_LCD_cmd
    i2_LCD_cmd->i2_esperar_LCD
    i2_LCD_dato->i2_esperar_LCD

Critical Paths under _main in BANK0

    _main->_Mensaje_LCD
    _ini_LCD->_LCD_cmd
    _Mensaje_LCD->_LCD_dato
    _enter->_LCD_cmd
    _clr_screen->_LCD_cmd
    _LCD_cmd->_esperar_LCD
    _LCD_dato->_esperar_LCD

Critical Paths under _ISR_L in BANK0

    None.

Critical Paths under _ISR_H in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_L in BANK1

    None.

Critical Paths under _ISR_H in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_L in BANK2

    None.

Critical Paths under _ISR_H in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_L in BANK3

    None.

Critical Paths under _ISR_H in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_L in BANK4

    None.

Critical Paths under _ISR_H in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_L in BANK5

    None.

Critical Paths under _ISR_H in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_L in BANK6

    None.

Critical Paths under _ISR_H in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_L in BANK7

    None.

Critical Paths under _ISR_H in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1099
                                              7 BANK0      1     1      0
                             _E_Read
                        _Mensaje_LCD
                     _Teclado_config
                       _conf_puertos
                         _conf_timer
                          _conversor
                            _ini_LCD
                         _osc_config
                           _retardos
 ---------------------------------------------------------------------------------
 (1) _retardos                                             5     5      0     222
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ini_LCD                                              1     1      0      69
                                              2 BANK0      1     1      0
                            _LCD_cmd
                          _setup_LCD
 ---------------------------------------------------------------------------------
 (2) _setup_LCD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversor                                            5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _conf_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_puertos                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Teclado_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mensaje_LCD                                          5     5      0     419
                                              2 BANK0      5     5      0
                           _LCD_dato
                         _clr_screen
                              _enter
 ---------------------------------------------------------------------------------
 (2) _enter                                                0     0      0      69
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _clr_screen                                           0     0      0      69
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      69
                                              1 BANK0      1     1      0
                        _esperar_LCD
 ---------------------------------------------------------------------------------
 (2) _LCD_dato                                             1     1      0      69
                                              1 BANK0      1     1      0
                        _esperar_LCD
 ---------------------------------------------------------------------------------
 (3) _esperar_LCD                                          1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _E_Read                                               1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_L                                               17    17      0      90
                                             25 COMRAM    17    17      0
                               _port
 ---------------------------------------------------------------------------------
 (6) _port                                                 3     3      0      90
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_H                                               15    15      0    1456
                                              7 COMRAM    15    15      0
                            _E_Write
                        _Freq_charge
                        _cambio_frec
                       _leer_teclado
                      i2_Mensaje_LCD
                         i2_retardos
 ---------------------------------------------------------------------------------
 (8) i2_retardos                                           5     5      0     150
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (8) i2_Mensaje_LCD                                        5     5      0     600
                                              2 COMRAM     5     5      0
                         i2_LCD_dato
                       i2_clr_screen
                            i2_enter
 ---------------------------------------------------------------------------------
 (9) i2_enter                                              0     0      0     102
                          i2_LCD_cmd
 ---------------------------------------------------------------------------------
 (9) i2_clr_screen                                         0     0      0     102
                          i2_LCD_cmd
 ---------------------------------------------------------------------------------
 (10) i2_LCD_cmd                                           1     1      0     102
                                              1 COMRAM     1     1      0
                      i2_esperar_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LCD_dato                                           1     1      0     102
                                              1 COMRAM     1     1      0
                      i2_esperar_LCD
 ---------------------------------------------------------------------------------
 (11) i2_esperar_LCD                                       1     1      0      71
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _leer_teclado                                         1     1      0     240
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _cambio_frec                                          4     4      0     135
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (8) _Freq_charge                                          3     3      0      75
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _E_Write                                              2     1      1     216
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _E_Read
   _Mensaje_LCD
     _LCD_dato
       _esperar_LCD
     _clr_screen
       _LCD_cmd
         _esperar_LCD
     _enter
       _LCD_cmd
         _esperar_LCD
   _Teclado_config
   _conf_puertos
   _conf_timer
   _conversor
   _ini_LCD
     _LCD_cmd
       _esperar_LCD
     _setup_LCD
   _osc_config
   _retardos

 _ISR_L (ROOT)
   _port

 _ISR_H (ROOT)
   _E_Write
   _Freq_charge
   _cambio_frec
   _leer_teclado
   i2_Mensaje_LCD
     i2_LCD_dato
       i2_esperar_LCD
     i2_clr_screen
       i2_LCD_cmd
         i2_esperar_LCD
     i2_enter
       i2_LCD_cmd
         i2_esperar_LCD
   i2_retardos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8       8       5        5.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      40       1       68.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48      20        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 06 11:46:42 2017

                      _j 003A              __CFG_BOR$ON 000000                       bsr 000FE0  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              main@Senal_m 0067  
                    l121 0AA4                      l221 0AB0                      l119 0A7C  
                    l362 0CA4                      l347 07FA       Freq_charge@flag_OF 0002  
           __CFG_CPB$OFF 000000                      _PR2 000FCB             __CFG_CPD$OFF 000000  
     Freq_charge@flag_nZ 0001                      prod 000FF3                      wreg 000FE8  
          ??_Freq_charge 0001             __CFG_LVP$OFF 000000          __end_of_LCD_cmd 0BB8  
           __CFG_WDT$OFF 000000                     l2011 0876                     l2005 0864  
                   l2009 0872                     l2203 0A82                     l2061 076E  
                   l2205 0A86                     l2071 07B6                     l2073 07CE  
                   l2065 0786                     l2067 079E                     l2077 07E6  
    osc_config@parametro 0060                     l1819 0ADE                     l1941 012E  
                   l1951 0168                     l1953 016E                     l1961 0282  
                   l1945 0138                     l1971 02DA                     l1955 01CA  
                   l1963 0296                     l1957 0226                     l1967 02D0  
                   l1977 02F8                     l1993 083C                     l1987 0828  
                   l1999 0850                     u1107 0BA0                     u1117 0BAA  
                   u1127 0B78                     u1137 0B82                     u1147 0AB6  
                   u1067 09CE                     u1157 0AC0                     u1077 09EA  
                   _LATA 000F89                     _LATB 000F8A                     u1167 0ACC  
                   u1087 0A02                     _LATC 000F8B                     _LATD 000F8C  
                   u1097 0A1A                     _LATE 000F8D                     _Freq 0034  
                   _main 0A3E                     _sine 7FBE                     _port 0BB8  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0041  
            ?i2_LCD_dato 0001          __end_of_E_Write 0C4A           ??_conf_puertos 0060  
                   prodh 000FF4                     prodl 000FF3                     start 0118  
          __CFG_IESO$OFF 000000          __end_ofi2_enter 0CEA            __CFG_MCLRE$ON 000000  
             i2_retardos 0944             ___param_bank 000000             ?_esperar_LCD 0001  
   __size_of_cambio_frec 003A       __size_ofi2_LCD_cmd 0024            __CFG_PLLDIV$1 000000  
       __end_of_LCD_dato 0B92          ??i2_Mensaje_LCD 0003                    ?_main 0001  
                  _EEADR 000FA9         esperar_LCD@bussy 0060          i2retardos@M_Aux 0005  
                  ?_port 0001                    _CMCON 000FB4            ??_Mensaje_LCD 0062  
                  _T2CON 000FCA                    i1l110 00A6                    i1l114 00D0  
                  i2l100 05BC                    i2l101 05F6                    i2l221 0AF8  
                  i2l311 0936                    i2l303 090E                    i2l368 0C42  
                  _ISR_H 0008                    _ISR_L 0018                    _PORTB 000F81  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96             Freq_charge@i 0003            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000                    _Aux_T 0040  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000            ?_leer_teclado 0001  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000                    _Tecla 0037  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000                    _Senal 003E  
         __CFG_EBTR3$OFF 000000          __end_of_ini_LCD 0A3E            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _enter 0CD2              LCD_cmd@dato 0061                    pclath 000FFA  
  __size_ofi2_clr_screen 0008                    tablat 000FF5               _Frecuencia 003F  
                  status 000FD8      __end_of_Freq_charge 0944           __CFG_ICPRT$OFF 000000  
  leer_teclado@aux_portb 0001       i2Mensaje_LCD@i_665 0006          __initialization 0C4A  
           __end_of_main 0AA6       Mensaje_LCD@Numeros 0062             __end_of_sine 7FFE  
           __end_of_port 0BDE                   ??_main 0067                   ??_port 0017  
          __activetblptr 000002                   ?_ISR_H 0001                   ?_ISR_L 0001  
    __size_ofi2_LCD_dato 0026                ??_LCD_cmd 0061           ??_leer_teclado 0001  
           i2_clr_screen 0CEA          __CFG_CCP2MX$OFF 000000                   _ADCON1 000FC1  
                 ?_enter 0001      __end_of_Mensaje_LCD 030C                   _EEDATA 000FA8  
                 _EECON2 000FA7                ??_E_Write 0002                   i1l1563 0076  
                 i1l1565 007A                   i1l1581 00BC                   i2l1111 0654  
                 i1l1575 00AC                   i1l1569 0098                   i2l1123 067E  
                 i2l1115 0662                   i2l2101 040C                   i2l1143 06B8  
                 i2l1135 069C                   i2l1119 0670                   i2l2111 04B4  
                 i2l1161 06EE                   i2l2121 04D6                   i2l2105 0468  
                 i2l1251 08BE                   i2l1147 06C6                   i2l1139 06AA  
                 i2l2115 04BC                   i2l2107 047C                   i2l1165 06FC  
                 i2l1157 06E0                   i2l1263 08E4                   i2l1255 08C6  
                 i2l1183 0732                   i2l2143 0562                   i2l1281 0922  
                 i2l1273 08FC                   i2l1169 070A                   i2l2137 054E  
                 i2l1267 08EC                   i2l1259 08E0                   i2l1187 0740  
                 i2l1179 0724                   i2l1277 090A                   i2l2085 031C  
                 i2l2149 0576                   i2l2181 05F0                   i2l2095 034E  
                 i2l2159 0592                   i2l2097 0354                   i2l2089 0324  
                 i2l1481 097C                   i2l2099 03B0                   i2l1491 0998  
                 i2l1475 096C                   i2l2179 05CA                   i2l1493 099C  
                 i2l1469 095C                   i2l1487 098C                   i2l1839 0B22  
              ??i2_enter 0003        __end_ofi2_LCD_cmd 0C28                   _OSCCON 000FD3  
                 _E_Read 0C96         ??_Teclado_config 0060                   _V_Time 7EBF  
         __CFG_XINST$OFF 000000              ?i2_retardos 0001           __CFG_STVREN$ON 000000  
                 clear_0 0C50                ??_ini_LCD 0062             LCD_dato@dato 0061  
       __end_of_retardos 08B2     __end_of_conf_puertos 0C96             __mediumconst 7EBE  
                 port@M1 0018                   port@M2 0019                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8              _Freq_charge 08B2  
             __accesstop 0060  __end_of__initialization 0C56          __CFG_PBADEN$OFF 000000  
              ?_LCD_dato 0001            ___rparam_used 000001            __end_of_ISR_H 0632  
          __end_of_ISR_L 0118           __pcstackCOMRAM 0001            __end_of_enter 0CDA  
   __size_of_esperar_LCD 004A              _Mensaje_LCD 011C                  ??_ISR_H 0008  
                ??_ISR_L 001A             Mensaje_LCD@i 0066      __size_ofi2_retardos 0082  
                ??_enter 0062       __size_of_conversor 00BA   __size_ofi2_esperar_LCD 0040  
                ?_E_Read 0001             ??i2_LCD_dato 0002               ??_LCD_dato 0061  
   __end_of_leer_teclado 074E       __size_of_setup_LCD 001A               _clr_screen 0CDA  
                _LCD_cmd 0B92       __end_ofi2_LCD_dato 0C04               _conf_timer 0CC8  
                _E_Write 0C28                  i2_enter 0CE2          __CFG_VREGEN$OFF 000000  
        __size_of_E_Read 0016                  __Hparam 0000                  __Lparam 0000  
              ?_retardos 0001            ??_cambio_frec 0001        __end_of_conversor 0808  
  __size_of_conf_puertos 0018                  __pcinit 0C4A            i2_esperar_LCD 0AF0  
                __ramtop 0800                  __ptext0 0A3E                  __ptext1 0808  
                __ptext2 0CBE                  __ptext3 09C6                  __ptext4 0C64  
                __ptext5 074E                  __ptext6 0CC8                  __ptext7 0C7E  
                __ptext8 0CAC                  __ptext9 011C                  _ini_LCD 09C6  
  __end_ofi2_Mensaje_LCD 04EA                _T2CONbits 000FCA           i2LCD_dato@dato 0002  
         ISR_H@aux_portb 0016       i2esperar_LCD@bussy 0001           __pintcode_body 04EA  
   end_of_initialization 0C56            __Lmediumconst 7EBE                  int_func 04EA  
             _osc_config 0CBE                i2_LCD_cmd 0C04        __end_of_setup_LCD 0C7E  
           _conf_puertos 0C7E             ??i2_retardos 0001               ??_retardos 0060  
                postinc0 000FEE      cambio_frec@Frec_aux 0001           ?i2_esperar_LCD 0001  
    cambio_frec@Freq_aux 0002      __end_of_cambio_frec 0B6A              ?_clr_screen 0001  
            ?_conf_timer 0001             ?_Freq_charge 0001       __end_ofi2_retardos 09C6  
         i2Mensaje_LCD@i 0007    __size_of_leer_teclado 011C              _CCP1CONbits 000FBD  
         __end_of_E_Read 0CAC               ?i2_LCD_cmd 0001        __size_of_LCD_dato 0028  
         __end_of_V_Time 7FBE     i2Mensaje_LCD@Numeros 0003               conversor@n 0060  
           ?_Mensaje_LCD 0001      start_initialization 0C4A             _leer_teclado 0632  
              _V_Puerto1 003D                _V_Puerto2 003C                 ??_E_Read 0060  
            ?_osc_config 0001      __size_of_clr_screen 0008      __size_of_conf_timer 000A  
            _cambio_frec 0B30              E_Write@data 0001          ??i2_esperar_LCD 0001  
          ??_esperar_LCD 0060         __CFG_LPT1OSC$OFF 000000  __size_of_Teclado_config 0012  
               ?_LCD_cmd 0001              __pbssCOMRAM 002B            __pcstackBANK0 0060  
               ?_E_Write 0001                 ?i2_enter 0001              ??i2_LCD_cmd 0002  
          retardos@M_Aux 0064                __pintcode 0008            __pmediumconst 7EBE  
      __size_of_retardos 00AA              __pintcodelo 0018                 ?_ini_LCD 0001  
    __size_of_osc_config 000A              _flag_cambio 003B           __size_of_ISR_H 062A  
         __size_of_ISR_L 0100                _conversor 074E      __end_of_esperar_LCD 0AF0  
          ?i2_clr_screen 0001           __size_of_enter 0008            i2LCD_cmd@dato 0002  
   __size_of_Freq_charge 0092                 _LATEbits 000F8D                 _LCD_dato 0B6A  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 i2u120_47 0BF4  
               i2u121_47 0AFE                 i2u122_47 0B08                 i2u123_47 0B14  
               i2u117_47 0C10                 i2u118_47 0C1A                 i2u119_47 0BEA  
               _PIR1bits 000F9E                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
              _setup_LCD 0C64                 _UCONbits 000F6D           ??i2_clr_screen 0003  
           ??_clr_screen 0062               ?_conversor 0001             ??_conf_timer 0060  
       __size_of_LCD_cmd 0026     __size_of_Mensaje_LCD 01F0         Mensaje_LCD@F3825 0031  
            _INTCON2bits 000FF1         __size_of_E_Write 0022         Mensaje_LCD@i_665 0065  
       __size_ofi2_enter 0008          conversor@frec_m 0063               _EECON1bits 000FA6  
       cambio_frec@F3840 002E                 __Hrparam 0000   __size_ofi2_Mensaje_LCD 01DE  
               __Lrparam 0000       __end_of_clr_screen 0CE2       __end_of_conf_timer 0CD2  
             ?_setup_LCD 0001              _esperar_LCD 0AA6           _Teclado_config 0CAC  
  __CFG_FOSC$INTOSCIO_EC 000000         __size_of_ini_LCD 0078           E_Write@address 0002  
               __ptext10 0CD2                 __ptext11 0CDA                 __ptext20 030C  
               __ptext12 0B92                 __ptext21 0CE2                 __ptext13 0B6A  
               __ptext22 0CEA                 __ptext14 0AA6                 __ptext23 0C04  
               __ptext15 0C96                 __ptext24 0BDE                 __ptext25 0AF0  
               __ptext17 0BB8                 __ptext26 0632                 __ptext27 0B30  
               __ptext19 0944                 __ptext28 08B2                 __ptext29 0C28  
           ??_osc_config 0060            E_Read@address 0060            __size_of_main 0068  
          __size_of_port 0026                 _retardos 0808             ?_cambio_frec 0001  
 __end_of_Teclado_config 0CBE           conversor@F3848 002B               _CVRCONbits 000FB5  
               int$flags 0041    __CFG_CPUDIV$OSC1_PLL2 000000              ??_conversor 0060  
             _INTCONbits 000FF2       __end_of_osc_config 0CC8            i2_Mensaje_LCD 030C  
               intlevel1 0000                 intlevel2 0000               i2_LCD_dato 0BDE  
   __end_ofi2_clr_screen 0CF2          ?_Teclado_config 0001              ??_setup_LCD 0060  
  __end_ofi2_esperar_LCD 0B30           ?i2_Mensaje_LCD 0001              _SSPCON1bits 000FC6  
             _SPPCFGbits 000F63             port@v_puerto 0017            ?_conf_puertos 0001  
